<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>philosophy on 记事本</title>
    <link>https://pub.oribos.cn/tags/philosophy/</link>
    <description>Recent content in philosophy on 记事本</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©nierheim</copyright>
    <lastBuildDate>Thu, 27 Feb 2020 23:23:21 +0800</lastBuildDate><atom:link href="https://pub.oribos.cn/tags/philosophy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>三类优秀的程序员</title>
      <link>https://pub.oribos.cn/web/reprint/2020022701/</link>
      <pubDate>Thu, 27 Feb 2020 23:23:21 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2020022701/</guid>
      <description>引用自reuixiy
通常，科学家、发明家、企业家、工程师都是职业的并列对象，这里，我们把这四者跃迁到属性，把属于工程师的程序员跃迁为对象，来看看程序员的类型。
第一类：程序员［科学家］·形而上学
这类比较专一，通常是一领域的精通者，通常是拿显微镜在看针尖，熟知其领域的每一细节，优化每一常人不知道的细节到极致。这类的新发现能让常人耳目一新，下两类的新发明则能让人眼前一亮。还有，这类与以下两类不同，这类不像以下两类一样「产量」高。
第二类：程序员［发明家］·哲学
这类比较广博，通常是多领域的通识者，这类有两个对象：一、纵向为主的，拓扑是链式的；二、横向为主的，拓扑是网状的。
第三类：程序员［企业家］·政治伦理
这类与以上两类又不同，以上两类求理论之美，这类则是求应用之美。与上一类不同，上一类的发明可能会比较生棱极客，这类的发明则可以称为产品，更能博得常人喜欢，所以总是能够成就很大的商业价值。
其他的，就回退到程序员的默认属性——工程师，使用重复的模板，建造同样的重复的建筑（当然，这里是对整体而言，而对其中的每一个体而言，体验的都是新鲜的「创造」）。最后，以上三类的共同之处，生活中都有好像永不褪色的热情和好奇心，这是以上三类能够成就优秀的凭借。
至于我，目前只是一个正步入程序员世界中的工程师的入门学徒，一个正入局的局外人。</description>
    </item>
    
    <item>
      <title>引号的逻辑的哲学</title>
      <link>https://pub.oribos.cn/web/reprint/002.html</link>
      <pubDate>Fri, 31 Jan 2020 08:56:33 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/002.html</guid>
      <description>引用自reuixiy
我们知道，对于引号，在小学的时候老师教我们要先使用「双引号」（“”），然后如果双引号里面还要使用引号，则要使用「单引号」（‘’）。举例来说：1
他站起来问：“老师，‘什么是哲学’的‘哲学’是什么意思？”
这种用法，可能我们从小学用到现在，自己也从来没有问过一个..为什么..，直到当我们接触到直角引号的时候。什么是直角引号呢？举例来说：
他站起来问：「老师，『什么是哲学』的『哲学』是什么意思？」
当我们看到这个例子的第一眼，一定会..肯定..：双引号与单引号用反了。可这个例子其实是正确的。2
终于，我们不得不问：为什么会有这样的差异呢？为什么对于直角引号，要先使用 「」 再使用 『』 呢？为什么要先使用双引号 “” 再使用单引号 ‘’ 呢？第三个问题暂时不答，但我们可以通过回答第二个问题来回答第一个问题——因为当引用内再进行引用时，这个引用就是「第二引用」，也就自然应该用「双层」的引号，即双引号。3
但其实，我写这篇文章的最初推动是为了鼓吹哲学的作用。也就是说，为什么我们会肯定地说「双引号与单引号用反了」呢？因为我们已将「先使用双引号再使用单引号」这句话深深刻入了自己的脊髓，故对于引号的使用，我们都是直接本能地机械执行这句话，而非通过大脑去质问其定义——为什么要先使用双引号再使用单引号。4而哲学的作用就是——通过对「定义」的定义的不断探求，来纠正错误的机械执行。
说明：改自维基百科引号词条的例子，下同。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
参见：https://ja.wikipedia.org/wiki/引用符#一覧&amp;#160;&amp;#x21a9;&amp;#xfe0e;
说明：当然，博主既非专业人士，也没有进行相应的考据。故博主的这个回答只是逻辑世界中的单纯分析，历史事实中的胡言乱语。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
说明：这也是一个「概念之困」。&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>网页字体排版的哲学：段首缩排或段间距</title>
      <link>https://pub.oribos.cn/web/reprint/2018090503.html</link>
      <pubDate>Wed, 05 Sep 2018 21:40:48 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2018090503.html</guid>
      <description>引用自reuixiy
写在前面 首先声明：本人非印刷行业的专业人士，也非网页设计的专业人士，故这系列博文全当本人的个人消遣。同时，也希望读者对此系列文章的正误有自己的思考。
写这系列文章的直接原因是发现很多中文网页的字体排版实在是不忍直视，甚至博客也是如此，故打算写一写这方面的博文。主要原因是目前网上缺乏这方面的文章，或者这方面的知识尚未普及，而它却关系到我们每人每天都在阅读和输入的文字，其重要性不言而喻。故本人希望借此系列文章来普及一下这方面的知识，即使可能只是微薄之力，毕竟本人只是一个外行人。
然而，如果说主要原因之上还有个根本原因，那本人写这系列文章的根本原因：作为一个爱哲学的人，本人想探索一下网页字体排版的..本质规定性..。另外，尽管文中有部分技术细节，但读懂此系列文章无需 HTML 与 CSS 基础，甚至无需任何计算机知识基础。
系列前言 自写博客一年多来，虽然优秀的文章没有写几篇，但却了解了一些 Web 前端的知识。这些知识是本人在博客建设中的有力工具，而作为一个追求完美的人，博客建设中最令人犯愁的莫过于排版。
首先，排版是一个很大的学问，所以在写之前先界定个范围。此系列博文主要是关于网页中文字体排版，什么意思呢？
「网页」意味着 CSS； 「中文」意味着不谈英文； 「字体」意味着不谈页面。 然而，「排版」必然会受到各方面的影响，所以还是会涉及部分上面的「不谈」部分。另外，CSS 的应用已经不止网页，几乎你现在所见的各种中文字体排版都离不开 CSS，它的影响也远不止于网页。因此，可以说此系列适用于与中文字体排版有关的各种，比如：电子书、微信文章排版、Word 文章排版等等。
题外话：目前中文电子书的排版简直是一片混乱之地。即使你用 Kindle，且电子书来自 Amazon，大部分直接打开后还是不忍直视。此外，虽然 Kindle 能够对电子书进行一些基本调整，但由于电子书排版的不统一，导致同时阅读多本电子书时，需要频繁重复设置以达到一致的阅读效果。若无意外，本人之后应该会特别写一篇《在 Kindle 上优雅地阅读》，在此先打住。
此系列博文包括但不限于：
分段样式； 标点符号； 字体选择； 各种数字； 特殊样式。 另外，本人的一些实践都会在本博客和我的另一个博客上体现。
系列核心 先提一个看起来很傻的问题：为什么标题与段落的样式要有所区别？「因为名称不同，」你可能会答，「试想标题与段落的样式一样，正如一对双胞胎，那怎么分辨呢？」这个回答是无误的，但不够犀利，或者说只停留在了表象。深究一下问题本身，即：为什么要在「段落」之上另起「标题」？因为表达需求。
无论是哪种字体排版样式，它都是表达需求的表现形式。如果说现在是果，那么历史就是因，我们可以通过回顾历史来寻找原因。从网页开始，沿着时间轴逆行，越过纸质书，来到原始的手写，一个「双重历史」。第一重，从印刷回溯到手写；第二重，从打字回溯到手写。我们虽是第一重的客体，但也是第二重的主体，回溯到在纸上书写时，这是我们都有过的体验。当自己在纸上书写时，标题与段落之间的样式肯定会有所区别，比如标题是居中。这就是表达需求的主观解释，每个人都能自行体验。
逆行一下，上文是从排版样式回溯到表达需求，我们也可以尝试从表达需求回归到排版样式。正如需强调一个词时，就用粗体来表现，行文上有一个表达需求，排版上就要将这个表达需求表现，即排版样式。这意味着在讨论字体排版样式前，必须先回溯表达需求，然后再结合..表现要求..谈排版样式的美观问题，而不是凭主观美感空谈。
分段样式 本节主要探讨分段的两种排版样式：段首缩排与段间距。
现状概述 为什么先说这个呢？因为这似乎是网页上字体排版的空白区，很多网站的分段的排版样式都是段间距 + 段首缩排，不忍直视。其实，这是没明白分段的表达需求，在网页默认的段间距排版的基础上硬加段首缩排，极其荒谬。
表达需求 字体排版样式都是表达需求的表现形式，所以在讨论分段的排版样式之前，必须先回溯分段的表达需求。为什么有分段这个表达需求呢，或者说为什么要分段，什么情况就要分段呢？印象中这应该是小学老师教授过的内容，大家应该都有所理解，个人理解：
内容不直接相关； 上下是并列关系； 逻辑有一定转折。 也许还有其它方面，但其根本是前后不连续，不管是内容、逻辑。因此对于这个表达需求，在排版样式上则表现为将段落分离开来，即一种分段标识。另有一种..特殊情况..，如果不连续的程度很大，段落的分离程度也要更大，即一种分段停顿。
排版样式 要将段落分离开来，有两种合理的排版样式：段首缩排与段间距。两种样式的区别：
段首缩排，段首缩进两字符，段间距等于行间距。 段间距式，段首不进行缩进，段间距大于行间距。 在网页中，段落用 &amp;lt;p&amp;gt; 表示，行间距即 line-height，段间距可以用 margin 控制，段首缩排用 text-indent 实现。
怎么评价这两种样式呢？段首缩排在「一统王国」也许会被禁止，因为它使页面的左边变成了一条曲折的线，不符合最智慧的线——直线。也就是说，其实从美观角度，段首缩排是一种..畸形排版..，因为它违背了基本的对齐原则，而遵守这一原则的段间距则使页面显得整齐。但是，段首缩排似乎一直是书籍印刷的标准段落排版样式，难道印刷行业一直错了？
这时，我们就要考虑..表现要求..。书籍印刷的表现要求是专注文字内容，因此阅读体验应当置于美观之上。由于段间距比段首缩排的分离程度更大，一字连一字阅读时易产生隔阂感、停顿感，故段首缩排与之相比更为优雅，有着更好的阅读体验。
对于网页，与纸质书的翻页不同，它是竖直方向的连续滚动。当网页快速滚动时，就使段落上下相连的段首缩排显得繁密易懵，而段落上下间隔的段间距则显得结构简明。在这个快速滚动的互联网时代，段间距也就比段首缩排更适合于网页，因为它更利于快速传达信息。
对于诗歌，左边对齐的段间距排版更适合它。首先，如果称诗歌的「节」为「段」的话，与长文章不同，诗歌的每句很短，每段也很短。当采用段首缩排时，左边不对齐的美观问题将会变得格外突出。其次，诗歌注重意境，对于意境的想象，留白较大的段间距排版更为优雅。
最后，对于分段需求的特殊情况——分段停顿，由于其不连续的程度很大，因此应当采用分离程度更大的段间距排版，而非段首缩排。另外，从美观角度，段首缩进四个字符是不忍直视的。</description>
    </item>
    
    <item>
      <title>浅谈博客文章的两种分类方式</title>
      <link>https://pub.oribos.cn/web/reprint/2017121105.html</link>
      <pubDate>Mon, 11 Dec 2017 17:42:20 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2017121105.html</guid>
      <description>引用自reuixiy
NexT 主题把分类（categories）作为文章分类的主要方式，而标签（tags）则是辅助。我个人很喜欢这种设计，分类为主，标签为辅。
先浅谈下分类。「物以类聚」，有相同点的「物」可分为一类。「横看成岭侧成峰，远近高低各不同」，能有很多的分类。「身在此山中」，认知上有一个主分类。1
可见，一定要有个主分类，博客的主分类应该是什么呢？我们日常生活中的分类都是树状分类（也可以说是有阶级性的，有「父」与「子」的关系），比如：知识、公务员、文件浏览器……我们博客写的文章，肯定是与日常生活紧密相联的，故写的文章也逃不了这种树状分类，对博客来说也就是 categories，因此 categories 应为博客的主分类。
但是，树状分类有个缺陷——只能实现一种维度的分类，比如：你的 Windows 电脑按文件类型有视频、音乐、文档三个文件夹，但是如果这三个文件夹中各有些你很喜欢的，而你想把它们放到一起，这时该怎么办呢？
1）创建个「我喜欢」文件夹，然后把它们复制到「我喜欢」文件夹？不可以，因为这样「我喜欢」文件夹就有视频、音乐、文档三种文件类型，又乱了。
2）那基于 1，再在「我喜欢」文件夹中创建视频、音乐、文档文件夹？可以，但如果某天你突然讨厌其中的某个文件了，你就要删除两遍。
3）那在 1 中，把它们移动到「我喜欢」文件夹，而不是复制？不可以，因为这样你视频、音乐、文档三种文件类型下的所有文件就不在一个文件夹了。
这其实就是树状分类的天生缺陷，「文件类型」是一种分类维度，而「喜欢」是另一种分类维度，在树状分类的 Windows 文件浏览器中，无法实现不同分类维度的共存，除非重复文件。
要弥补这个缺陷，就要利用 tags。与 categories 不同，tags 是一种平行分类，一个 tag 就是一种分类维度。因此，对于多维度分类的问题，利用 tags 即可简单地解决。在上面的例子中，如果 Windows 文件浏览器可以在你喜欢的文件上加上「我喜欢」的 tag，然后再有个「tags 浏览器」，问题就简单且完美地解决了。
以上，分类（categories）应作为文章的主要分类方式，标签（tags）则是不可或缺的辅助，以弥补树状分类的缺陷。
https://disq.us/p/1ltvq6f&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
  </channel>
</rss>
