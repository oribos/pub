<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>typography on 记事本</title>
    <link>https://pub.oribos.cn/tags/typography/</link>
    <description>Recent content in typography on 记事本</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©nierheim</copyright>
    <lastBuildDate>Thu, 05 Mar 2020 21:22:26 +0800</lastBuildDate><atom:link href="https://pub.oribos.cn/tags/typography/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>简单实现 Google Fonts 的异步加载</title>
      <link>https://pub.oribos.cn/web/reprint/2020030501.html</link>
      <pubDate>Thu, 05 Mar 2020 21:22:26 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2020030501.html</guid>
      <description>引用自reuixiy
在 Web 中，中文一般是不推荐使用网络字体的——因为汉字庞大的字符数让中文网络字体的体积异常庞大。但是，如果你经常浏览国外的英文网站，你会发现——使用了网络字体的网页是真的很美！所以，为何中文网页不能一样美呢？
技术进步带来的字体子集化和用户网络带宽的普遍提升，中文网页其实已经可以开始尝试网络字体了。不知你是否注意到，苹果的中文官网其实就已经在使用中文网络字体了。就在昨天1，Google Fonts 推出了全新的设计，以庆祝其 10 岁的生日，而其中一个重要的新亮点，就是添加了可变字体（Variable Fonts）的支持。
所以，中文网络字体的普及是刻不容缓的。这需要字体设计师的努力，也需要网页开发者的努力。作为开发者，尝试使用网络字体其实也是我们的一个职责——Making the Web Beautiful!
2
1 2 - &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;style.css&amp;#34;&amp;gt; + &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;style.css&amp;#34; media=&amp;#34;print&amp;#34; onload=&amp;#34;this.media=&amp;#39;all&amp;#39;&amp;#34;&amp;gt; 参考：
Defer non-critical CSS | web.dev Can I use &amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;? loadCSS | GitHub How to load CSS Asynchronously | Stack Overflow The Simplest Way to Load CSS Asynchronously | Filament Group, Inc. https://twitter.com/googlefonts/status/1234967000193150978&amp;#160;&amp;#x21a9;&amp;#xfe0e;
测试前需要前往 Network 将 Disable cache 勾选。&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>可变字体（Variable Fonts）尝鲜</title>
      <link>https://pub.oribos.cn/web/reprint/2020022901.html</link>
      <pubDate>Sat, 29 Feb 2020 22:00:19 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2020022901.html</guid>
      <description>引用自reuixiy
最近在系统地学习 Web，在 MDN 的 CSS 学习区的 Web fonts 一节底部，看到 Variable Fonts 即「可变字体」一词，瞌睡之中突然来了点兴趣——因为之前间断地见过这个术语，前不久还在 Twitter 上刷到过好几次——于是我点开 Variable fonts guide，并马上被这个示例的字体和视觉效果吸引了，决定马上尝试一下。二话不说，CTRL + U 发现 Amstelvar VF 然后 Google 到 Amstelvar，先 Star 然后开始尝鲜可变字体！
前言 不过，可变字体其实已经不新鲜了，Google 结果中浏览到这篇 Get started with variable fonts，而此文的发布日期是 2017 年的 2 月份。但无论如何，可变字体对我来说还是新鲜的，而..尝试..一下也发现这是值得的——可变字体让人耳目一新。
⌛经过一番尝试，我已经将上文提到的 Amstelvar 这个开源的可变字体应用到了我的博客——你现在所见的本博客正文中的英文即是。下面，就来说说可变字体在 Web 上的食用方法😺。
正文 首先，我们去 GitHub 上下载 Amstelvar 字体，将 Amstelvar-Roman-VF.ttf 和其斜体 Amstelvar-Italic-VF.ttf 下载到本地。
然后，我们将 .ttf 压缩成既现代又节约的 .woff2，可以使用 ttf2woff2，或者你也可以尝试其它方法。
接下来，我们添加 CSS 代码，使用 @font-face 指定一下我们要使用的字体：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 /* https://github.</description>
    </item>
    
    <item>
      <title>引号的逻辑的哲学</title>
      <link>https://pub.oribos.cn/web/reprint/002.html</link>
      <pubDate>Fri, 31 Jan 2020 08:56:33 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/002.html</guid>
      <description>引用自reuixiy
我们知道，对于引号，在小学的时候老师教我们要先使用「双引号」（“”），然后如果双引号里面还要使用引号，则要使用「单引号」（‘’）。举例来说：1
他站起来问：“老师，‘什么是哲学’的‘哲学’是什么意思？”
这种用法，可能我们从小学用到现在，自己也从来没有问过一个..为什么..，直到当我们接触到直角引号的时候。什么是直角引号呢？举例来说：
他站起来问：「老师，『什么是哲学』的『哲学』是什么意思？」
当我们看到这个例子的第一眼，一定会..肯定..：双引号与单引号用反了。可这个例子其实是正确的。2
终于，我们不得不问：为什么会有这样的差异呢？为什么对于直角引号，要先使用 「」 再使用 『』 呢？为什么要先使用双引号 “” 再使用单引号 ‘’ 呢？第三个问题暂时不答，但我们可以通过回答第二个问题来回答第一个问题——因为当引用内再进行引用时，这个引用就是「第二引用」，也就自然应该用「双层」的引号，即双引号。3
但其实，我写这篇文章的最初推动是为了鼓吹哲学的作用。也就是说，为什么我们会肯定地说「双引号与单引号用反了」呢？因为我们已将「先使用双引号再使用单引号」这句话深深刻入了自己的脊髓，故对于引号的使用，我们都是直接本能地机械执行这句话，而非通过大脑去质问其定义——为什么要先使用双引号再使用单引号。4而哲学的作用就是——通过对「定义」的定义的不断探求，来纠正错误的机械执行。
说明：改自维基百科引号词条的例子，下同。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
参见：https://ja.wikipedia.org/wiki/引用符#一覧&amp;#160;&amp;#x21a9;&amp;#xfe0e;
说明：当然，博主既非专业人士，也没有进行相应的考据。故博主的这个回答只是逻辑世界中的单纯分析，历史事实中的胡言乱语。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
说明：这也是一个「概念之困」。&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>Google Fonts 已支持思源宋体！</title>
      <link>https://pub.oribos.cn/web/reprint/008.html</link>
      <pubDate>Tue, 11 Dec 2018 15:12:04 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/008.html</guid>
      <description>引用自reuixiy
就在昨天，一次偶然，我打开了 Google Fonts 的网站，眼前一亮！惊奇地发现了被英文字母包围的汉字！什么？Google Fonts 居然支持汉字了！？是的，查阅相关资料后，根据国外的这个网站上的两篇文章：
New fonts added on Google Fonts — 18 November 2018 New fonts added on Google Fonts — 07 December 2018 可知：Google Fonts 分别在 11 月 18 日和 12 月 07 日提供了思源黑体和思源宋体的简繁支持，而且高达 6 种字重支持，其中思源宋体更是高达 7 种字重。这可了不得啊！更重要的是：它支持了目前电子显示屏上稀缺的宋体，这将会是一个伟大的进步！要知道，对于中文书籍，宋体一直是正文印刷的标准字体，而不是目前电子显示屏上普遍的黑体，因为..宋体的衬线更适合长时间阅读..。
优势 为什么宋体的衬线更适合长时间的阅读？可以有个「主观解释」，即自己可直接体会的解释。实践起来也简单，阅读一会儿宋体后回到黑体，阅读一会儿黑体后再回到宋体。
我自己的主观感受：看完宋体后再回到黑体，四字就浮上心头——..索然无味..。因此，作为长文章为主、文字内容为主的博客，强烈建议马上使用 Google Fonts 提供的思源宋体！你可能注意到，我的博客已经开始使用了，所以应该如何使用呢？
使用 官网搜索 Noto Serif SC，点 + 号选择，选择好后底部会弹出一个提示框，里面有使用说明。还可以点击提示框中的 CUSTOMIZE 定制要加载的字重与语言。
1
之后，点击 EMBED，复制生成的代码，添加到博客的 &amp;lt;head&amp;gt; 标签内，并修改博客的相关 CSS 样式，指定 font-family 和 font-weight。
最后，考虑到宋体的笔画要比黑体细，因此建议将字体的颜色加深，比如修改为 #333，以达到较好的阅读效果。</description>
    </item>
    
    <item>
      <title>网页字体排版的哲学：段首缩排或段间距</title>
      <link>https://pub.oribos.cn/web/reprint/2018090503.html</link>
      <pubDate>Wed, 05 Sep 2018 21:40:48 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2018090503.html</guid>
      <description>引用自reuixiy
写在前面 首先声明：本人非印刷行业的专业人士，也非网页设计的专业人士，故这系列博文全当本人的个人消遣。同时，也希望读者对此系列文章的正误有自己的思考。
写这系列文章的直接原因是发现很多中文网页的字体排版实在是不忍直视，甚至博客也是如此，故打算写一写这方面的博文。主要原因是目前网上缺乏这方面的文章，或者这方面的知识尚未普及，而它却关系到我们每人每天都在阅读和输入的文字，其重要性不言而喻。故本人希望借此系列文章来普及一下这方面的知识，即使可能只是微薄之力，毕竟本人只是一个外行人。
然而，如果说主要原因之上还有个根本原因，那本人写这系列文章的根本原因：作为一个爱哲学的人，本人想探索一下网页字体排版的..本质规定性..。另外，尽管文中有部分技术细节，但读懂此系列文章无需 HTML 与 CSS 基础，甚至无需任何计算机知识基础。
系列前言 自写博客一年多来，虽然优秀的文章没有写几篇，但却了解了一些 Web 前端的知识。这些知识是本人在博客建设中的有力工具，而作为一个追求完美的人，博客建设中最令人犯愁的莫过于排版。
首先，排版是一个很大的学问，所以在写之前先界定个范围。此系列博文主要是关于网页中文字体排版，什么意思呢？
「网页」意味着 CSS； 「中文」意味着不谈英文； 「字体」意味着不谈页面。 然而，「排版」必然会受到各方面的影响，所以还是会涉及部分上面的「不谈」部分。另外，CSS 的应用已经不止网页，几乎你现在所见的各种中文字体排版都离不开 CSS，它的影响也远不止于网页。因此，可以说此系列适用于与中文字体排版有关的各种，比如：电子书、微信文章排版、Word 文章排版等等。
题外话：目前中文电子书的排版简直是一片混乱之地。即使你用 Kindle，且电子书来自 Amazon，大部分直接打开后还是不忍直视。此外，虽然 Kindle 能够对电子书进行一些基本调整，但由于电子书排版的不统一，导致同时阅读多本电子书时，需要频繁重复设置以达到一致的阅读效果。若无意外，本人之后应该会特别写一篇《在 Kindle 上优雅地阅读》，在此先打住。
此系列博文包括但不限于：
分段样式； 标点符号； 字体选择； 各种数字； 特殊样式。 另外，本人的一些实践都会在本博客和我的另一个博客上体现。
系列核心 先提一个看起来很傻的问题：为什么标题与段落的样式要有所区别？「因为名称不同，」你可能会答，「试想标题与段落的样式一样，正如一对双胞胎，那怎么分辨呢？」这个回答是无误的，但不够犀利，或者说只停留在了表象。深究一下问题本身，即：为什么要在「段落」之上另起「标题」？因为表达需求。
无论是哪种字体排版样式，它都是表达需求的表现形式。如果说现在是果，那么历史就是因，我们可以通过回顾历史来寻找原因。从网页开始，沿着时间轴逆行，越过纸质书，来到原始的手写，一个「双重历史」。第一重，从印刷回溯到手写；第二重，从打字回溯到手写。我们虽是第一重的客体，但也是第二重的主体，回溯到在纸上书写时，这是我们都有过的体验。当自己在纸上书写时，标题与段落之间的样式肯定会有所区别，比如标题是居中。这就是表达需求的主观解释，每个人都能自行体验。
逆行一下，上文是从排版样式回溯到表达需求，我们也可以尝试从表达需求回归到排版样式。正如需强调一个词时，就用粗体来表现，行文上有一个表达需求，排版上就要将这个表达需求表现，即排版样式。这意味着在讨论字体排版样式前，必须先回溯表达需求，然后再结合..表现要求..谈排版样式的美观问题，而不是凭主观美感空谈。
分段样式 本节主要探讨分段的两种排版样式：段首缩排与段间距。
现状概述 为什么先说这个呢？因为这似乎是网页上字体排版的空白区，很多网站的分段的排版样式都是段间距 + 段首缩排，不忍直视。其实，这是没明白分段的表达需求，在网页默认的段间距排版的基础上硬加段首缩排，极其荒谬。
表达需求 字体排版样式都是表达需求的表现形式，所以在讨论分段的排版样式之前，必须先回溯分段的表达需求。为什么有分段这个表达需求呢，或者说为什么要分段，什么情况就要分段呢？印象中这应该是小学老师教授过的内容，大家应该都有所理解，个人理解：
内容不直接相关； 上下是并列关系； 逻辑有一定转折。 也许还有其它方面，但其根本是前后不连续，不管是内容、逻辑。因此对于这个表达需求，在排版样式上则表现为将段落分离开来，即一种分段标识。另有一种..特殊情况..，如果不连续的程度很大，段落的分离程度也要更大，即一种分段停顿。
排版样式 要将段落分离开来，有两种合理的排版样式：段首缩排与段间距。两种样式的区别：
段首缩排，段首缩进两字符，段间距等于行间距。 段间距式，段首不进行缩进，段间距大于行间距。 在网页中，段落用 &amp;lt;p&amp;gt; 表示，行间距即 line-height，段间距可以用 margin 控制，段首缩排用 text-indent 实现。
怎么评价这两种样式呢？段首缩排在「一统王国」也许会被禁止，因为它使页面的左边变成了一条曲折的线，不符合最智慧的线——直线。也就是说，其实从美观角度，段首缩排是一种..畸形排版..，因为它违背了基本的对齐原则，而遵守这一原则的段间距则使页面显得整齐。但是，段首缩排似乎一直是书籍印刷的标准段落排版样式，难道印刷行业一直错了？
这时，我们就要考虑..表现要求..。书籍印刷的表现要求是专注文字内容，因此阅读体验应当置于美观之上。由于段间距比段首缩排的分离程度更大，一字连一字阅读时易产生隔阂感、停顿感，故段首缩排与之相比更为优雅，有着更好的阅读体验。
对于网页，与纸质书的翻页不同，它是竖直方向的连续滚动。当网页快速滚动时，就使段落上下相连的段首缩排显得繁密易懵，而段落上下间隔的段间距则显得结构简明。在这个快速滚动的互联网时代，段间距也就比段首缩排更适合于网页，因为它更利于快速传达信息。
对于诗歌，左边对齐的段间距排版更适合它。首先，如果称诗歌的「节」为「段」的话，与长文章不同，诗歌的每句很短，每段也很短。当采用段首缩排时，左边不对齐的美观问题将会变得格外突出。其次，诗歌注重意境，对于意境的想象，留白较大的段间距排版更为优雅。
最后，对于分段需求的特殊情况——分段停顿，由于其不连续的程度很大，因此应当采用分离程度更大的段间距排版，而非段首缩排。另外，从美观角度，段首缩进四个字符是不忍直视的。</description>
    </item>
    
  </channel>
</rss>
