<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>记事本</title>
    <link>https://pub.oribos.cn/</link>
    <description>Recent content on 记事本</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©nierheim</copyright>
    <lastBuildDate>Mon, 29 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://pub.oribos.cn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>欢迎访问</title>
      <link>https://pub.oribos.cn/web/info/20220801.html</link>
      <pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/info/20220801.html</guid>
      <description>The quick brown fox jump sover the lazy dog.</description>
    </item>
    
    <item>
      <title>有关github</title>
      <link>https://pub.oribos.cn/web/note/2022/2022082901.html</link>
      <pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022082901.html</guid>
      <description>在actions里使用密钥 第一步 生成一个ssh密钥对
ssh-keygen -t rsa -b 4096 -C &amp;#34;xxx@xxx.xxx&amp;#34; -f gh-pages 获得一个gh-pages.pub为公钥，gh-pages 为私钥
第二步 在源仓库的配置页面部署Secrets私钥文件
私钥文件ACTIONS_DEPLOY_KEY
此次也可以部署目标仓库的账户私钥。
第三步 在目标仓库的配置页面部署Deploy Keys公钥文件
选中Allow write access使密钥对可以对仓库进行写入，未选此项将仅访问该仓库代码。</description>
    </item>
    
    <item>
      <title>页面CF加速</title>
      <link>https://pub.oribos.cn/web/note/2022/2022082401.html</link>
      <pubDate>Wed, 24 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022082401.html</guid>
      <description>addEventListener(&amp;#34;fetch&amp;#34;,event =&amp;gt; {let url = new URL(event.request.url);url.hostname =&amp;#34;youdomain.com&amp;#34;;let request = new Request(url,event.request);event.respondWith(fetch(request,{headers:{&amp;#39;Referer&amp;#39;:&amp;#39;https://youdomain.com/&amp;#39;,&amp;#39;User-Agent&amp;#39;:&amp;#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36&amp;#39;}}))}); // 替换成你OneDrive的网址const upstream = &amp;#39;*-my.sharepoint.com&amp;#39;// 替换成你OneDrive的网址const upstream_mobile = &amp;#39;*-my.sharepoint.com&amp;#39;// 下面的配置都不用动const upstream_path = &amp;#39;/&amp;#39;const blocked_region = [&amp;#39;KP&amp;#39;, &amp;#39;SY&amp;#39;, &amp;#39;PK&amp;#39;, &amp;#39;CU&amp;#39;]const blocked_ip_address = [&amp;#39;0.0.0.0&amp;#39;, &amp;#39;127.0.0.1&amp;#39;]const https = trueconst disable_cache = falseconst replace_dict = {&amp;#39;$upstream&amp;#39;: &amp;#39;$custom_domain&amp;#39;,&amp;#39;//sunpma.</description>
    </item>
    
    <item>
      <title>hexo模板</title>
      <link>https://pub.oribos.cn/web/note/2022/2022082301.html</link>
      <pubDate>Tue, 23 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022082301.html</guid>
      <description>简述 下载本仓库代码，修改CNAME文件，添加自己的文章，将本仓库代码推送github，即可访问自己的博客。
使用步骤 第一步 获取源码 下载这个hexo模板的代码 git 下载代码
git clone https://e.coding.net/frednab/dev/blog-mould.git
未安装git可通过下载github源码获得该项目源码
下载完毕后删除.git文件夹
rm -rf .git 或在windows平台显示隐藏文件，删除隐藏的.git文件夹。
第二步 修改配置 修改hexo的配置 修改 source/CNAME文件里的域名
此仓库已经预置butterfly主题
通过修改_config.butterfly.yml来改变主题的配置，如主题颜色，样式，插件等。
通过修改_config.yml来改变hexo站点的配置，如站点标题，语言，目录等。
其他文件不需要配置
第三步 更新文章 撰写或者将之前的文章复制到source/_posts目录下 通过hexo new page 文章.md新建文档
或者在source/_posts目录下撰写自己的文章
第四步 发布博客 通过多种方式发布博客 方式一 本地运行hexo的http服务来浏览博客 需要本地服务器安装nodejs和npm
执行如下命令安装hexo
npm install -g hexo-cli 执行如下命令安装该项目的依赖
npm ci 执行如下命令来运行hexo的http服务
hexo server 方式二 生成静态文件,部署到nginx或IIS 需要本地服务器安装nodejs和npm
执行如下命令安装hexo
npm install -g hexo-cli 执行如下命令安装该项目的依赖
npm ci 执行如下命令生成html静态文件
hexo g 生成html静态文件夹public，配合nginx或iis来部署静态网站。或者上传到虚拟主机，云服务器上部署。
方式三 将源码推送到github，触发github actions自动构建 通过以下命令将该仓库里的源码推送到github仓库</description>
    </item>
    
    <item>
      <title>ACME v2证书自动化快速入门</title>
      <link>https://pub.oribos.cn/web/note/2022/2022082213.html</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022082213.html</guid>
      <description>安装acme.sh 建议切换到root模式，可以减少证书安装时的问题
sudo su 注意：MacOS 不用切换到root更简单。
curl https://get.acme.sh | sh -s email=my@example.com 如果上面官方下载地址失败 或者 太慢，可以选用国内的备用地址
curl https://gitcode.net/cert/cn-acme.sh/-/raw/master/install.sh?inline=false | sh -s email=my@example.com 对域名授权 参见步骤
证书申请 &amp;amp; 部署 使用获得的部署命令进行证书申请
下载的证书文件中，应该含以下证书文件：
ca.cer 域名.cer fullchain.cer 证书私钥 private.key。
在 NGINX 上安装 SSL 证书 在本文中，介绍如何在 NGINX Web 服务器上安装 SSL 证书并设置 HTTPS 重定向。 准备工
已下载包含证书文件的 ZIP 压缩文件。
下载的证书文件中，应该含以下证书文件：
domain-ca.pem
domain-chain.pem
domain-root.pem
证书私钥 private.key。
步骤1. 上传文件到网站服务器 登录网站的 Nginx 服务器，选择一个需要存放证书文件的目录，将下载的证书文件（domain-ca.pem，domain-chain.pem，domain-root.pem ）和 私钥 （private.key） 上传到选择的目录中。
步骤2. 将证书文件重命名为 .crt 结尾的文件 Nginx 要求合并所有 .</description>
    </item>
    
    <item>
      <title>hexo记录</title>
      <link>https://pub.oribos.cn/web/note/2022/2022081902.html</link>
      <pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022081902.html</guid>
      <description>触发条件修改 将自动构建的触发条件由推送代码到推送tags触发
新增样式 加粗字体的彩色效果
b, strong { -webkit-background-clip: text; -webkit-text-fill-color: transparent; --strong-gradient: linear-gradient(62deg,#188bfd,#a03bff)!important; background-image: var(--strong-gradient); font-weight: bolder; } 执行npm i 执行一次npm i生成package-lock.json，以后执行npm ci会依照 package-lock.json 里的依赖版本精准安装。
但是在 NPM v6 版本后，新增了命令 npm ci 用于安装依赖。
npm i 和 npm ci 区别： npm i npm i 将安装所有 package.json 中的依赖。
如果使用 ^ 或 ~ 标识依赖的版本，npm i 将精准安装所标识的版本。
npm i 会更新 package-lock.json 文件。
适用场景 安装新依赖或者升级已有依赖。
npm ci npm ci 将删除 node_modules 文件夹以确保干净的环境。
npm ci 会依照 package-lock.json 里的依赖版本精准安装。</description>
    </item>
    
    <item>
      <title>mirrors</title>
      <link>https://pub.oribos.cn/web/note/2022/2022081917.html</link>
      <pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022081917.html</guid>
      <description>开源镜像索引 源自 Moieo 开源镜像索引站
大学镜像 名称 地址 清华大学 https://mirrors.tuna.tsinghua.edu.cn/ 北京外国语大学 https://mirrors.bfsu.edu.cn/ 北京大学 https://mirrors.pku.edu.cn/ 中国科学技术大学 https://mirrors.ustc.edu.cn/ 兰州大学 http://mirror.lzu.edu.cn/ 浙江大学 http://mirrors.zju.edu.cn/ 东北大学 http://mirror.neu.edu.cn/ 华中科技大学 http://mirrors.hust.edu.cn/ 重庆大学 http://mirrors.cqu.edu.cn/ 大连东软信息学院 http://mirrors.neusoft.edu.cn/ 大连理工大学 http://mirror.dlut.edu.cn/ 上海交通大学FTP http://ftp.sjtu.edu.cn/ 上海交通大学 https://mirrors.sjtug.sjtu.edu.cn/ 山东女子学院 https://mirrors.sdwu.edu.cn/ 哈尔滨工业大学 http://mirrors.hit.edu.cn/ 北京理工大学 http://mirror.bit.edu.cn/ 云南大学 https://mirrors.ynu.edu.cn/ 高能物理研究所 http://mirror.ihep.ac.cn/ 南京大学 https://mirrors.nju.edu.cn/ 南阳理工学院 https://mirror.nyist.edu.cn/ 山东大学 https://mirrors.sdu.edu.cn/ 西北农林科技大学 https://mirrors.nwafu.edu.cn/ 企业镜像 名称 地址 阿里 http://mirrors.aliyun.com/ 腾讯 https://mirrors.cloud.tencent.com/ 搜狐 http://mirrors.sohu.com/ 网易 https://mirrors.163.com/ 首都在线 http://mirrors.yun-idc.com/ 公云 http://mirrors.pubyun.com/ 华为 https://mirrors.huaweicloud.com/ Docker Hub 镜像 名称 地址 网易 https://hub-mirror.</description>
    </item>
    
    <item>
      <title>mirrors</title>
      <link>https://pub.oribos.cn/mirrors/</link>
      <pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/mirrors/</guid>
      <description>开源镜像索引 大学镜像 名称 地址 清华大学 https://mirrors.tuna.tsinghua.edu.cn/ 北京外国语大学 https://mirrors.bfsu.edu.cn/ 北京大学 https://mirrors.pku.edu.cn/ 中国科学技术大学 https://mirrors.ustc.edu.cn/ 兰州大学 http://mirror.lzu.edu.cn/ 浙江大学 http://mirrors.zju.edu.cn/ 东北大学 http://mirror.neu.edu.cn/ 华中科技大学 http://mirrors.hust.edu.cn/ 重庆大学 http://mirrors.cqu.edu.cn/ 大连东软信息学院 http://mirrors.neusoft.edu.cn/ 大连理工大学 http://mirror.dlut.edu.cn/ 上海交通大学FTP http://ftp.sjtu.edu.cn/ 上海交通大学 https://mirrors.sjtug.sjtu.edu.cn/ 山东女子学院 https://mirrors.sdwu.edu.cn/ 哈尔滨工业大学 http://mirrors.hit.edu.cn/ 北京理工大学 http://mirror.bit.edu.cn/ 云南大学 https://mirrors.ynu.edu.cn/ 高能物理研究所 http://mirror.ihep.ac.cn/ 南京大学 https://mirrors.nju.edu.cn/ 南阳理工学院 https://mirror.nyist.edu.cn/ 山东大学 https://mirrors.sdu.edu.cn/ 西北农林科技大学 https://mirrors.nwafu.edu.cn/ 企业镜像 名称 地址 阿里 http://mirrors.aliyun.com/ 腾讯 https://mirrors.cloud.tencent.com/ 搜狐 http://mirrors.sohu.com/ 网易 https://mirrors.163.com/ 首都在线 http://mirrors.yun-idc.com/ 公云 http://mirrors.pubyun.com/ 华为 https://mirrors.huaweicloud.com/ Docker Hub 镜像 名称 地址 网易 https://hub-mirror.</description>
    </item>
    
    <item>
      <title>关于对hexo构建的说明</title>
      <link>https://pub.oribos.cn/web/note/2022/2022081901.html</link>
      <pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022081901.html</guid>
      <description>说明 静态部署 hexo生成后的文件本身就是静态文件，部署这些代码并不需要复杂的环境，仅仅需要一个nginx即可。可以部署到对象存储桶里，通过cdn、云服务器访问。
构建hexo需要使用npm环境，安装git，有些项目还会使用其他的包管理器。必然需要部署许多环境，而某些用户的web环境可能并没办法部署这些工具（比如过去的虚拟主机，某些组件版本过低不符合hexo运行要求等）。这种情况使用本地电脑管理代码，测试效果后部署到对应web环境下执行简单的nginx静态部署。
自动构建 将hexo源码部署到github（或其他代码托管服务也可以执行自动构建，本文仅以github举例，下文不再特殊说明）后，本质就是拉取代码、拉取git submodule子模块、执行包管理npm、生产html文件，部署静态网站。初期开发阶段需要实时浏览页面效果，需要尽快获得页面内容可以服务器上执行和部署。后续对代码的维护，变更，文章更新等均已经可以做到无服务器化。使用自动构建可以省去购置和管理服务器的问题，节省成本和时间。
不需要额外添加token 在github上部署代码，github actions获取和推送到自己的仓库是不需要tokens，github actions的运行环境会自动获取系统内的用户信息进行验证，不需要额外添加tokens
并不要求私有仓库 即使你在github仓库里配置了github actions所需要的token或其他密钥信息，通过引用变量名来使用这些密钥信息。使仓库开源并不会导致这些变量对应的密钥信息泄露。千万不要在开源仓库里文件直接引用密钥信息
github会检测开源仓库，保存有密钥信息的文件被github检测到后会邮件通知用户作废此私钥。
效率的使用hexo的主题 使用主题有三种常用方式。①可以使用git submodule 引用hexo主题，也可以②拉取hexo主题后通过删除其目录下的.git文件来自行保存主题文件。可以③使用npm i 主题名来部署由npm管理的主题。出于对后续更新主题的考虑，请尽量确保使用过程中hexo的主题文件保持不变，可以使用根目录下_config.主题名.yml配置主题。
管理仓库 github仓库里使用用户名.github.io为仓库名可以直接部署为用户名.github.io的域名的页面，但github pages静态服务部署的仓库名不一定非要用户名.github.io为仓库名。以其他为仓库名，并配置自己域名，也可以通过自己域名访问。
可以通过将hexo源文件保存在master或main分支上，自动构建后生成的代码推送到gh-pages分支上，在GitHub pages配置页面选用gh-pages分支。</description>
    </item>
    
    <item>
      <title>github组织账号</title>
      <link>https://pub.oribos.cn/web/note/2022/2022081813.html</link>
      <pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022081813.html</guid>
      <description>github组织账号 https://github.com/账号名
组织账号可以不用新建用户就可以创建新的账号名，组织账号的仓库可以让多个用户同时管理，不用再创建仓库以后再添加其他用户。
当ssh证书为一个多个的时候可以管理多个仓库。</description>
    </item>
    
    <item>
      <title>价值观问题</title>
      <link>https://pub.oribos.cn/web/note/2022/2022081803.html</link>
      <pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022081803.html</guid>
      <description>价值观冲突 愚公移山，故事里描述愚公多么艰苦，移山多么努力。但解决问题的却是“天神”，真实生活中面对绵延数十里的大山，不提升工具的情况下需要几千年才能完成。
生产力和生产关系，在生产力低下的情况下，盲目的跃进只会适得其反。
陋室铭里写山不在高有仙则灵水不在深，有龙则灵。但世间哪座山里有仙？哪里水里有龙！</description>
    </item>
    
    <item>
      <title>记录</title>
      <link>https://pub.oribos.cn/web/note/2022/2022081801.html</link>
      <pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022081801.html</guid>
      <description>零碎记录 上海房价6万一平，厨房10平60万，有60万够吃十几年外卖。建议上海回归大锅饭时代，每家出资60万组建小区食堂，既干净又省钱，还能把厨房省出来给卧室或者客厅增加空间。
一块地亩产800斤小麦，小麦收购价在1.5元每斤。一亩地小麦刚好购买一只帝王蟹。
还有些人每天专门寻找核酸检测点做核酸，因为是免费的，不做的话万一去别的地方要求核酸，还得自己掏钱去做。
友情提示，没有第二国籍无法注销母国籍。
美国公司每年向世界制造的食品饮料里含有氢氧酸，在美国生物实验室发现大量氢氧酸。​ 氢氧酸又名二零醚、正氧烷、氧乙烯、零醇、脱碳甲醛、氢化超氧酰、脱氰零醛肟、二聚氢氧酸酐、氢化脱磺硫酸、氧化脱羧甲酸、氢化脱苄苯甲醇、氢化脱硝硝酸、氢化脱氰氰酸、氢碱酸。 酸雨和农药的主要成分，在许多生化药剂里也有残余。纯净的氢氧酸无色无味，不慎饮用不易觉察。
陋室铭里写山不在高有仙则灵水不在深，有龙则灵。但世间哪座山里有仙？哪个水里有龙！人人都知世界最高喜马拉雅山珠穆朗玛峰8848米，谁又知道泰山多高最高峰叫什么名？
1977年-1979年高考录取率低于10%，是历届高考最难的几批次。
两千多万人养老医疗问题，土地私有制问题、新台币和经济问题、台公务员和警察军队组织问题、基层组织社区农村问题。这么多问题不是一句话能解决的。
别的不说，那些喊着去美国抓人追回400亿的人是相当可笑。有没有这个人，有没有带走几亿钱都不一定。拿点小钱，挂几百亿的帐，真抓回来凑不够几百亿那不得牵涉更多的人？
强烈建议增加白酒院士，烟草院士。还有馒头院士，葡萄院士都可以来。这样国际顶尖科研工作者交流的时候，别人是导弹学家，工程学家，材料学家。自己是做酒的，种葡萄的。非常符合中国文化。
狼和狮子都吃羊，羊不够吃了，引进外地黑羊。数十年后，黑羊表示:黑命贵！
精英狼表示：不准歧视黑羊，黑羊也是羊，黑羊也是国家的主人。
怎么样，三连下去还有人关心本地羊死活吗？</description>
    </item>
    
    <item>
      <title>随笔0811</title>
      <link>https://pub.oribos.cn/web/note/2022/2022081101.html</link>
      <pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022081101.html</guid>
      <description>200公里 200公里建造隧道难度过大，高铁还可以考虑，高速太长了。
房价 房价暴跌的话，让那些手握十几个房本的包租婆怎么活！
问题 如果抗战时期，日本人闯进家中抢夺文物，是应该让日本人抢走还是当场摔碎？
为什么有人怀疑是美国人制作的病毒？全世界其他国家有能力人为制造病毒还是有科研文章有刊登人类拥有了对病毒进行基因编辑的技术？
疑问 资本主义，如果赚足够的资本是可以获得社会财富的，而无产阶级的国家无论怎么奋斗都是无产的，因为所有资产都不是私人的。
红绿灯 九宫格红绿灯，故障时会出现红灯绿灯均亮起的情况。</description>
    </item>
    
    <item>
      <title>随笔0803</title>
      <link>https://pub.oribos.cn/web/note/2022/2022080301.html</link>
      <pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022080301.html</guid>
      <description>博客构成 包括主程序，内容，主题三部分。每个部分配置一个或多个仓库。主程序只有基本的配置文件和静态资源，不负责文章和内容的更新。更新文章并不会影响主程序的代码，文章通过子模块进行更新。必要的文章还有多个仓库备份。</description>
    </item>
    
    <item>
      <title>202208</title>
      <link>https://pub.oribos.cn/web/note/2022/20220801/</link>
      <pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/20220801/</guid>
      <description>2022-08-01 资源收缩 改善资料管理，对git仓库进行优化整合。使用不同的分支来管理类似的内容，删除不必要的仓库，减少仓库数量。</description>
    </item>
    
    <item>
      <title>windows server安装docker</title>
      <link>https://pub.oribos.cn/web/note/2022/2022072601.html</link>
      <pubDate>Tue, 26 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022072601.html</guid>
      <description>在Server2019上安装docker 启动powershell
安装Docker
首先输入以下的命令
Install-Module -Name DockerMsftProvider -Repository PSGallery -Force
这里系统提示安装 NuGet 提供程序，我们需要输入 Y
接着继续输入以下命令
Install-Package -Name docker -ProviderName DockerMsftProvider
PowerShell 询问是否信任包源“DockerDefault”时，键入 A 以继续进行安装
这一步会等得比较久，因为需要下载docker文件，耐心等待。网上也有离线安装的方式，有兴趣的可以去试试。
安装完成后，执行重启计算机的命令
Restart-Computer -Force
重启之后，再次打开powershell，输入
docker version</description>
    </item>
    
    <item>
      <title>随笔0707</title>
      <link>https://pub.oribos.cn/web/note/2022/2022070702.html</link>
      <pubDate>Thu, 07 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022070702.html</guid>
      <description>做完核酸手上盖章 近期无锡一街道“为了避免人员聚集”给黄码转绿码做完核酸检测的群众手上盖章。还要求在炎炎夏日“保持三天”
古代对犯人脸上刻字印章，二战时某组织对犹太人手臂上纹字标识，当代对质检猪肉进行盖章
疫情各类奇葩事 </description>
    </item>
    
    <item>
      <title>点子</title>
      <link>https://pub.oribos.cn/web/note/2022/2022070401.html</link>
      <pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022070401.html</guid>
      <description>备用资料库 建立一个妥善的包罗万象的资料库，用来存放之前的相片、文章、手机截图、音乐等等人生痕迹型资料。一时兴起写的短文、使用过期的加密口令、作废的项目源码等等。
github千年计划使用的QR编码 github千年计划，将程序代码编码成QR，然后打印到防锈防腐的特殊材料上。需要时扫描QR码。如何获得这种QR编码方式，将文章、源码编码成QR打印后保存。
使用 Ed25519 算法生成 SSH 密钥 创建Ed25519算法的ssh密钥，
ssh-keygen -t ed25519 -C &amp;quot;denalon@qq.com&amp;quot; veracrypt加密同bitlocker配合 打开veracrypt，创建一个基于文件的加密文件，文件名为Thor.Ragnarok.2017.1080p.BluRay.TrueHD.7.1.x264.iso大小为16G，对于备份类，需要创建一个VHDX文件，加载VHDX文件为虚拟磁盘后，对文件进行bitlocker加密，并配置口令。</description>
    </item>
    
    <item>
      <title>202207</title>
      <link>https://pub.oribos.cn/web/note/2022/20220701/</link>
      <pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/20220701/</guid>
      <description>2022-07-01 中国广电5G信号，收到号码，但是手机搜不到信号
2022-07-03 网上爆料10亿居民身份信息泄露，数据文件23.88T
2077-07-04 全州县“超生子女社会调剂”</description>
    </item>
    
    <item>
      <title>随笔0620</title>
      <link>https://pub.oribos.cn/web/note/2022/2022062002.html</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022062002.html</guid>
      <description>精准红码 6月13日，很多网友在社交平台反馈，多名扫码进入“取款难”储户维权群而欲前往郑州沟通村镇银行沟通取款事宜的储户，其健康码都被赋红码，这其中既包含已达到郑州即发现健康码变红的储户，还包括多位尚未前往郑州，仅在填报完信息后就被神奇赋予“红码”的储户。
离奇的是，被赋红码的均是该维权群的储户，而无论是一同前往郑州的储户朋友，还是行踪轨迹几乎一致的储户家人，其健康码依旧是绿码。因为赋码原因显示为“正在实施集中或居家医学隔离观察的入境人员”，很多储户在达到郑州后就被带去集中隔离。更有赴河南的储户被当地派出所告知，只要返程，健康码就可以由红变绿。如此吊诡的事件引发人们普遍质疑，本应用于疫情防控的健康码或许已被滥用。
精准阳性 沈阳丹东封控一个都月，精准阳性，有位93岁老人为了出门看病，脱衣服展示病情被人举报流氓，羞愤上吊自杀。
唐山烧烤店打人事件 6月10日被打，13日媒体报道转入普通病房，21日公告只说是进入普通病房治疗。
河北省公安厅于6月21日发布关于陈某志等涉嫌寻衅滋事、暴力殴打他人等案件侦办进展情况的通报——“2022年6月10日凌晨，唐山市路北区某烧烤店发生一起寻衅滋事、暴力殴打他人案件，造成恶劣影响，引发广泛关注。河北省委、省政府、公安部高度重视，要求迅速查清全案，依法严惩犯罪。河北省公安厅组织指挥案件侦办并指定异地管辖，公安部迅速派出专家组一线指导督导。唐山、廊坊等地公安机关迅速行动，经全力工作，目前案件侦办取得阶段性进展。”
根据通报，6月7日，43岁男子陈某亮等4人从江苏驾车至河北唐山，与41岁男子陈某志等人合谋实施网络赌博洗钱违法犯罪活动。6月10日凌晨，陈某志等5人与陈某亮等4人在唐山市路北区某烧烤店聚餐饮酒。其间，2时40分，陈某志对下班后在同店就餐的31岁女子王某某进行骚扰，遭拒后伙同25岁男子马某齐、陈某亮等人，对王某某、29岁女子刘某某等4人进行殴打，2时47分逃离，2时55分4名被害人由120送医。2时41分接群众报警后，唐山市公安局路北分局机场路派出所民警率辅警数人于3时09分赶到现场开展处置工作。
在公安部统一组织指挥下，河北、江苏公安机关密切配合，于6月11日将9名涉案人员（7男2女）全部抓获。6月12日，经检察机关批准，9名犯罪嫌疑人被逮捕。
连日来，唐山市县两级公安机关开通举报电话、设立举报邮箱，并通过现场接待、网上搜集等，深入发动群众举报各类违法犯罪线索，公安机关正在全面梳理研判，逐一核查、分类处理，对重点线索特别是涉黑涉恶线索，采取挂牌督办、异地用警、提级管辖等方式，迅速依法开展核查调查，坚决查清查透查彻底。
在全力推进案件侦办工作的同时，公安警务督察部门会同纪检监察机关及时介入，对出警不及时、执法不规范及严重违纪违法问题开展深入调查，目前已有警务人员接受纪律审查和监察调查，唐山市公安局对路北分局副局长李某予以免职。
河北省纪委监委网站消息，河北省纪检监察机关对唐山市某烧烤店寻衅滋事、暴力殴打他人案件及其他相关案件涉及的公职人员涉嫌严重违纪违法问题，依纪依法开展审查调查。
目前，经河北省纪委监委指定管辖，唐山市路北区政府党组成员、副区长，市公安局路北分局党委书记、局长马爱军，正接受廊坊市纪委监委纪律审查和监察调查。经唐山市纪委监委指定管辖，唐山市公安局路北分局机场路派出所所长胡斌、长虹道警务站副站长韩志勇、机场路派出所民警陈志伟、光明里派出所原所长范立峰，正分别接受唐山市曹妃甸区纪委监委、唐山市丰南区纪委监委纪律审查和监察调查。
究竟为何打人？
据公安通报，被害人就医后，24岁女子远某、29岁女子李某经医院检查无需留院治疗后自行离开。王某某、刘某某在普通病房住院接受治疗，截至通报时，伤情已好转。6月20日，司法鉴定科学研究院出具了司法鉴定意见书，王某某、刘某某损伤程度为轻伤（二级），远某、李某损伤程度为轻微伤。
网上流传的监控视频显示，6月10日凌晨2时40分许，一名绿衣男子从餐厅正门入，往正在用餐的四名女子看去（此时一名女子有事走出门），在盯了许久后，他和两名点餐男子打了招呼表明骚扰意图后，径直走向用餐的几名女子。
走到一边后，绿衣男子的手顺势抚摸坐在外侧的女子后背。女子随即大声呵斥“你干吗呀你”。男子口出污言秽语，还想上前，女子又说“你有病吧”，此时男子欲再上前动手，女子喊了“变态”，男子随即打了女子一个耳光。就此，双方动起手来。
黑衣女子向绿衣男子扔了一个啤酒瓶，多名男子从店外冲进来暴打这名黑衣女子，黑衣女子重重摔在地上，遭到椅子袭击和男人的脚踢；身着白色T恤的女生则被拽着头发拖到店外继续殴打。女子同伴再次前去劝阻救援，直接被一男子推搡倒地，后脑勺还磕在了台阶上，两人倒在地上动弹不得。
已经倒地的她们遭到拳打脚踢，好不容易准备起来，其中绿衣男子还是拽着女生的头发殴打。女生二度倒地。被拉起来接着打……最后，女生只能一手撑地，让自己不要第三次倒在地上。本以为殴打就此结束，打人团伙突然又开始对另外一名白衣女子动手，之前倒地的女子为救同伴再次冲了上去，众人消失在监控之外，但听声音殴打在持续……
整个冲突持续了约4分钟时间，最终打人的男人们扬长而去，女生浑身上下鲜血淋漓。
一名目击者在网上发布视频讲述了他看到的现场：“我在玩手机的时候，突然听到店里很明显的打斗声，第一反应是比较担心会不会是我们同行的女生进去上厕所发生了意外，然后看见肇事的男子拖着一位女生的头发，把她给拽出来了。这个过程中他的同伙不停地拿酒瓶往女生的头上砸。”
这名目击者用手机拍下十几秒的现场视频取证，之后去稍远的地方拨打了110报警电话。他说：“我当时有依稀印象，就是所有上去阻拦的、说句话的，他们会直接回头给一耳光或者拿着酒瓶往脑袋上砸。我们一桌子人，加上我只有三个男生，我当时做了一个快速衡量，如果我上去阻拦，然后被打，我们这两个朋友不管上不上去帮忙，大概率会让事件恶化，我们桌上那些女生可能会被殃及。只有一个办法就是赶紧报警，我取完证之后，偷着去很远的一个店里边报警的。”
这位目击者说，等他报完警回到烧烤店，肇事者已经跑掉，他们一行人等到120和警方到达现场才离开。
事后，警方表示，两名已经就医的女性，没有生命危险。另外两名女子伤势较轻未住院治疗。
6月10日下午，唐山市公安局路北分局发布警情通报：2022年6月10日凌晨2点40分许，唐山市公安局路北分局机场路派出所辖区某烧烤店发生一起寻衅滋事、暴力殴打他人案件。唐山路北警方已经锁定嫌疑人，目前正在全力实施抓捕。警方绝不会放过任何一个违法犯罪人员!
6月10日晚，唐山当地也明确表态称，对烧烤店发生的寻衅滋事、暴力殴打他人恶劣事件，要从严从快依法严惩，同时要举一反三在全市开展扫黑除恶专项斗争“回头看”。
人民日报在当晚接近11点时发布评论，指出唐山这起群殴女子事件，令人震惊，不仅挑战了法律，还挑战了社会秩序，挑战了大众的安全感。被打女子仍在医院治疗，病床上的她们需要一个公道，全社会需要一个交代。尽快依法办理，让施暴者付出沉重代价，人们拭目以待！
嫌疑人罪行累累？
人民日报发布微评之后一个小时不到，唐山市公安局路北分局发布消息，涉案两名犯罪嫌疑人陈某志、刘某已被抓获。
6月11日凌晨，唐山市公安局路北分局发布警情续报，继抓获涉嫌在烧烤店寻衅滋事、暴力殴打他人案件两名主要犯罪嫌疑人之后，6月11日凌晨，又抓获李某瑞等三名涉案人员。同时，唐山公安机关已组织警力赴外省对其他四名外省籍涉案人员进行抓捕。
这4人驾驶车牌尾号为7777的奔驰迈巴赫从唐山逃走后，沿着 G156 高速途经山东进入江苏境内。江苏警方获悉后，立即布置警力拦截。11 日凌晨，在盐城建湖九龙口服务区，嫌疑人发现出口有警方在检查，就把车开到服务区里的加油站旁，然后弃车逃走。警方发现车辆后，立即在周边展开追捕，抓获陈某亮、马某齐等3名嫌疑人。
6月11日下午2点半，翻越高速护栏逃跑的沈某俊，在距离弃车现场西北方向约2公里处一处茂密的草丛里被警方发现。至此，在某烧烤店涉嫌寻衅滋事、暴力殴打他人案件中的9名涉案人员全部被抓获。
与此同时，警方通报受伤女子伤情稳定。
6月11日22时53分，河北省廊坊市公安局广阳分局通报称，根据省公安厅指定管辖，发生在唐山市路北区某烧烤店的寻衅滋事、暴力殴打他人案件，由廊坊市公安局广阳分局侦查办理。该局将严格依法办案，并自觉接受群众监督。
6月12日，唐山打人事件涉案的陈某志等9名犯罪嫌疑人，由廊坊市公安局广阳分局执行逮捕。警方初步查明，9人中有7名男性、2名女性，案发时多人实施了暴力行为。涉案人员中多人有前科劣迹。有前科劣迹的5名涉案人员，其前科多为寻衅滋事、非法拘禁、故意伤害、开设赌场、聚众斗殴等。其中多名涉案者或关系密切，且刑满释放时间距今较近。
其中主要人员陈某志，为唐山某弘水产品养殖有限责任公司法人代表、经理、执行董事，唐山市某某风情文化传媒有限公司监事。信息显示，这家水产养殖公司已处于吊销状态。而陈某志牵涉多起司法案件，多次成为失信被执行人，并被限制高消费，即所谓的“老赖”。
公安机关在侦办此案过程中发现犯罪嫌疑人陈某志其他违法犯罪线索:2015年12月12日，陈某志以追讨索要债务为由，指使刘某、高某、侯某亮、王某对商某凯实施殴打后非法拘禁，经伤情鉴定商某凯为轻伤。2018年9月23日，陈某志明知他人向其抵债的轿车为盗抢车辆，仍指使么某宇、范某松隐瞒事实将该车质押贷款14.8万元。2022年6月9日，陈某志、陈某亮、李某等7人在唐山某酒店实施网络赌博洗钱违法犯罪活动，涉案资金66.03万元。上述犯罪嫌疑人已被抓获归案。此外，公安机关还发现陈某志、陈某亮、沈某俊、马某齐、李某等人其他寻衅滋事、聚众斗殴、开设赌场等违法犯罪线索。相关人员是否涉嫌黑恶组织犯罪，目前正在加紧侦查调查。
民事纠纷案中，陈某志除了不履行民事赔偿责任，还因多次未能按时还款而被起诉至法院。
根据裁判文书网的公开信息，2019年一位女士曾因陈某志拖欠机票款而选择起诉。判决书显示，陈某志从2015年到2016年间赊欠该女士的机票款尚有33640元未还，该女士向法院称，“他总是有各种事情推诿，不肯见面”。
同年，陈某志因没有按时履行还款义务，先后被当地银行和金融公司告上法院，判决书显示，两次违约的贷款本金分别为50万元和20万元。
而另一份民事判决书显示，陈某志还因不当得利纠纷被诉诸法庭，陈某志多次找人代订机票，但拖欠机票款未付，法院判其支付原告款项及利息三万余元。后因全部未履行，法院将其列为失信被执行人，并限制其高消费。
简而言之，陈某志涉及2015年12月非法拘禁案（刑拘在逃）、2017年交通肇事逃逸案、2018年被列为失信被执行人、2019年涉及不当得利、2020年再次被列为失信被执行人。
据中国裁判文书网记载的信息，涉案刘某1989年出生，户籍所在地为河北省唐山市。
公开信息显示，2015年12月12日，在唐山市路北区闻新园小区，刘某伙同他人，以追讨索要抵押车辆的债务为由，使用方向盘锁对商某实施殴打，致使商某额骨凹陷粉碎性骨折，脑组织挫裂伤，尺骨粉碎性骨折。
案发时，刘某等人强行将商某带到“刑拘在逃”的陈某志的厂房大院内。次日12时，商某趁人不备逃脱并报警。随后，刘某将商某强行带离，后商某逃脱，报警。
经鉴定，商某的伤情为轻伤。2018年3月，刘某因涉嫌非法拘禁罪被唐山市公安局路北分局刑事拘留，4月27日被唐山市路北区人民检察院以涉嫌故意伤害罪批准逮捕。2019年3月11日，法庭以刘某能够当庭自愿认罪为由，依法酌情对其从轻处罚，判处有期徒刑二年零一个月。
2017年4月，刘某无证驾驶陈某志的车辆，并且超速行驶，在唐山市路北区翔云道上制造了一起八车连撞的交通事故，肇事后，刘某逃离现场。事后，陈某志帮助刘某承担了全部民事赔偿责任，但其实一直没有对受害人进行过赔偿，为此成为失信被执行人。
在中国裁判文书网上可以检索到数篇有关陈某志和刘某的裁判文书，涉及经济、暴力、民事等多种类犯罪。
开车逃往江苏的沈某俊、陈某亮、马某齐均为江苏省兴化市戴南镇人，3人近年间均因涉嫌赌博或开设赌场而被刑事立案。
最后一个被抓获的沈某俊生于1983年，小学一年级文化。自18岁起，就有多次刑事犯罪的经历，涉及寻衅滋事、聚众斗殴、故意伤害、吸毒、赌博等。
生于1979年的陈某亮是奔驰车车主。曾在2019年因犯开设赌场罪，被判处有期徒刑3年。后因陈某亮在服刑期间有悔改表现，符合减刑条件，经常州市中级人民法院裁定，减去其有期徒刑六个月，减刑后的刑期至2021年1月14日止。此次案发，距其出狱才一年半时间。
马某齐也曾经因为开设赌场和聚众斗殴，而在2017年被判处有期徒刑3年2个月。
涉案人员如何量刑？
从警方通报来看，警方是以寻衅滋事、暴力殴打他人为案由抓捕嫌疑人。如果同时构成故意伤害罪和寻衅滋事罪，根据相关司法解释，按照处罚较重的犯罪定罪处罚，这需要看司法机关最终查证事实进行判断。
根据刑法规定，故意伤害他人身体，致人轻伤的，处三年以下有期徒刑、拘役或者管制；故意伤害他人身体，致人重伤的，处三年以上十年以下有期徒刑；致人死亡或者以特别残忍手段致人重伤造成严重残疾的，处十年以上有期徒刑、无期徒刑或者死刑。
而寻衅滋事罪，依法可以判处五年以下有期徒刑、拘役或者管制。如果公安机关查明犯罪嫌疑人纠集他人多次实施寻衅滋事行为，严重破坏社会秩序的，最高可处十年有期徒刑并处罚金。根据司法解释，随意殴打他人，破坏社会秩序，致一人以上轻伤或者二人以上轻微伤的，应当认定为刑法规定的“情节恶劣”。
中国政法大学教授罗翔在谈及“令人愤怒的唐山打人案涉及什么犯罪”时说，我国刑法没有规定单纯的暴行罪，对于故意伤害导致他人轻微伤的，就不构成故意伤害罪，所以寻衅滋事罪可以进行兜底适用。
“虽然学界对于寻衅滋事罪大多持谨慎限缩的态度，但是对于这种随意殴打型的寻衅滋事，它确实有存在的合理性。它可以弥补故意伤害罪打击的不足。因为寻衅滋事罪就是打击老百姓印象中那种严重的流氓行为。”罗翔说。
司法解释中对于“随意”有两种解释，一种是无事生非，一种是借故生非。无事生非就是没有任何缘由地寻求刺激、发泄情绪、逞强耍横。“类似本案中，就是别人好好地吃着饭，故意去对别人进行骚扰，被人拒绝之后还恼羞成怒，大打出手，就是典型的耍流氓。如果打成轻伤，那就属于故意伤害和寻衅滋事的想象竞合，从一重罪；如果只是打成轻微伤，就可能直接定寻衅滋事罪了，它比故意伤害致人轻伤的处罚更重，最高可以判到5年有期徒刑；如果把人打成重伤，最高可以判处十年有期徒刑。”
中纪委评论唐山打人事件：不只是唐山，各地都需进一步研究解决社会治理中的深层问题。治标更要治本。要坚持对各类违法犯罪零容忍，露头就打，积极构建全方位、立体化防控体系。把守护群众、
问题 问询和讨论不会让人死亡，封锁和缄默那跟死了有何区别？
防疫问题 小学生每天上课要戴口罩，一天几个小时戴着口罩。而口罩真正起到保护的有效期只有几十分钟。
旅行上飞机要戴口罩，吃饭时摘下口罩吃吃喝喝。
外地进入本地需要48小时核酸检测，病菌掐着表，48小时后没更新核酸检测就会立即感染。</description>
    </item>
    
    <item>
      <title>随笔0610</title>
      <link>https://pub.oribos.cn/web/note/2022/2022061001.html</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022061001.html</guid>
      <description>美国枪击案 枪击案并不会导致美国社会控枪，反倒是越来越严峻的形势导致平民为了避免禁枪以后的影响而提前买枪。大多数案件里，凶手所持的自动枪支和改装枪支本身就是非法持有的。完全禁枪只会导致原本合法持枪保卫自己的人被迫放弃枪支。那些通过走私黑市获得的非法未被追踪的枪支不会受影响。
美洲新大陆 阿兹特克帝国灭亡于1520年，印加帝国灭亡于1572年。1597年最后一个玛雅城邦在西班牙人的炮火中灰飞烟灭。
1620年五月花号到达美洲，1776年美国建国，1783年美国人允许开发西部印第安人地区
1620年五月花号到达美洲之前，天花已经在美洲肆虐一百多年。至于这一百年来的天花怎么来的，那跟美国建国和发展有关系吗？
印第安人文明和国家均是西班牙人消灭的，天花、伤寒、麻疹等病菌也是西班牙人带过去的。一百多年西班牙的暴行怎么算到一百年后才到来的人身上？
尽管西班牙殖民地多数都在中美洲和南美，但墨西哥地区和得克萨斯州加利福尼亚州等北美地区也曾是西班牙殖民者殖民地。也就是说，早在五月花号到来之前，西班牙已经在北美进行掠夺和屠杀了一百多年。
南美印第安人是农耕文明国家，人口众多，北美印第安人大部分人采集狩猎的原始氏族部落，人口稀少且分散。
北美印第安人反抗英国殖民者的时间已经是18世纪，这时期他们是拥有马匹和枪支的，西部片里西部牛仔骑马同印第安人互相枪战，互相劫掠冲突是很常见的。
美国独立战争时期，英国是为印第安人提供过武器和补给的，印第安人同北美殖民者是互相 残杀的，这也是为什么建国初期历任美国总统都对印第安原住民进行镇压的原因。单方面的屠杀是某些不了解真相的民众的片面认识。
殖民者 西班牙殖民者埃尔南·科尔特斯和佛朗西斯科·皮萨罗，
1511年，科尔蒂斯跟随贝拉斯克斯（迭戈·贝拉斯克斯）参加了征服古巴的战争。贝拉斯克斯被指派为古巴总督后，科尔特斯因功被任命为财政官。他后来还当选过古巴圣地亚哥的市长，与贝拉斯克斯的小姨子结婚。 [1-4] 1519年2月，率领船舰和军人在墨西哥东海岸登陆，入侵阿兹特克帝国。 科尔特斯到达墨西哥后，当时是阿兹特克人的土地，他们的首都在特诺奇提特兰城（现墨西哥城所在地）。科尔特斯于1519年11月到达那里，最初受到阿兹特克帝国皇帝蒙特祖马二世的欢迎。新来的人使特诺奇提特兰的居民充满了好奇，把他们当作古代神灵寇帝斯魁萨克派来的使者。 科尔特斯施展狡诈手段控制了特诺奇提特兰城，并把蒙特祖马二世监禁起来。但是，阿兹特克人反抗西班牙人的统治。于是，在阿兹特克人和西班牙人之间展开了一场长期的斗争。
皮萨罗跟随着瓦斯科·努涅斯·德·巴尔博亚（Vasco Núñez de Balboa）一同探索太平洋周边的岛屿，并在巴拿马定居，成为了养牛的农夫。1522年，他和教会的修士埃尔南多·德·卢克（Hernando de Luque）以及士兵迭戈·德·阿尔马里奥（Diego de Almagro）合伙，从巴拿马南下寻找更多可殖民的土地，他们三人达成平分土地，和平占领得协议之后，开始有计划的从海路进入当时的印加帝国范围。在途中他们征集了十三个追随者，花了几个月的时间，买了一些马、粮食和兵器，聚集在南美洲西海岸的无人海岛上，没有商店，也没有船；皮萨罗相信他曾沿着海岸线航行，经过印加帝国的领地。
欧美殖民时期 当年修铁路的华工大多数被华人诱骗到美国的。洋人直接到内陆去抓捕容易遭到当地人反抗。
欧洲奴隶贸易者并不是最开始武力征服非洲的军事人员，他们只是普通商人，相比自己去冒风险抓，使用廉价的工艺品玻璃珠跟当地土著交换商品和奴隶风险更低。
大多数奴隶来自当地不同部落间的战争，被俘者可能用来活祭和杀死。非洲的黑人被买到美洲也不算太惨，但可恶的资本家为了压缩成本，运输途中环境恶劣，黑人奴隶病死累死很多。</description>
    </item>
    
    <item>
      <title>随笔0520</title>
      <link>https://pub.oribos.cn/web/note/2022/2022052001.html</link>
      <pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022052001.html</guid>
      <description>路牌 首先要明确一点，为什么要学英语，英语到底是作为外语还是国际交流语言？举个例子，如果我学一门小语种，比如 匈牙利语，那学完以后是要用于跟匈牙利人沟通的，如果我学完以后压根不去匈牙利，压根不找关于匈牙利人的工作。那学匈牙利语简直就是浪费。但英语不同，目前许多网站、出版物、论文、国际贸易、船舶航空等等。也就是说现在人学英语压根不是为了只跟英国人沟通和贸易的。 其次你的路牌标志的作用？辅助汉语读音？比如堡的pu和bao读音。面向国际沟通的拉丁字母转写。如果目标是辅助汉语对象是国内的说汉语民众，那路就是lu而不能是road，广场是guangchang而不能是square。如果是国际沟通，那专用名词和固定名词必须区分，比如北京西站，“北京西”站
唯价格 你买东西时，商家需要对你笑脸相迎你才会买。 你去领东西，就得你笑容满面才会给你。
世界不是平面的 世界不是平面的，每个人的经济条件也不是一样的。某件“有意义”的事，有些人愿意投入大笔钱只为获得乐趣，而有些人由于经济窘迫难以接受。
这种事有可能是一只笔，一张电影票，一本书，一个软件。
我们不能拿一个固定的标准去批判使用盗版的人，因为正版的钱对于有些人只是一顿饭或几公里油钱，对于有些人可能是一星期饭钱。没人帮他解决饭钱，就没理由阻止盗版。甚至软件公司来看，并不是目标用户，打击太厉害反而导致用户转而使用竞争对手产品。
疫苗 2016年5月份以前，我国使用含有3个型别病毒的tOPV（三价糖丸），宝宝首次接种脊灰疫苗时使用tOPV的致残率只有1/25万。这还是经过多次改良的三价糖丸，相对的2016年5月1日之后，糖丸被全国停用7468后，改用只含2个型别病毒的、更加安全的bOPV，宝宝首次接种脊灰疫苗时使用bOPV的致残率降到了1/42万。 （2021年新生儿出生数量统计是1062万人）
氢氧酸 美国公司每年向世界制造的食品饮料里含有氢氧酸，在美国生物实验室发现大量氢氧酸。​
氢氧酸是一种无色、无臭、无味的化学物质。又名二零醚、正氧烷、氧乙烯、零醇、脱碳甲醛、氢化超氧酰、脱氰零醛肟、二聚氢氧酸酐、氢化脱磺硫酸、氧化脱羧甲酸、氢化脱苄苯甲醇、氢化脱硝硝酸、氢化脱氰氰酸、氢碱酸。
酸雨和农药的主要成分，在许多生化药剂里也有残余。纯净的氢氧酸无色无味，不慎饮用不易觉察。</description>
    </item>
    
    <item>
      <title>疫情防控</title>
      <link>https://pub.oribos.cn/web/note/2022/2022050901.html</link>
      <pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022050901.html</guid>
      <description>疫情防控 每天核酸检测，投入过大，效果没有。一些没有接触外部人员的老人孩子，还要去排队做核酸检测，增加受感染风险
学生一天上课都要戴口罩，造成呼吸困难，肺部受损。而防护效果几乎没有，学校环境有感染着，一天之内就可以传播开来，戴口罩根本没有效果。
健康码 行程码 健康码 场所码 疫苗记录 核酸检测健康码
健康码用途有被扩大化的嫌疑，</description>
    </item>
    
    <item>
      <title>随笔0506</title>
      <link>https://pub.oribos.cn/web/note/2022/2022050601.html</link>
      <pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022050601.html</guid>
      <description>奇异博士2 奇异博士2：疯狂多元宇宙是山姆·雷米执导的奇幻电影，由本尼迪克特·康伯巴奇、伊丽莎白·奥尔森主演，定于2022年5月6日在北美上映。
评价 多元宇宙、触手、魔法、僵尸、更多剧情。整部电影什么都想有，搅和在一起大杂烩。
漫威 欧美影视政治正确，宣传有色人种、变性、残疾人。电影永恒族，高科技的外星人居然还有聋哑人。
垃圾短信 凌晨1点，收到10000垃圾短信，“守护职业健康，同享幸福人生”</description>
    </item>
    
    <item>
      <title>202204</title>
      <link>https://pub.oribos.cn/web/note/2022/20220401/</link>
      <pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/20220401/</guid>
      <description>2022-04-01 在linux上的git操作，到windows就会出现各种问题，ssh私钥管理也出现问题。</description>
    </item>
    
    <item>
      <title>202203</title>
      <link>https://pub.oribos.cn/web/note/2022/20220301/</link>
      <pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/20220301/</guid>
      <description>2022-03-01 </description>
    </item>
    
    <item>
      <title>随笔0210</title>
      <link>https://pub.oribos.cn/web/note/2022/2022021001.html</link>
      <pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022021001.html</guid>
      <description>生物进化 物种的进化是为了适应当前所处的环境，过去的或者未来的需求并无法导致物种现在受益，只要现在的环境没有发生变化，物种就有进化的必要。所处的环境如果过度变化，他们也需要同样变化。发展是阶段性的，超越了适应环境的发展并不会到物种产生有利效应。
一个古老的物种存在数万数亿年，要么是他们的基因适应性更高，要么是他们所处的环境并没有发生太大变化。
世界不是平的 世界不是平面的，每个人的经济条件也不是一样的。某件“有意义”的事，有些人愿意投入大笔钱只为获得乐趣，而有些人由于经济窘迫难以接受。
这种事有可能是一只笔，一张电影票，一本书，一个软件。
我们不能拿一个固定的标准去批判使用盗版的人，因为正版的钱对于有些人只是一顿饭或几公里油钱，对于有些人可能是一星期饭钱。没人帮他解决饭钱，就没理由阻止盗版。甚至软件公司来看，并不是目标用户，打击太厉害反而导致用户转而使用竞争对手产品。</description>
    </item>
    
    <item>
      <title>202202</title>
      <link>https://pub.oribos.cn/web/note/2022/20220201/</link>
      <pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/20220201/</guid>
      <description>2022-02-01 2022-02-10 2022-02-16 俄军指挥官从中国媒体上看到俄军将进攻乌克兰</description>
    </item>
    
    <item>
      <title>俄乌冲突</title>
      <link>https://pub.oribos.cn/web/note/2022/2022020107.html</link>
      <pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022020107.html</guid>
      <description>冲突原因 乌克兰东部地区是俄罗斯族人口占多数，乌东武装分子策划独立，乌克兰纳粹组织亚速营参与顿巴斯地区军事行动，手段残忍。俄罗斯总统宣布
历程 2014年3月16日 乌克兰克里米亚自治共和国就自身地位举行全民公投。全民公投筹备与执行委员会主席马雷舍夫17日宣布，对公投全部选票的统计结果表明，全克里米亚半岛超过96%的投票者赞成克里米亚加入俄罗斯。
2014年3月17日 乌克兰克里米亚自治共和国议会决定，克里米亚独立成为主权国家，命名为克里米亚共和国。当天，有100个席位的克里米亚议会有85位议员参加表决，决定获全票通过。克里米亚议会还向俄罗斯联邦提出建议，以新的联邦主体身份加入俄罗斯联邦。克议会同时决定，自即日起，克里米亚半岛上的一切政府机构要向克里米亚共和国移交权力和设施。
2022年02月22日 03:36 当地时间21日，俄罗斯总统普京宣布承认“顿涅茨克人民共和国”和“卢甘斯克人民共和国”。
2022年02月22日 08:24 当地时间22日，乌克兰总统泽连斯基通过电视直播发表讲话，他表示，乌克兰将保留进行独自和集体防卫的权利。国际社会对乌克兰领土边界的承认不会因俄罗斯的行为而发生改变。俄罗斯对“顿涅茨克人民共和国”与“卢甘斯克人民共和国”的承认是其单方面退出明斯克协议的行为。 在讲话中泽连斯基还呼吁紧急召开诺曼底模式四国峰会和欧安组织特别会议，以讨论俄罗斯承认“顿涅茨克人民共和国”与“卢甘斯克人民共和国”独立一事。
2022年02月24日 11:00 俄罗斯总统普京决定在顿巴斯地区进行特别军事行动
2022年02月24日 12:08 俄罗斯军队已登陆乌克兰敖德萨
2022年02月24日 13:40 乌克兰总统：乌克兰全境进入战时状态。
2022年02月24日 17:46 乌克兰决定与俄罗斯断绝外交关系。</description>
    </item>
    
    <item>
      <title>tag与release</title>
      <link>https://pub.oribos.cn/web/dev/2022/2022010903.html</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/dev/2022/2022010903.html</guid>
      <description>本文源自 作者：Hustlion
定义 标签（tag）是特定提交（commit)一个指针，也就是每个tag对应一个特定的commit。
Release是具有changelogs和二进制文件的一级对象，它可以代表超出Git架构本身的一个特定时间点之前的所有项目历史。也就是通过release，不但能够通过源码体现出项目历史，还能通过已经编译好的二进制文件来进一步描述此时的项目状态。“超出Git架构本身“的意思则在于，git本身只能记录项目修改，本质上不适合将编译好的项目二进制文件记录下来。而通过release则把项目二进制文件保存了下来，方便用户下载，也方便查找特定版本的二进制文件。
以下是Github official announcement所定义原文： Releases are first-class objects with changelogs and binary assets that present a full project history beyond Git artifacts.
创建方法 Release分为两种：lightweight and annotated.
创建lightweight类型的tag：
git tag v1.4-lw 创建annotated类型的tag：
git tag -a v1.4 -m &amp;#34;my version 1.4&amp;#34; 通过tag可以返回到项目的特定状态下，所以可以将tag看作是在大量commit中设定的书签。
创建release，则需要通过源码托管商的网页操作界面来进行，一般会要求填写tag名、分支以及相应的发布说明，还可上传编译好的程序、打包好的文件等。
比较 标签是git中的概念，而release则是Github、码云等源码托管商所提供的更高层的概念。也就是说git本身是没有release这个概念的，只有tag。
两者之间的关系则是，release基于tag，为tag添加更丰富的信息，一般是编译好的文件。
总结 Release是源码托管商对git的tag功能的增强。通过git提供的tag功能，我们可以给项目进行版本标识，以识别特定的版本，如v0.1.0、v1.0.0等。而通过源码托管商提供的release功能，在tag的基础上我们可以添加编译好的二进制文件等，如.deb、.exe等给特定的版本提供更多的信息，方便用户，也方便后期查找特定版本的程序。</description>
    </item>
    
    <item>
      <title>测试</title>
      <link>https://pub.oribos.cn/web/dev/2022/2022010907.html</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/dev/2022/2022010907.html</guid>
      <description>测试 使用 Ed25519 算法生成 SSH 密钥 创建Ed25519算法的ssh密钥，
ssh-keygen -t ed25519 -C &amp;quot;denalon@qq.com&amp;quot; </description>
    </item>
    
    <item>
      <title>随笔0109</title>
      <link>https://pub.oribos.cn/web/note/2022/2022010901.html</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/2022010901.html</guid>
      <description>医学 疫情这么长时间了，还搞不清楚状况吗？
传染病看什么疗效，100个人里有50个人携带，49个人症状明显。这49个人哪怕不治疗。关小黑屋里自生自灭也能活下来不少，用西医中医非洲医印度医日本医都无所谓，各种方法都有可能治好。
但疫情没控制住，为什么？因为有一个人没有症状在外面传播！
我们不能按照中医的思路按症状“对症下药”。而是研究它的病毒特征，传播途径，核酸检测来确定病毒，揪出在中医看来健康的无症状者，才能控制疫情。
可接受可控制 科学 可验证 可观测 可量化</description>
    </item>
    
    <item>
      <title>202201</title>
      <link>https://pub.oribos.cn/web/note/2022/20220101/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2022/20220101/</guid>
      <description>2022-01-01 游戏&amp;quot;原神&amp;quot;
刻意将游戏里的城邦对应现实里的国家，造成文化的侵蚀。影射欧洲中世纪的蒙德，人人乐于助人，讨好别人，骑士团恪尽职守，无私奉献。影射中国古代的璃月，处处展现中华文化，但是充实着唯利是图的奸商，缺斤短两，投机倒把，强买强卖。影射古代日本的稻妻，封闭锁国，集权统治。
游戏内容受限
为了推广小宠物，游戏的主要助手 派蒙 无法随时跟随主角。
2022-01-20 主要观点：
低控制力和高自由度 社会 法律 文化 教育
遵守自然科学 反对伪科学 不可知
怀疑未知 阴谋论 玄学
拒绝嫁衣 不能为了别人的利益发声</description>
    </item>
    
    <item>
      <title>202112</title>
      <link>https://pub.oribos.cn/web/note/2021/2021120101/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021120101/</guid>
      <description>2021-12-01 </description>
    </item>
    
    <item>
      <title>文章继续更新</title>
      <link>https://pub.oribos.cn/web/note/2021/2021113001.html</link>
      <pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021113001.html</guid>
      <description>文章继续更新 纵然对外访问的博客已经关闭，但博客的文章依然更新
大仓库plus 之前以为自己收集10T的资料已经够用了，然而随着热衷于pt网站，已经搜集了100T各类资源影视文章
hetzner VeraCrypt 关于VeraCrypt的文件和vhd文件多重嵌套加密
资料的收集和整理 </description>
    </item>
    
    <item>
      <title>docker运行qbittorrent</title>
      <link>https://pub.oribos.cn/web/note/2021/2021110801.html</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021110801.html</guid>
      <description>说明 之所以使用docker运行qbittorrent是为了针对型的配置qbittorrent，修改默认下载位置，使用端口号等操作。
第一步 准备服务器 登录云服务器 通过ssh命令使用购买服务器后提供的用户名和密码登录服务器，如果你是使用的Hetzner服务器需要自行配置RAID0，##先不要急着登录服务器##
配置RAID 第一步 进入Hetzner的控制后台，找到服务器，选择Rescue (救援模式)，设置完成后重启服务器
第二步 登陆云服务器，进入救援模式，使用installimage配置服务器初始化
其他使用默认配置，只需要根据下图，修改服务器的RAID 为0
RAID设置区分 NO RIAD：一般情况建议不设置RAID，这样既保证空间大小，也保证了安全性.； RIAD 0：好处：速度快，合并容量，缺点：两个硬盘只要挂一个，那么文件全都挂了； RIAD 1：好处：同时把文件写入到两个硬盘，坏一个也没事，缺点：浪费空间，读写速度稍微有降低；
编辑完成后按F10 保存配置文件；
提示 登录救援模式后本地会保存服务器的验证信息，重新登录服务器需要先删除之前的验证信息，避免出现验证信息修改的报错。
配置磁盘空间 使用fdisk -l查看服务器的硬盘，将未挂载的硬盘挂载的目录，对于配置永久挂载的请参考其他文章编辑磁盘配置文件。这里的挂载只是临时性的。
mount /dev/md3 /denalon/downloads
挂载/dev/md3的硬盘空间为目录/denalon/downloads
第二步 准备docker环境 一键安装docker 对于大多数服务器使用一键安装脚本即可安装docker
curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun
如果安装时报错，意味着服务器上某些应用未正确安装和配置，可以参考自定义安装docker
自定义安装docker 为没有安装sudo的机器安装sudo，避免抄一下代码运行时报错
apt-get install sudo 卸载旧版docker
sudo apt-get remove docker docker-engine docker.io containerd runc 更新包
sudo apt-get update 安装必要组件
sudo apt-get update sudo apt-get install \ ca-certificates \ curl \ gnupg \ lsb-release 设置官方 GPG 密钥</description>
    </item>
    
    <item>
      <title>硬盘故障</title>
      <link>https://pub.oribos.cn/web/note/2021/2021110201.html</link>
      <pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021110201.html</guid>
      <description>统计遇到的硬盘故障 由于windows的睡眠模式，关机以后并没有断开硬盘供电链接，拔下硬盘后再次接入提示硬盘错误
使用老旧的硬盘组成RAID0，其中一块硬盘发生读写错误，导致整个RAID0盘数据无法正常读取
结论 老旧硬盘，翻新硬盘，不稳定硬盘不能长期使用。只能做冷备份且需要冗余</description>
    </item>
    
    <item>
      <title>资本家提供的服务</title>
      <link>https://pub.oribos.cn/web/note/2021/2021110202.html</link>
      <pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021110202.html</guid>
      <description>问题 满清时期闭关锁国，拒绝一切洋人的货物，技术。难道他们对欧美地区的新鲜事物没兴趣吗？并不，皇家宫廷里自鸣钟，火枪等等。但他们并没有动力去生产，推广这些东西。
工信部要求保障网盘免费用户下载速率，有人发帖询问为什么国家不推出网盘服务，国家的服务应该稳定可靠，总比百度115等资本家运营的服务要好太多。
可笑 整个问题着实可笑，突出了某些网民的认识欠缺。国家为什么要推出网盘？没有网盘老百姓又能怎么着？哪怕群众呼吁推出网盘，某个领导顺应民意推出该服务，那万一某些人使用网盘造成恶劣影响，那推出该服务的公务员领导是否要追究责任？
因为在国家层面，这些“可有可无”的东西，有比没有风险更不可控，就像早期的wifi在国内禁用，手机上市必须去掉wifi一样，对百姓有利并不意味着就是必须的。
服务 前面说了，这些“可有可无”的服务，基于风险和不可控的因素国家没必要亲自推出，那群众的需求就可以让私营企业去提供，提供好了企业创收，国家增加税收，而且社会和谐，群众满意。服务出错那就是这些私营企业资本家唯利是图，国家出手干预，攫取资本家的利益让群众满意。“工信部要求保障网盘免费用户下载速率”就完美体现了这种情况。工信部并没有说明为了降低网盘服务的成本有那些措施，单方面要求企业改善服务，自然影响网盘企业的服务成本。网盘企业要么将成本转移到用户上，要么缩减利润。
也就是说，看似让用户满意的政策，实则上是在企业和用户的利益上做干涉，并不能解决实质问题。
其他 我倒不希望百度为了应付工信部政策而提高网络速度。应该检测自己的10kb基本速度。甚至让免费的用户直接无法下载文件。
网盘这种服务有需求有市场，那么百度出来提供服务，用户需要考虑的是要不要使用，要不要承担整个价格这些问题。
而假如没有任何一家提供这种服务，用户的需求是天然存在的，市场也是存在的包括海外。用户就需要使用海外服务，为了顺利流畅访问海外服务就需要使用不必要的手段，同时用户为此要形成法律之外的圈子，团体来构建整个服务。网盘企业也需要冒着法律空白情况下的违法违规风险提供服务，同时形成贿赂贪腐不作为等等问题。</description>
    </item>
    
    <item>
      <title>202111</title>
      <link>https://pub.oribos.cn/web/note/2021/20211101/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/20211101/</guid>
      <description>下线博客 停止使用.cn的域名以及部署在国内服务器上的博客，文章的仓库同步到多个git仓库，进行冗余和备份。
后续将提供一个牢固的部署方式将特定文章部署到固定地方，而不是将所有文章完全公开。
博客下线原因 风险不可控 文章撰写时仅仅体现了当时的心情和认识，但这些文字记录可能发生不必要的联系和影响。哪怕是引用历史人物的某些只言片语，都有可能造成不必要的麻烦。所以，博客的文章将仅仅作为个人的随身笔记，并不完全对外访问。
之前同样处于这种考虑没有在博客上配置评论功能，就是避免不可控的评论。</description>
    </item>
    
    <item>
      <title>规避隐私风险</title>
      <link>https://pub.oribos.cn/web/note/2021/2021102501.html</link>
      <pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021102501.html</guid>
      <description>规避隐私风险 原则： 普通空间是不安全的 安全空间的容量和功能是有限的，泄露信息的app不得与安全内容放到一个硬件设备和虚拟空间里
手机的安全空间 重要的，设计隐私的照片和文件应放到手机安全空间里。
泄露信息的app 电脑软件 电脑里使用虚拟机，对于qq 钉钉等泄露信息的app单独放置到虚拟空间里。
基于虚拟磁盘文件的备份 新建VHD虚拟磁盘文件，容量设置为25G，实际存储量在20G左右，配置bitlocker加密，刻录到光盘上。</description>
    </item>
    
    <item>
      <title>随笔2021-10-29</title>
      <link>https://pub.oribos.cn/web/note/2021/2021102901.html</link>
      <pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021102901.html</guid>
      <description>糟糕的验证码 糟糕的验证码 下图是点击验证，对平板手机等触控设备不友好（过小且触控功能可能受限） 下图是选择图片验证，对视力不佳或紧急登录时不友好 下图是输入字母验证，大小写，数字字母混淆，o与Q 9与q 7与f I与1 2与Z容易混淆 验证码的本质 分布式计算，大量用户帮网站免费处理复杂的图形识别学习，网站让用户免费花费脑子帮他们训练人工智能。</description>
    </item>
    
    <item>
      <title>随笔2021-11-04</title>
      <link>https://pub.oribos.cn/web/note/2021/2021110401.html</link>
      <pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021110401.html</guid>
      <description>hexo糟糕的使用 我部署了一个hexo主题模板 ，当今天无意间想增加一些有趣的主题时发现许多问题。一些主题使用了五花八门的依赖，这些依赖要么对hexo版本有要求要么对nodejs环境有要求，导致在本机运行hexo init 以后生成的项目，部署新主题时，要么依赖低，要么依赖高，要么组件下载404错误。
一些主题并没有按照hexo官方指导的方式，使用_config.主题名.yml和_config.yml分开的方法，而是采用npm安装，然后将主题移动到themes目录下的奇葩操作。有些则是在hexo init生成的环境安装其主题后显示 err: TypeError: Cannot read property &#39;path&#39; of undefined等各类错误。
总之，hexo的各类乱七八糟的主题要求参差不齐，组件五花八门，有些甚至需要更改nodejs环境，代理连接等等操作导致部署失败率太高。
hexo报错机制 hexo使用nodejs环境，npm包管理器，各类涉及依赖和组件的版本要求五花八门，而报错信息几乎一点用都没有。
如下图铺天盖地的报错和提示
不知道的还以为拿hexo做什么复杂的高科技研发工作
Hetzner奇葩的登录方式 在使用Hetzner云服务时发现一个奇葩的现象：登录服务需要使用一个“Client number”的客户码
问题时这个客户码不是用户自定义有意义的号码或者id，而是hetzner随机生成的，这个客户码可以在登录以后找到，也就是说用户第一次注册时必须牢记这个客户码，以后续登录。如果忘记或者压根就不知道自己有什么客户码，那不好意思，无法登录。而且hetzner并没有通过用户注册时的邮箱或其他用户id的方式快捷的找回客户码，也没有使用用户id，邮箱地址来登录的备用方式。
着实是商家狠狠的教用户怎么用产品
改变的成本 </description>
    </item>
    
    <item>
      <title>随笔20211010</title>
      <link>https://pub.oribos.cn/web/note/2021/2021101001.html</link>
      <pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021101001.html</guid>
      <description>随笔 windows 11 安装强制要求tpm2.0，而使用hyperV里虚拟机，选“启用受信任的平台模块”可以再hyperV里运行安装windows11
曾经的电脑病毒并没有消失，而是换成了各类app，窃取用户信息，诱导用户受骗
PT下载 优先下载新发布的资源
优先下载免费资源
多个带宽
不同网站服务器技术不同，有的需要公网ip有的不需要
对用户的裹挟消费 使用正版并为正版付费应该是提倡的，但是软件和服务的提供商往往存在对用户的裹挟消费。比如往应用里塞广告展示，弹窗。强制云服务，按月计费，按销售数据计费等等。
不同付费的区别 按功能收费，即软件区分免费版，专业版，至尊版等不同层次的版本。用户根据自己需求付费。 这种付费应该是合理的，正常的。
付费去广告展示，免费软件采用广告付费本身是应该提倡的。此时用户拥有软件的正常使用权限，根据需要付费去除广告。 这种付费应该是正常的。
弹窗 不同于广告展示，强制性弹窗是让人极其厌恶的，这突出一个强制性展示，逼迫用户采取互动操作去关闭或延迟。 这种付费是极其难以接受的
强制云服务 腾讯云文档 谷歌文档 office online等类似的功能，需要不断联网导致在网络不佳时很难操作，在断网情况下就成了摆设，
强制按月 某操作系统，应用软件，本身可以断网使用，也不需要软件提供后续服务支持，比如plesk。尽管软件理论上可以买断，官方却不提供买断功能或者将买断收费极其高昂。此时仔细计算就会发现这种软件收费极其不合理。不推荐使用。
极其不推荐为这种软件付费
安装qb步骤 curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun sudo curl -L &amp;#34;https://github.com/docker/compose/releases/download/v2.0.1/docker-compose-$(uname -s)-$(uname -m)&amp;#34; -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose 如果需要添加额外的硬盘
/dev/vdb /denalon/downloads ext4 defaults 1 2 docker-compose.yml内容
version: &amp;#34;3.9&amp;#34; services: qbittorrent: image: linuxserver/qbittorrent container_name: qbittorrent environment: - PUID=1000 - PGID=1000 - TZ=Europe/London - WEBUI_PORT=8080 volumes: - .</description>
    </item>
    
    <item>
      <title>基于状态变更的密文</title>
      <link>https://pub.oribos.cn/web/note/2021/2021110503.html</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021110503.html</guid>
      <description>基础规定 基于数值的状态变更 如56 实际数值为01
5 6 0 1 5 6 5 0 1 0 数值的变动幅度意味着不同的位数 5 6 8 0 1 1 1 5 6 4 0 1 0 0 数值不发生改变数值为0 5 6 6 0 1 0 特殊码 H 和 L 用来维持上一个数值的幅度 5 6 H 0 1 1 5 6 L 0 1 1 使用特殊码 H 将会导致密文数值归 5 5 6 H 6 0 1 1 1 5 6 H 4 0 1 1 0 使用特殊码 L 不会导致上一个密文数值变动 5 6 L 6 0 1 1 0 特殊码不能组合使用 多个不同的密文可以翻译为同一个明文 </description>
    </item>
    
    <item>
      <title>202110</title>
      <link>https://pub.oribos.cn/web/note/2021/20211001/</link>
      <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/20211001/</guid>
      <description>2021-10-10 使用pt下载和收集资源，构建1PB资料库
2021-10-12 由于本地网络下载实在太慢，使用vps安装qBittorrent在线下载文件，当没有上传流量时删除文件。
2021-10-18 迅雷快鸟上传会员会提高上传速度，但需要付费，而且不同于提升下载速度的迅雷超级会员，这个快鸟上传会员需要另外付费！
2021-10-20 松鼠型收集
2021-10-22 临时磁盘使用RAID0，</description>
    </item>
    
    <item>
      <title>随笔20210927</title>
      <link>https://pub.oribos.cn/web/note/2021/2021092701.html</link>
      <pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021092701.html</guid>
      <description>随笔 两个电源冗余，但是会出现两个电源同时无法使用
美剧英剧 美剧异星灾变，电影异形普罗米修斯等等国外电影电视剧都在不自觉的传播他们的基督教信仰，希腊神话，北欧神话。将外星的未知的文明往他们古代的神话上套，总是追求一个受自己完全控制的世界，理解不了他们神话以外的东西，妄图把外星的未知的世界重新纳入他们的基督教教义，希腊神话故事里。
英剧神秘博士则讲述了一个病态的价值观，一切困难和麻烦都会被突如其来的博士解决，还不需要使用武力，不会引起各种伦理危机。总是宣扬一种病态的圣母主义。
国内电影电视剧 宣扬服从，稳定，顾及他人感受，牺牲自己利益服务其他人利益，
三体 三体的世界观是悲观的
黑暗森林只是有限的认知而产生的狭隘观念，并不是什么宇宙里的通用观念。
基地 基地这部改变的科幻片人类文明发展几万年仍然使用当代的技术水平，简直匪夷所思。
一个帝国位处一万多年却同当代的政治水平没有一丝改变
政治革新，技术爆炸在基地这部&amp;quot;科幻片&amp;quot;里几乎存在。
瑞克和莫蒂 瑞克是“无限控制力”的存在，类似于欧美神话中的“神”“上帝”一样。而不是现实社会的人。
普通人没有能力控制如此多的事情，动画片里的荒谬行为也是不存在的。</description>
    </item>
    
    <item>
      <title>webview不能加载http与https混合内容的问题</title>
      <link>https://pub.oribos.cn/web/note/2021/2021091001.html</link>
      <pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021091001.html</guid>
      <description>简化 解决android 5.0 webview不能加载http与https混合内容的问题 在使用WebView加载https资源文件时，如果认证证书不被Android认可，那么会出现无法成功加载对应资源问题。那么，我们就要针对这一状况作出对应的处理。
1、解决方法：启用mixed content ,webview默认不允许加载http与https混合内容： 比如你访问的网页为http://xxx.com/a.html，则如果a.html包含了https的资源，则此资源不会显示。如果仔细观察log，可以看到如下的内容提示：
********was loaded over HTTPS, but requested an insecure image******** 该怎么解决呢？很简单，只需设置webSettings，允许其加载混合网络协议内容即可。 //webview在安卓5.0之前默认允许其加载混合网络协议内容 // 在安卓5.0之后，默认不允许加载http与https混合内容，需要设置webview允许其加载混合网络协议内容 if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.LOLLIPOP) { settings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW); } 从Android5.0以后，当一个安全的站点（https）去加载一个非安全的站点（http）时，需要配置Webview加载内容的混合模式，一共有如下三种模式：
MIXED_CONTENT_NEVER_ALLOW：Webview不允许一个安全的站点（https）去加载非安全的站点内容（http）,比如，https网页内容的图片是http链接。强烈建议App使用这种模式，因为这样更安全。 MIXED_CONTENT_ALWAYS_ALLOW：在这种模式下，WebView是可以在一个安全的站点（Https）里加载非安全的站点内容（Http）,这是WebView最不安全的操作模式，尽可能地不要使用这种模式。 MIXED_CONTENT_COMPATIBILITY_MODE：在这种模式下，当涉及到混合式内容时，WebView会尝试去兼容最新Web浏览器的风格。一些不安全的内容（Http）能被加载到一个安全的站点上（Https），而其他类型的内容将会被阻塞。这些内容的类型是被允许加载还是被阻塞可能会随着版本的不同而改变，并没有明确的定义。这种模式主要用于在App里面不能控制内容的渲染，但是又希望在一个安全的环境下运行。
2、解决方法：设置WebView接受所有网站的证书 在认证证书不被Android所接受的情况下，我们可以通过设置重写WebViewClient的onReceivedSslError方法在其中设置接受所有网站的证书来解决，具体代码如下：
webView.setWebViewClient(new WebViewClient() { @Override public void onReceivedSslError(WebView view, SslErrorHandler handler, SslError error) { // TODO Auto-generated method stub // handler.cancel();// Android默认的处理方式 handler.proceed();// 接受所有网站的证书 // handleMessage(Message msg);// 进行其他处理 } }); 注：在重写WebViewClient的onReceivedSslError方法时，注意一定要去除onReceivedSslError方法的super.onReceivedSslError(view, handler, error);，否则设置无效。
解决浏览器默认是不允许在 https 里面引用 http 资源 浏览器默认是不允许在 https 里面引用 http 资源的，一般都会弹出提示框。</description>
    </item>
    
    <item>
      <title>随笔20210910</title>
      <link>https://pub.oribos.cn/web/note/2021/2021091003.html</link>
      <pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021091003.html</guid>
      <description>影视剧里角色的处境 在各类小说影视剧里，各类角色都是处处被作者安排，铺垫，掌控的。角色没有自己的完整的性格，也无法掌控各类因素。是相当悲惨的存在。这种悲惨在优秀的小说影视剧里并不明显，但在一些低层次故事里就容易让人情绪受影响。如以下类型：
角色A愤怒之下向B开枪，而B阴差阳错的避开了攻击，A失手打死了自己女友或其他重要角色
角色C同D吵架，跑到偏僻地方不想见D，结果导致遇到坏人或车祸。D认识到错误回去找C，结果发现C出事，然后黑化
某某反派作恶多端，恨不得把历史上所有“恶人”做过的事都做一遍，而没有人能打败他，反派被主角多此打败，却越来越强大，整部剧都有他的恶心的面孔
角色E控制反派，朋友希望立即击杀他，避免他再屠戮更多无辜者，此时E圣母心泛滥，放过反派
角色F控制住G，朋友希望为了追求最大利益，放过他，避免造成事情无法挽回。此时F被以前G伤害自己的回忆惹怒，或者单纯就是复仇，发泄。杀害了G,导致G背后的势力彻底同F敌对</description>
    </item>
    
    <item>
      <title>202109</title>
      <link>https://pub.oribos.cn/web/note/2021/20210901/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/20210901/</guid>
      <description>2021-09-03 由于之前对服务器功能的评估不足，错误的使用了2.5寸服务器，导致数块3.5寸硬盘无法正常接入服务器，只能通过raid卡接入普通pc上，甚至由于服务器的功耗太高，长时间的下载应在pc上进行。平时服务器的多个硬盘应拔下做冷备份
2021-09-06 dell服务器上的tpm无法转移到其他服务器上使用，但为什么要做成可插拔的芯片。导致购买的旧服务器并没有找到tpm芯片，随便选购淘宝上的拆机芯片又无法使用，只能购买dell原厂出的全新芯片。
idrac莫名其妙没有画面，服务器正常开机，但是idrac一直显示无画面，导致并不清楚服务器是故障还是正常开机，需要接入显示器才行。
dell服务器没有找到风扇调速的方式，导致风扇耗能过高。
假设单个硬盘5W，20个硬盘插满功率要到100W
windows 更新网卡驱动以后，重启电脑，网络连接居然被禁用了，导致远程桌面无法访问
2021-09-07 通过以下代码开启风扇手动调速
ipmitool.exe -I lanplus -H 地址 -U 用户名 -P 密码 raw 0x30 0x30 0x01 0x00 通过一下代码将风扇调到10%
ipmitool.exe -I lanplus -H 地址 -U 用户名 -P 密码 raw 0x30 0x30 0x02 0xff 0x0a 我发现，无论是10%还是全速100%，cpu和机箱温度均在40度左右
2021-09-10 针对阶梯式电价下的服务器运行，高峰期仅运行低功耗的服务器,NAS。晚上启动服务器全速下载。下载服务器均为虚拟机。
2021-09-24 万由810a机箱问题：
1 部分机箱螺丝太小，关键结构件的固定用力过大，导致螺丝刀容易滑丝。
2 机箱内部风道不规整，风扇孔位太少。顶部可以使用抽风风扇，但风扇为少见的7cm风扇。并非常见的机箱6cm风扇。
3 只有背部风扇进风，需要换用高风压风扇。（或者硬盘背板出增加风扇，在硬盘接满以后提高硬盘散热）
4 主板的支撑金属板开槽太窄，容易同主板背板螺丝冲突。
5 电源出线口上面刚好是风扇位置，线缆容易碰到风扇扇叶
2021-09-26 HBO美剧 基地 奇葩的角色，剧情，世界观。
美剧 太阳召唤</description>
    </item>
    
    <item>
      <title>随笔20210830</title>
      <link>https://pub.oribos.cn/web/note/2021/2021083102.html</link>
      <pubDate>Mon, 30 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021083102.html</guid>
      <description>控制力因素 金钱 权力 情感 是三个控制力因素
过分的模块化 尽管模块化有助于降低成本，但刀片服务器是彻底的把产品做成了封闭环境，不同于机架式服务器，刀片服务器采用了完全不同的网络接口，内部数据接口，计算控制单元。
服务器上普普通通的风扇都要做成自封闭的接口，电压规范，调节模式等等。
pc上几个普通的风扇就可以将数百瓦的高端cpu和高端显卡稳定控制住温度，而服务器上需要使用极其耗能极其噪音的风扇来散热。
硬盘管理 需求 将多个小容量硬盘组成一个完整的仓库，由单个600G或900G的硬盘组成50T的仓库，
又要针对单个硬盘进行故障隔离。即不能因为某硬盘的故障影响其他数据的读取。
RAID 将多个硬盘组成一个RAID就形成了一个难题：假设单个硬盘故障率固定，尽管越多的硬盘越不容易出现同时故障，却越容易出现单个故障。以RAID5为例，加入3个硬盘组成RAID5，容量会损失1块硬盘的容量。且三块硬盘任意一块出现故障都会引起RAID降级。3块硬盘物理的迁移，备份都会受限。对资料的归档只能通过复制或转移数据达成。组成RAID5的硬盘不应该频繁关机停转。
单个硬盘接入其他电脑并不会完整信息
对配置RAID5的电脑的硬盘进行打乱顺序是否会影响资料的读取？
瑞克和莫蒂 瑞克是编剧刻画的具有近乎无限控制力的逆天角色
杰瑞的无能也是编剧刻意造成的反差，离开了瑞克的影响，杰瑞也并非一无是处。杰瑞的各种无能，自私，鲁莽只是一种极端的映衬
动画应该以一种娱乐的心态品味
为什么几个美剧都烂尾 权力的游戏 纸牌屋 均是大结局的时候各种人物智商离线，剧情崩坏？
小说，电视剧离不开编剧的刻意的塑造，是编剧的某些诉求的实现</description>
    </item>
    
    <item>
      <title>202108</title>
      <link>https://pub.oribos.cn/web/note/2021/20210825/</link>
      <pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/20210825/</guid>
      <description>2021-08-20 分类服务器的功能
alfa 测试 日志 容器测试
bravo 静态资源 正常部署应用
charlie windows应用 .net应用
delta 网络代理 内网穿透服务
echo 数据库
2021-08-25 二维码系统
部署蘑菇博客
撰写文章：日常生活的控制力-第一篇
2021-08-26 取消了cdn的部署，
将阿里云的oss公开访问存储桶全部转移到腾讯云cos，只保留备份存储桶
2021-08-29 服务器上线，20块硬盘接入，考虑到散热问题，硬盘将以1-3-5-7-9的隔位排列接入服务器。
docker运行数据库项目，mysql不支持arm，mariadb却支持arm和arm64
2021-08-31 由于基本熟悉了git的分支管理，用于博客的项目被重新规划了分支，博客的源码从master分支删除，重新部署在blog分支。
master分支仅仅用来展示项目的声明，文档说明等内容。后续main分支将代替master分支作为默认分支。
当前情况并不会立即启用main分支。无论&amp;quot;master&amp;quot;是否有种族歧视问题。毕竟英语并不是我的母语，我必要为了别人的语言差异改变自己的习惯。</description>
    </item>
    
    <item>
      <title>对实物的二维码标识</title>
      <link>https://pub.oribos.cn/web/note/2021/2021082501.html</link>
      <pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021082501.html</guid>
      <description>二维码标识 对办公用品，药品，硬盘，u盘，电脑等标识二维码，统计各类物品的购买时间，内容，注意事项
实现方式 资产管理系统
普通的html页面
访问验证
对于硬盘的内容截图，需要进行访问验证，不能直接将图片和列表内容完全公开
基础要求 数据的可靠性
二维码的地址应该长期可用，随时查阅
保密
必要的保密措施</description>
    </item>
    
    <item>
      <title>日常生活的控制力</title>
      <link>https://pub.oribos.cn/web/note/2021/2021082501/</link>
      <pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021082501/</guid>
      <description>货币是最常见的控制力 货币是经济的控制力，也是日常生活中常见的控制力。
控制力错觉 有些领导吩咐工作时，遇到员工反馈困难，汇报问题时总会以超出实际的控制力来施加压力。比如“如果是中央领导视察，你完不成？” “这时如果在打仗，我毙了你！”“如果我有一个亿，拿钱砸死你！”等等类似的情况，这些明显时使用了超出自己目前情况的控制力，拥有战争特权的控制力和拥有数亿资产的控制力，跟当前的控制力水平根本不一样。处理事情的方式和态度也有很大差别。将行动能力无限放大，假借虚假的控制力来处理日常事务，是一种低能力的表现。
获得控制力会愉悦，失去控制力会难受 征信也是一种控制力 </description>
    </item>
    
    <item>
      <title>随笔0811</title>
      <link>https://pub.oribos.cn/web/note/2021/2021081101/</link>
      <pubDate>Wed, 11 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021081101/</guid>
      <description>随笔 愚公移山 愚公的儿子孙子还没出生，就被愚公粗暴的安排好去移山？
愚公一家可以把山石转移到东边海边和北方远处，那为什么不直接定居在东边或北边，为什么要反复回去移山？
最终达成目标不是由于愚公的理论实现，而是外在的“天神”干涉。
体验落差 苹果新发布的产品会热销，并非是苹果创造的什么不可拒绝的诱惑。而是由于顾客原有的商品体验跟新产品的体验的差距导致的。这个差距导致了顾客对新产品的渴望程度，如果旧产品体验极佳，那么新产品只有相对的更有吸引力才能促使顾客购买。或者苹果发布任意一款产品，哪怕是体验程度不如旧产品，只有存在没有旧产品的顾客，就依然会有人购买，因为对他们来说，从0开始的体验程度依然同新产品有体验上的差距。
不间断电源计划 给DHCP服务器，交换机配置ups
给NAS服务器配置单独的能自动关机的ups
给虚拟化服务器配置基于网络自动关机的ups配置，虚拟化服务器配置一个专用的交换机并确保主要设备同此服务器再一个子网内。
给服务器的显示器，键盘鼠标配置电源，可以在断电后通过最直接的方式输入关机指令
基于无线的路由器不间断电源，通过手机关闭服务器。
运行在交换机，路由器，无线设备，服务器，服务器外设均配置不间断电源。构建一个不间断电源网络
数据安全 易损的安全令牌，当面对突然威胁或者绑架时，破坏易损的安全令牌会轻易的保护隐私数据，即便是收到胁迫依然无法恢复数据。
冗余的产品不建议采用同标准产品采用同规格的型号，即，硬盘，光盘，磁带，处理器，芯片。用来做冗余的部分应使用不同品牌，规格，厂商，地区的产品。避免厂商批量生产漏洞影响。
数据的存放和管理应基于必要的安全验证，加密等操作。即，口令，密钥，证书应在数据初始阶段就已经进行完善的风险限制行为。
人生就像容器运行 人生就像一个容器的运行，一旦运行起来，数据就固定了，最初的容器没有任何额外的东西，只有外部的映射将数据，资源加载进容器。不同的容器都是由于映射的数据，加载的资源不同而运行不同的效果。
容器一旦停止就损毁，不会再恢复。只能新建，再映射外部资源重新跑起来。
旧的容器不复存在。
男生女生的认识差异 男生面对的是世界，认识，接触，创造改变。
许多问题是实实在在的存在性问题，比如更换一个灯泡，线路是否导通，开关是否接对。只要一点出问题都需要调整满足客观规律才行。
女生面对的是自己和男生，打扮，气质，辅助。
遇到感情问题，什么时候打扫家务，什么时候出去旅游，过节送什么礼物等等问题。都是感性的，面向的并不是客观存在的。
人的观念类似于电子的轨道跃迁 有些人很容易收到新内容，新理论的影响而发生改变，就像活跃的电子一样，虽然一点作用力就发生轨道跃迁。而有些电子处于内部轨道，收到原子核的影响，不会轻易发生改变。
不能通过是否改变去评价活跃电子的好坏对错。
拥有足够的控制力才能避免信息的影响，没有足够的控制了，一点点外部作用力都能影响。
有些人的思维定势，自身形成的牢固的控制力，很难受外力影响。
正反馈负反馈 征信的作用 瑞克和莫蒂 平行宇宙
杀手要求瑞克为他寻找一个女儿存活的平行宇宙，剧情表现的是杀手进入平行宇宙，杀掉原本的自己，代替原本的自己陪女儿生活。这其实是编剧为了突出平行宇宙设定的猎奇而故意将故事描述的暗黑。由于无限平行宇宙，剧情完全可以让瑞克为杀手寻找一个原本杀手死亡的世界，然后照顾女儿生活。就是另一个美好的设计。要知道平行宇宙的设定本身就是编辑写出来的，编辑并没有写美好而是故意写的暗黑，这其实就是一个刻意描述。
长寿 电视剧神秘博士里，博客拥有数千年寿命，那么已他的种族的基准来看，假如一个人类拥有了数百年，数千年寿命并不是悲哀的，痛苦的。神秘博士的种族完全可以为区区数百岁的人类指点迷津，正确长寿问题。
反而，认为数百年数千年的长寿是痛苦的，只会是人类自己。无法理解而造成的心理落差。
质量效应里，高科技的外星人，寿命比人类要长，那么他们完全没有必要急于同人类发生冲突和战斗。他们只需要维持一个极其漫长的计划，一步步对人类造成影响，同化或战胜人类。科技锁死，区域封锁是一种有效的方式。战争，决战是亏损的方式。因为一个还有900年寿命的外星人跟一个几十岁的地球人战斗，一旦外星人受伤甚至死亡，寿命数值上的损失要远远大于人类。更何况，如果外星人的繁殖缓慢的话，就会被相当繁衍快速的人类一步步吞没。
西部数据换芯片 西部数据将红盘磁盘由垂直式改成叠瓦式，然后把叠瓦式命名为红盘，把垂直式红盘改名红盘plus
西部数据把固态硬盘SN550芯片改成SN350芯片</description>
    </item>
    
    <item>
      <title>随笔0803</title>
      <link>https://pub.oribos.cn/web/note/2021/2021080103/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021080103/</guid>
      <description>随笔 电信业务乱七八糟的事 联通宽带到期，按照手机app上的续费300元一年，当地营业厅打电话续费540元一年。
装机时送的设备是一个千兆网口，其他四个都是百兆网口。而且ipv6未开启。显示断开
电信宽带，正常办理资费600元一年，100兆融合是70元一年，通过活动链接办理200兆29元每月。
装机时设备里的wan口地址为内网地址，ipv6可正常使用。电信淘宝店铺套餐588一年
IT技术的槽点 usb3.2 gen1速度=usb3.1 gen1=usb3.0 厂商为了避免库存型号不至于马上淘汰，故意把型号混淆。
intel频繁的更换cpu插槽，
type-C 高速线，低速线，雷电接口线 外观一摸一样，没有颜色，类型区分。有的支持显示输出，有的不支持，甚至有usb2.0速度的线材混入type-C
IT技术发展 VGA接口和DVI接口的螺丝固定 D型， I型不同，这些接口的螺丝在工业领域可以保持稳定链接。
usb的防止反插
ps/2键盘鼠标的不可热插拔，硬盘的热插拔</description>
    </item>
    
    <item>
      <title>不兼容的需求</title>
      <link>https://pub.oribos.cn/web/note/2021/2021071901/</link>
      <pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021071901/</guid>
      <description>由于对资料的进一步要求，使用以下对当前普通电脑不兼容的策略。 加密的目的是控制数据，访问限制
sas硬盘 bitlocker加密 linux磁盘格式 容器运行 步骤 本机的接入硬盘后，将硬盘设置脱机，然后再hyper-V里打开虚拟机，将硬盘接入hyper-V虚拟机。虚拟机系统盘也需要加密。
不同的hyper-V虚拟机可以是linux，也可以是windows。当虚拟机采用linux时可以识别ext4、btrfs或其他格式。
由于所有硬盘均需要bitlocker加密，群晖NAS，freenas，omv等linux类型的nas系统均不再适用。只使用windows server做文件服务器
运行docker也是在windows上运行docker for windows wsl2版本
3.5寸和2.5寸选择 旧设备，工作站使用3.5寸SATA或SAS
新设备，服务器使用2.5寸SATA或SAS
yubikey 使用yubikey 对电脑，手机，平板进行安全口令的管理和验证
配置硬件加密，确保数据能再完全可控和数据限制。</description>
    </item>
    
    <item>
      <title>使用yubikey</title>
      <link>https://pub.oribos.cn/web/note/2021/2021081901/</link>
      <pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021081901/</guid>
      <description>内容待更新
数据备份 yubikey
出现问题 接口问题 由于我对接口换代的过分要求，已经只会购买USB type-C 接口的设备，然而同样的硬件，USB type-C接口的yubikey要贵90块钱。更离谱的是type-C不一定所有设备都能接入，有时候需要通过C转A口，插入旧式电脑。
yubikey login for windows 程序里无法找到使用微软账户的账户名,即登录验证只能用于本地账户，而且如果你为本地账户配置的登录验证，再将本地账户转换成微软在线账户，那将无法登录系统。无论使用本地账户名还是微软账户地址。
硬件易折损 为了应对特殊情况，比如绑架，胁迫等，yubikey设计的可以轻易折损。这样就可以有效防止信息泄露，然而特殊情况很少出现，这时候如果没有妥善保管硬件并备份好yubikey安全信息，极易导致计划外的信息丢失。这是一个很现实的安全和保险相冲突的情况。</description>
    </item>
    
    <item>
      <title>虚拟磁盘</title>
      <link>https://pub.oribos.cn/web/note/2021/2021071906/</link>
      <pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021071906/</guid>
      <description>VHD VHD的windows里创建的虚拟磁盘，关于VHD的用法有相当多种。通过VHD可以将C盘或其他盘未使用空间分出来作为独立的磁盘管理。这个磁盘可以作为hyper-V的系统盘或其他盘。并支持bitlocker加密。
LUN存储 通过在NAS或文件存储器里创建LUN并在客户端连接LUN即可获得虚拟磁盘，这个磁盘是基于网络连接的。
hyper-V的磁盘 物理磁盘做hyper-V磁盘，将物理磁盘连接电脑后，设置磁盘脱机，再在hyper-V虚拟机里，添加磁盘，使用物理磁盘。
这样的操作可以让hyper-V里的linux或MacOS识别对应的磁盘格式，而不仅限于常用的ntfs fat32格式。
使用 磁盘上的虚拟磁盘、LUN存储、hyper-V、bitlocker配合使用可以提升资料安全。
将硬盘接入电脑，在磁盘管理里将硬盘脱机，打开hyper-V</description>
    </item>
    
    <item>
      <title>随笔</title>
      <link>https://pub.oribos.cn/web/note/2021/2021071901/</link>
      <pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021071901/</guid>
      <description>内容待更新
数据备份 数据安全 资本家对选择的霸占 个性和目的 过度集中化的设备 人性化设计 页面返回或下拉后原内容不变
厂商 nero
网站访问速度极慢，有中文站点却不会自动跳转，还禁用鼠标跳转链接
软件捆绑各种自家产品，自动更新，而更新极其缓慢。导致产品无法正常使用。
adobe
microsoft
bitlocker加密，极其缓慢却无法定义处理速度，加快硬盘读写，cpu处理等参数。极其缓慢的加密和解密，期间还必须确保硬盘不能拔出</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://pub.oribos.cn/about/</link>
      <pubDate>Sat, 10 Jul 2021 11:24:06 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/about/</guid>
      <description>内容更新中 </description>
    </item>
    
    <item>
      <title>分享</title>
      <link>https://pub.oribos.cn/web/note/2021/2021071001/</link>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021071001/</guid>
      <description>hexo 普通部署
使用npm部署
docker docker模板
一些docker项目代码
树莓派更新软件源 1、当前树莓派4b基于debian10
一、国内源说明 1、先到https://tvtv.fun/ping测一下速度，看看哪个比较快，这里以电子科技大学为例
2、需要改的源有两个：Raspbian 和 Raspberrypi。可以看镜像站的使用说明如科技大学说明
二、改
1.系统源 备份原文件
sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak 一键修改
sudo sed -i &amp;#39;s|raspbian.raspberrypi.org|mirrors.ustc.edu.cn/raspbian|g&amp;#39; /etc/apt/sources.list 也可以用nano手动把raspbian.raspberrypi.org/替换成mirrors.ustc.edu.cn/raspbian/
2.软件源 备份原文件
sudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak 一键修改
sudo sed -i &amp;#39;s|//archive.raspberrypi.org|//mirrors.ustc.edu.cn/archive.raspberrypi.org|g&amp;#39; /etc/apt/sources.list.d/raspi.list 3.更新索引（修改源后必做）
sudo apt-get update 4.更新软件包（建议）
sudo apt-get upgrade </description>
    </item>
    
    <item>
      <title>随笔0706</title>
      <link>https://pub.oribos.cn/web/note/2021/2021070601/</link>
      <pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021070601/</guid>
      <description>服务器端口 将服务器的ssh服务端口修改成3306 3389 6000等所谓的非安全端口，是否能起到防护作用？
备份冗余 由于对单个磁盘的可靠性极度不信任，对于备份一般都同时保存到多个设备。文件同时保存在多个设备，但由于实际使用中，并不能确保所有设备的文件都是同步的，导致后续使用无法确认哪个最新最有价值，这就导致了同时保留了一个文件的多个版本。
使用git进行版本控制，对于大型文件管理较困难，而对于零碎文件，在ssd里读写又影响速度。
冷备份 纸张备份 恢复密钥需要打印出来保存，重要的密钥可选择使用激光镌刻在金属板上备份
光盘备份 换掉NAS 由于未找到合适的在群晖NAS接bitlocker加密的硬盘，只能停止使用NAS，转而将硬盘拆下来，放到磁盘阵列里在windows里使用</description>
    </item>
    
    <item>
      <title>BitLocker 智能卡自签名证书</title>
      <link>https://pub.oribos.cn/web/note/2021/2021070502/</link>
      <pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021070502/</guid>
      <description>生成证书 创建1.txt
[NewRequest] Subject = &amp;#34;CN=BitLocker Encrypt,C=CN&amp;#34; ValidityPeriod=Years ValidityPeriodUnits=100 HashAlgorithm = sha1 KeyLength = 2048 ProviderName = &amp;#34;eToken Base Cryptographic Provider&amp;#34; KeySpec = &amp;#34;AT_KEYEXCHANGE&amp;#34; KeyUsage = &amp;#34;CERT_KEY_ENCIPHERMENT_KEY_USAGE&amp;#34; KeyUsageProperty = &amp;#34;NCRYPT_ALLOW_DECRYPT_FLAG&amp;#34; RequestType = Cert SMIME = FALSE [EnhancedKeyUsageExtension] OID=1.3.6.1.4.1.311.67.1.1 使用命令
D:\ufs&amp;gt; certreq -new d:\ufs\1.txt 创建证书
智能卡已经导入证书 假定智能卡能被识别而且其中有自签名证书
修改注册表 将 HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\FVE 中的 DWORD 值 SelfSignedCertificates设置为 1.
也可以把下面的文本保存为 REG 文件导入。
Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE] &amp;#34;SelfSignedCertificates&amp;#34;=dword:00000001 问题 智能卡是有证书的，但windows却提示在智能卡上找不到适用于bitlocker的证书,因为证书属于自签名证书，没有被Windows系统识别。</description>
    </item>
    
    <item>
      <title>启用加密</title>
      <link>https://pub.oribos.cn/web/note/2021/2021070501/</link>
      <pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021070501/</guid>
      <description>大文件库 为了简化文档存储备份，对之前的所有文件进行整理，建立大文件库。同时对大文件库区分私有内容，公开内容，特殊内容。对私有内容和特殊内容进行加密。
对文件使用加密 对个人使用的电脑硬盘，u盘，移动硬盘启用bitlocker加密。
对加密的管理 加密的选择: 对磁盘进行bitlocker加密
验证：加密使用密码和电子钥匙验证。
电子钥匙的管理：电子钥匙区分，ES BS AS三类。根据需要对证书进行部署。
恢复密钥的管理：用来加密恢复的密钥妥善保管，保存在onedrive,云盘，对象存储，专用U盘，私有git文件托管仓库。
兼容性: 不对旧设备进行兼容
其他问题点 并非所有的文件都需要加密，并非所有的硬盘都必须加密。必要保留数块硬盘以备数据在解密失败时备用。
用于存放恢复密钥的设备，只会专用，不能随便删除，格式化。
用于设备连接的硬盘不能使用加密
用于专门存储恢复密钥的移动盘不能是加密磁盘</description>
    </item>
    
    <item>
      <title>控制力</title>
      <link>https://pub.oribos.cn/web/note/2021/2021062601/</link>
      <pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021062601/</guid>
      <description>控制力的几种形式 货币 资源 地位 荣誉等
表现为显性和隐性
控制力的作用 维持 维护一种状态的必要力量，维持一个不断变化的局面保持相对稳定必须使用控制力。
改变 力的作用导致状态发生基于施力方期望的改变。这个改变是短期也可能是长期。
毁灭 控制力的极端表现是将某些部分排除出目前状态，迫使目标消失，离开或毁灭。
过分的要求 “善意”的要求 微软为了所谓的安全理由，强制要求必须使用tpm2.0以上才能安装最新的windows，这种看似善意的要求，其实出于自身的利益考虑，而且这种对计算机运行并不关联的东西是一种过分的要求
虚假的要求 宣称使用盗版软件会受到攻击和信息泄露，而许多家用，网吧对这些并不敏感。他们宣传防盗版其实是利益考虑</description>
    </item>
    
    <item>
      <title>依赖下沉</title>
      <link>https://pub.oribos.cn/web/note/2021/2021062502/</link>
      <pubDate>Fri, 25 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021062502/</guid>
      <description>依赖最基本的东西 为什么谷歌，阿里，腾讯等大公司的产品许多都是自己重新写的，很少使用外部的已有框架，项目。
越有能力者越会将自身的依赖回归到最基本的东西。
操作系统会向着像汇编语言甚至机器语言那种操作物理，重要的核心的东西肯定不会用java，python那种层层转换运行可靠性，适用性，效率等等。最终归纳就是最重要的东西往往依赖最淳朴的存在。
依赖网络，电力，底层代码最基本的规则会使得服务更可靠。依赖框架，程序能运行起来，但效率，可靠性并不能把握。除非是开源代码，并经过审查。否则圣诞节彩蛋问题就是警示。
功能分离 笔记本只是一个简单的终端，不需要太复杂太高要求。更不能指望一台笔记本能做任何事。
能完成众多工作的那是工作站。
你笔记本性能再高。有服务器十几核，32G甚至64G运行起来有效率？
你主打便携，如何保证测试程序持续运行数个小时测试bug？
使用代码管理。在任意一台终端上编辑代码，然后推送到代码仓库。手动或自动让代码运行。
这个代码仓库可以是内网服务或公网服务器甚至本机的程序或容器。实现的现象就是代码同本地文件逻辑上功能上的随时随地分离。
这其实是提供了一个选择权，是推送本机的仓库，内网服务器，公网服务器以及冗余备用的服务器等等多种选择权。功能上的分离使得代码可靠性提供，影响可靠性的条件很多，物理设备问题，备份的维护，代码自身版本管理等等。</description>
    </item>
    
    <item>
      <title>功能忽略</title>
      <link>https://pub.oribos.cn/web/note/2021/2021062501/</link>
      <pubDate>Fri, 25 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021062501/</guid>
      <description>博客缺失的功能 博客缺失评论，点赞，分享，打赏，标签分类等等功能。这些并不是说该博客不支持这些，而是将这些对于内容来说次要的东西删减了。甚至之前搜索功能也是被删减的，只是搜索功能太便利和重要了，又加回来了。
即本博客所展示的是内容的平放，仅仅突出首要的内容，尽可能精简页面的设计和元素。
功能忽略 之所以精简和忽略评论，点赞等功能。本着不诱导读者对内容以外的东西进行关注，不建议互动一些内容以外的其他信息。这个博客不是论坛或者微博之类的交流平台。即，博客的功能是展示相应文章，博主不希望维护博客内容以外的东西。</description>
    </item>
    
    <item>
      <title>测试新格式</title>
      <link>https://pub.oribos.cn/web/note/2021/2021062101/</link>
      <pubDate>Mon, 21 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021062101/</guid>
      <description>关于测试随机序列 测试新的url地址
之前为了保证文章最终地址为实际地址即http://域名/路径/文件名,而文件名往往是html，在url里也加入了name.html,现在修改name.html为name</description>
    </item>
    
    <item>
      <title>随笔20210619</title>
      <link>https://pub.oribos.cn/web/note/2021/2021061901.html</link>
      <pubDate>Sat, 19 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021061901.html</guid>
      <description>关于高等存在 这个高等存在暂时称作“神”
人类的社会活动对于神存在来说微不足道，神没有必要对人类活动的每时每刻都用小本本记下来，即哪怕是全职全职的存在，也没有任何义务和责任去维护低等存在的社会活动。
关于人的社会活动 人类的社会活动只是为了维护自身的稳定和持续。这是一个自身内部的控制力。即秩序，法律和道德是人类自身为了维持社会活动而形成的。而形成这些秩序是需要内部动力的，即阶级，统治，利益。
原始社会的按劳分配是粗略的，即原始人没有能力维护这个按劳分配的秩序，只是处于最低态控制力的表现呈现的简单分配。
关于平等 处于不同起步的存在，比如男女性别差异，在过去注重劳动力的时代，男性拥有更强大的劳动力而得以在社会上占据统治地位。即强壮的男性才是主导。而随着社会生产力的提高，劳动力已经不再有主导作用，男性女性的社会地位都在提高，而到社会地位的提升瓶颈时,过去压抑的女性成了同男性平起平坐的地步。这是进步的。然而，有些人却要阻挡这种进步体现，即当前社会男性女性是由于社会地位不断上升才到达同等地位的。若故意的处于自身的目的去打压另一方存在，比如阻挡共同提高的大趋势，而成了阻碍社会进步的绊脚石。
地位的提高其实就是社会控制力的进一步加强。而同这种控制力对抗是不明智的。
windows糟糕的权限管理 当旧电脑坏了，把旧电脑的硬盘拆下来，打开文档目录提示无法，
然后配置权限，本来需要的文件是文档图片，结果windows对着临时文件一顿扫描授权，先扫描名称带.的隐藏文件，后来扫描appdata，最后扫描正常使用的文档。数个小时扫描不完.
真正需要的.doc .jpg迟迟打不开。
我硬盘都拆了。肯定转移重要文档，你跟我扫描授权临时文档APPData文件做什么，这些文件都要删除重建，浪费几个小时在这些破东西上。
windows对个人文件，软件配置文件，系统文件，临时文件的管理是相当混乱不清。</description>
    </item>
    
    <item>
      <title>20210616</title>
      <link>https://pub.oribos.cn/web/note/2021/2021061603.html</link>
      <pubDate>Wed, 16 Jun 2021 11:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021061603.html</guid>
      <description>测试 将网站内容同时部署在三个源站，测试其文件自动同步
步骤 第一次自动触发失败，
原因：每次推送均使用git push -f方式，导致服务器端无法正常使用git pull命令
解决方式： 删除原public，每次触发重新git pull
第二次自动触发失败
原因： 新生成的文件权限属于root，导致nginx无法读取
待解决
目前找到的方法是重新加载nginx的docker容器
暂时解决代码 cd /denalon/code/blog &amp;amp;&amp;amp; rm -rf public &amp;amp;&amp;amp; git clone -b public git@e.coding.net:denalon/public/blog.git public &amp;amp;&amp;amp; cd /denalon/app/nginx &amp;amp;&amp;amp; docker-compose restart 内容托管 源码和程序分开部署，单独托管。避免出现服务器故障时就无法访问。当部署程序的服务器发生故障时，使用其他地方的源码进行快速部署，而不是在故障服务器上寻找程序和源码。
事例，上传源码到github，经过github actions对源码进行构建，将生成文件推送到build分支。然后再触发webhook，使得服务器自动将build使用git pull下载回部署服务器。
1 源码在github托管，可以使私有库或者公有库。在部署时，只需要及时将源码git push到github即可。
2 源码在github或者其他代码托管，可以通过同时配置多个远程地址，上传到多个代码托管，比如gitlab coding等等。
3 本地不需要管理源码文件，随时拉取或删除源码。本地也不需要安装运行所需的环境。
4 部署的服务器不一定需要安装构建所需要的环境，如果是静态文件，只需要部署一个nginx即可。</description>
    </item>
    
    <item>
      <title>github的api</title>
      <link>https://pub.oribos.cn/web/note/2021/2021061601.html</link>
      <pubDate>Wed, 16 Jun 2021 11:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021061601.html</guid>
      <description>api地址 例如以下地址https://api.github.com/repos/Hello-hao/Tbed/releases/latest,github提供一个对上传到github仓库的文件进行详细统计的数据。通过查询相应的数据可以获取该仓库的最新地址或指定地址。
以以下项目为例，使用
curl -s https://api.github.com/repos/Hello-hao/Tbed/releases/latest | grep &amp;#34;browser_download_url.*zip&amp;#34; | cut -d &amp;#39;&amp;#34;&amp;#39; -f 4 返回一个最新编译包的完整url地址
通过使用以下命令
curl -s https://api.github.com/repos/Hello-hao/Tbed/releases/latest | grep &amp;#34;browser_download_url.*zip&amp;#34; | cut -d &amp;#39;&amp;#34;&amp;#39; -f 4 | wget -i - 自动下载该最新编译包</description>
    </item>
    
    <item>
      <title>一个mongodb的事例</title>
      <link>https://pub.oribos.cn/web/share/2021061603.html</link>
      <pubDate>Wed, 16 Jun 2021 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/share/2021061603.html</guid>
      <description>一个mongodb的事例 通过以下代码，并不能正常运行该项目，先做记录，后续调整。
docker-compose.yml version: &amp;#39;3&amp;#39; networks: waline: external: false services: waline: container_name: waline image: lizheming/waline:latest restart: always ports: - 8360:8360 # volumes: # - ./data:/app/data networks: - waline environment: TZ: Asia/Shanghai MONGO_HOST: mongo MONGO_PORT: &amp;#34;27017&amp;#34; MONGO_DB: waline MONGO_USER: root MONGO_PASSWORD: example # MONGO_REPLICASET: atlas-12cebf-shard-0 MONGO_AUTHSOURCE: root MONGO_OPT_SSL: &amp;#34;false&amp;#34; # JWT_TOKEN: &amp;#39;Your token&amp;#39; # SITE_NAME: &amp;#39;Your site name&amp;#39; # SITE_URL: &amp;#39;http://129.211.208.41&amp;#39; # SECURE_DOMAINS: &amp;#39;example.com&amp;#39; # AUTHOR_EMAIL: &amp;#39;mail@example.com&amp;#39; mongo: image: mongo container_name: mongo restart: always networks: - waline environment: MONGO_INITDB_ROOT_USERNAME: root MONGO_INITDB_ROOT_PASSWORD: example mongo-express: image: mongo-express restart: always networks: - waline ports: - 8081:8081 environment: ME_CONFIG_MONGODB_ADMINUSERNAME: root ME_CONFIG_MONGODB_ADMINPASSWORD: example </description>
    </item>
    
    <item>
      <title>k8s安装和部署</title>
      <link>https://pub.oribos.cn/web/note/2021/2021061001.html</link>
      <pubDate>Thu, 10 Jun 2021 11:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021061001.html</guid>
      <description>引用自阿良的博客 http://blog.ctnrs.com/post/k8s-kubeadm-install/
安装要求 在开始之前，部署Kubernetes集群机器需要满足以下几个条件：
一台或多台机器，操作系统 CentOS7.x-86_x64
硬件配置：2GB或更多RAM，2个CPU或更多CPU，硬盘30GB或更多
集群中所有机器之间网络互通
可以访问外网，需要拉取镜像
禁止swap分区
准备环境 角色 IP k8s-master 192.168.31.63 k8s-node1 192.168.31.65 k8s-node2 192.168.31.66 操作步骤 准备系统环境 关闭防火墙： $ systemctl stop firewalld $ systemctl disable firewalld 关闭selinux： $ sed -i &amp;#39;s/enforcing/disabled/&amp;#39; /etc/selinux/config $ setenforce 0 关闭swap： $ swapoff -a # 临时 $ sed -ri &amp;#39;s/.*swap.*/#&amp;amp;/&amp;#39; /etc/fstab # 永久 根据规划设置主机名： hostnamectl set-hostname &amp;lt;hostname&amp;gt; 在Master添加Hosts： $ cat /etc/hosts 192.168.31.62 k8s-master 192.168.31.63 k8s-node1 192.168.31.65 k8s-node2 将桥接的IPv4流量传递到iptables的链： $ cat &amp;gt; /etc/sysctl.</description>
    </item>
    
    <item>
      <title>20210603</title>
      <link>https://pub.oribos.cn/web/note/2021/2021060301.html</link>
      <pubDate>Thu, 03 Jun 2021 11:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021060301.html</guid>
      <description>需求 自动下载最新发布的应用版本
自行决定下载版本和运行环境
外部可自定义的运行命令
可选的文件储存位置
h5 部署了一个discuz Q站点，然后用Hbuilder X新建一个uni-app项目
将discuz Q站点的服务器地址填上去，生成了一个H5文件，
这个H5文件包部署到nginx就可以像前端页面一样，访问和编辑。
笔记服务下线 将服务器重置时没有提前将笔记服务器的数据导出，导致数篇笔记丢失，笔记服务站点note下线
幸亏手机客户端有几篇文章缓存。截图重写。
持续的收集 收集了大量各类项目，编写或抄袭代码，放到docker仓库里。尽管后续使用的容器技术可能逐渐脱离docker，但现在保留使用易用方便的docker-compose文件还是很有必要的。
变态的安装方式 postfixadmin的初始化安装 第一步，需要通过http://域名/setup.php
通过输入密码，获得管理员hash（Generate setup_password hash）
hash值事例如下：
$CONF[&amp;#39;setup_password&amp;#39;] = &amp;#39;$2y$10$UkOf2dWBhDiOtH1BJ1.G.OzNxZ00Vn6n55ryPG9ieYqycelmQKU66&amp;#39;; 而这个hash并不能直接用来登录，需要第二步操作
第二步，将生成的hash值添加到项目的配置文件config.local.php的文件里
将
$CONF[&amp;#39;setup_password&amp;#39;] = &amp;#39;changeme&amp;#39;; 修改为
$CONF[&amp;#39;setup_password&amp;#39;] = &amp;#39;$2y$10$UkOf2dWBhDiOtH1BJ1.G.OzNxZ00Vn6n55ryPG9ieYqycelmQKU66&amp;#39;; 然后保存
第三步，再次登录http://域名/setup.php
登录 第一步输入的密码 Login with setup_password
正式获得新建管理员账号和密码的权限
极其复杂，繁琐 复杂繁琐的配置只是所谓的安全</description>
    </item>
    
    <item>
      <title>20210603</title>
      <link>https://pub.oribos.cn/web/note/2021/2021060301.html</link>
      <pubDate>Thu, 03 Jun 2021 11:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021060301.html</guid>
      <description>需求 自动下载最新发布的应用版本
自行决定下载版本和运行环境
外部可自定义的运行命令
可选的文件储存位置
h5 部署了一个discuz Q站点，然后用Hbuilder X新建一个uni-app项目
将discuz Q站点的服务器地址填上去，生成了一个H5文件，
这个H5文件包部署到nginx就可以像前端页面一样，访问和编辑。
笔记服务下线 将服务器重置时没有提前将笔记服务器的数据导出，导致数篇笔记丢失，笔记服务站点note下线
幸亏手机客户端有几篇文章缓存。截图重写。
持续的收集 收集了大量各类项目，编写或抄袭代码，放到docker仓库里。尽管后续使用的容器技术可能逐渐脱离docker，但现在保留使用易用方便的docker-compose文件还是很有必要的。
变态的安装方式 postfixadmin的初始化安装 第一步，需要通过http://域名/setup.php
通过输入密码，获得管理员hash（Generate setup_password hash）
hash值事例如下：
$CONF[&amp;#39;setup_password&amp;#39;] = &amp;#39;$2y$10$UkOf2dWBhDiOtH1BJ1.G.OzNxZ00Vn6n55ryPG9ieYqycelmQKU66&amp;#39;; 而这个hash并不能直接用来登录，需要第二步操作
第二步，将生成的hash值添加到项目的配置文件config.local.php的文件里
将
$CONF[&amp;#39;setup_password&amp;#39;] = &amp;#39;changeme&amp;#39;; 修改为
$CONF[&amp;#39;setup_password&amp;#39;] = &amp;#39;$2y$10$UkOf2dWBhDiOtH1BJ1.G.OzNxZ00Vn6n55ryPG9ieYqycelmQKU66&amp;#39;; 然后保存
第三步，再次登录http://域名/setup.php
登录 第一步输入的密码 Login with setup_password
正式获得新建管理员账号和密码的权限</description>
    </item>
    
    <item>
      <title>20210531</title>
      <link>https://pub.oribos.cn/web/note/2021/2021053105.html</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021053105.html</guid>
      <description>k8s的应用 k8s的概念 k8s概念
k8s集群
k8s安装和部署
一．环境准备 二．部署前操作
借助ntp服务设置各节点的时间同步 通过DNS完成各节点名称解析，测试环境主机，测试用hosts文件代替 配置ssh免密登入 关闭各节点iptables和firewalld服务 禁用SELinux 禁用Swap设备 打开iptables桥接功能及路由转发 三．部署k8s集群
部署docker 部署kubernetes 配置Master节点初始化 在master安装flannel插入 Node节点加入 在master上查看
部署应用程序</description>
    </item>
    
    <item>
      <title>docker构建和运行jar</title>
      <link>https://pub.oribos.cn/web/note/2021/2021052701.html</link>
      <pubDate>Thu, 27 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021052701.html</guid>
      <description>说明 使用一个java相册开源项目，奈何不想在本地安装和运行java环境，通过docker进行maven打包和项目运行
文件列表 构建 使用以下代码构建
Dockerfile 文件
FROM maven:3.3-jdk-8 ADD ./app /usr/src/mymaven WORKDIR /usr/src/mymaven docker-compose.yml文件的内容
version: &amp;#39;3&amp;#39; services: maven: build: . container_name: maven environment: - USER_UID=1000 - USER_GID=1000 restart: &amp;#34;no&amp;#34; privileged: true volumes: - ./app:/usr/src/mymaven - /etc/localtime:/etc/localtime command: [ &amp;#39;mvn&amp;#39;, &amp;#39;clean&amp;#39;, &amp;#39;package&amp;#39; ] 将java项目放入app目录，然后执行docker-compose up构建项目
运行 docker-compose.yml
version: &amp;#39;3&amp;#39; networks: springboot: external: false services: springboot: image: openjdk:8u292-jdk-oraclelinux7 container_name: springboot environment: - USER_UID=1000 - USER_GID=1000 restart: always privileged: true networks: - springboot volumes: - .</description>
    </item>
    
    <item>
      <title>容器镜像加速</title>
      <link>https://pub.oribos.cn/web/note/2021/2021052402.html</link>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021052402.html</guid>
      <description>镜像加速器 加速器地址 https://0ijzpgpi.mirror.aliyuncs.com
sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json &amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39; { &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://0ijzpgpi.mirror.aliyuncs.com&amp;#34;] } EOF sudo systemctl daemon-reload sudo systemctl restart docker 容器化 只有面板和用于反向代理的nginx需要安装在本地，其他应用均部署为容器化，目前使用docker部署</description>
    </item>
    
    <item>
      <title>零星的记录</title>
      <link>https://pub.oribos.cn/web/note/2021/2021052406.html</link>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021052406.html</guid>
      <description>阿里云企业邮箱地址 企业邮箱的POP3、SMTP、IMAP地址是什么？ 企业邮箱POP、SMTP、IMAP地址列表如下： （阿里云邮箱web端通用访问地址：https://qiye.aliyun.com/），客户端推荐以下参数配置： 协议	服务器地址	服务器端口号（常规）	服务器端口号（加密） POP3	pop.qiye.aliyun.com	110	995 IMAP	imap.qiye.aliyun.com	143	993 SMTP	smtp.qiye.aliyun.com	25	465 以下老地址和上面新地址一样可以正常使用： 协议	服务器地址	服务器端口号（常规）	服务器端口号（加密） POP3	pop3.mxhichina.com	110	995 SMTP	smtp.mxhichina.com	25	465 IMAP	imap.mxhichina.com	143	993 git三连 git add . &amp;amp;&amp;amp; git commit -m &amp;#34;up&amp;#34; &amp;amp;&amp;amp; git push 关于使用docker构建通用运行环境 拉取一个简单的linux环境 安装go环境或者java环境 python环境 配置目录关联app到运行目录 将程序放放到app 执行docker运行命令，在docker构建的运行环境了运行相应程序 配置插件目录，使用额外的运行命令安装和配置插件 配置外部配置文件，自定义运行配置文件
docker里的文件 &amp;amp;&amp;amp; git clone https://e.coding.net/frednab/dev/hexo-blog.git blog \ &amp;amp;&amp;amp; cd blog \ &amp;amp;&amp;amp; npm ci \ &amp;amp;&amp;amp; hexo g FROM debian RUN sed -i s@/deb.</description>
    </item>
    
    <item>
      <title>理念</title>
      <link>https://pub.oribos.cn/web/note/2021/2021051703.html</link>
      <pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021051703.html</guid>
      <description>随笔：理念 对用户的不友善 某些对用户不友善的设计：过于微小的录入框，繁琐的验证码，数秒的访问验证，复杂的登录要求
对用户的强迫 复杂的密码，强制性机要问题，强制性密码有效期，必须捆绑手机号，过多的权限要求
默认设计的缺陷 默认配置功能过低，
定位 设计师最高，不关心顾客需求，一味体现设计师自己的想法
致病因子 ：密集恐惧，巨物恐惧，深海恐惧，色盲</description>
    </item>
    
    <item>
      <title>容器应用</title>
      <link>https://pub.oribos.cn/web/note/2021/2021051501.html</link>
      <pubDate>Sat, 15 May 2021 11:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021051501.html</guid>
      <description>容器应用仓库 容器应用仓库
部署了几个docker应用事例，保留备用。后期计划使用容器部署mysql和jar运行
环境简洁 在本地服务器上安装尽可能少的应用，避免环境复杂和配置冲突
易于移植 在不同系统，不同服务器环境下可以轻松转移数据和应用
后续配置 服务器只安装基本的git docker docker-compose 文件管理，不再配置mysql java php等开发环境，这些开发环境均在docker里运行
编写Dockerfile最佳实践 减少镜像层 一次RUN指令形成新的一层，尽量Shell命令都写在一行，减少镜像层。 例如： FROM centos:7 MAINTAINER www.ctnrs.com RUN yum install epel-release -y RUN yum install -y gcc gcc-c++ make -y RUN wget http://docs.php.net/distributions/php-5.6.36.tar.gz RUN tar zxf php-5.6.36.tar.gz RUN cd php-5.6.36 RUN ./configure --prefix=/usr/local/php RUN make -j 4 RUN make install EXPOSE 9000 CMD [&amp;#34;php-fpm&amp;#34;] 应该写成：
FROM centos:7 MAINTAINER www.ctnrs.com RUN yum install epel-release -y &amp;amp;&amp;amp; \ yum install -y gcc gcc-c++ make RUN wget http://docs.</description>
    </item>
    
    <item>
      <title>用于持续运行的数据库</title>
      <link>https://pub.oribos.cn/web/note/2021/2021051401.html</link>
      <pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021051401.html</guid>
      <description>mysql version: &amp;#39;3.1&amp;#39; networks: app: external: false services: db: image: mysql:5.7.22 restart: always container_name: mysql networks: - app ports: - 9036:3306 privileged: true environment: TZ: Asia/Shanghai MYSQL_ROOT_PASSWORD: 123456 command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci --explicit_defaults_for_timestamp=true --lower_case_table_names=1 --max_allowed_packet=128M --sql-mode= --default-authentication-plugin=mysql_native_password --sql-mode=&amp;#34;STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO&amp;#34; volumes: - ./mysql/data:/var/lib/mysql - ./mysql/conf/my.cnf:/etc/my.cnf phpmyadmin 用来图形化访问mysql数据库的管理界面
version: &amp;#39;3.1&amp;#39; networks: phpmyadmin: external: false services: db: image: mariadb:10.3 restart: always networks: - phpmyadmin environment: MYSQL_ROOT_PASSWORD: notSecureChangeMe phpmyadmin: image: phpmyadmin restart: always networks: - phpmyadmin ports: - 9018:80 environment: - PMA_ARBITRARY=1 - PMA_HOST=XXXX </description>
    </item>
    
    <item>
      <title>20210511</title>
      <link>https://pub.oribos.cn/web/note/2021/2021051101.html</link>
      <pubDate>Tue, 11 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021051101.html</guid>
      <description>随笔 光速 光量子没有静质量有动质量，任何有静质量的物体加速最终都会达到一个理想中的极限，即静质量为0的光量子的速度。
宇宙构成 空间有最小单位，时间有最小单位，速度有光速上限，温度有最低值
有限 一辆高速运行的火车，是在有限的时间前进了一小段距离
目的性 产品，行为，设计的目的
行为，方案的需求和期望
网页的目的性 一个普通网页的最终目的是什么？展示宣传还是广告或者诈骗？ 页面内容是否正确，是否合适
页面的设计是否人性化，排版和设计是否易于阅读？某些不成功的页面，使用极刺眼的文章，夸张的图片，禁止选取复制和下载转载等等。出于自己目的对文章，页面进行限制是不利于读者的行为。
爱死亡机器人第二季 机器人，家政机器人是否载入军事行为？军事行为下机器人是否突破机器人三大定律？即造出来的机器人是否遵循基本的机器人三大定律？不遵守机器人三大定律的机器人是否被同样对待？
美剧总是会为了体现社会矛盾，故意夸大种族矛盾。脑子正常一点的前线士兵都不会随便对战友太过歧视，毕竟生死攸关。只有弱者累赘才会被歧视。而不是几个普通士兵歧视强大的异族。
前线，应该强大的异族歧视普通士兵，士兵对帮他们挡子弹的超级战士又恨又不敢惹，不服但不会明面上挑起矛盾。毕竟矛盾一出，自己只有被虐的份。</description>
    </item>
    
    <item>
      <title>docker项目的配置文件备份</title>
      <link>https://pub.oribos.cn/web/note/2021/2021051001.html</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021051001.html</guid>
      <description>wiz version: &amp;#39;3&amp;#39; services: bitwarden: image: wiznote/wizserver:latest container_name: wiz restart: always volumes: - /denalon/app/wiz/wizdata:/wiz/storage - /etc/localtime:/etc/localtime ports: - &amp;#34;9060:80&amp;#34; - &amp;#34;9269:9269&amp;#34; halo 使用docker数据库的halo version: &amp;#39;3&amp;#39; networks: halo: external: false services: server: image: openjdk container_name: halo environment: - USER_UID=1000 - USER_GID=1000 restart: always privileged: true networks: - halo volumes: - ./halo-1.4.8.jar:/halo.jar - ./application.yaml:/application.yaml - /etc/localtime:/etc/localtime ports: - &amp;#34;9030:8090&amp;#34; depends_on: - db command: [ &amp;#39;java&amp;#39;, &amp;#39;-jar&amp;#39;, &amp;#39;halo.jar&amp;#39; ] db: image: mysql restart: always environment: - MYSQL_ROOT_PASSWORD=halo - MYSQL_USER=halo - MYSQL_PASSWORD=passwd - MYSQL_DATABASE=halodb networks: - halo ports: - &amp;#34;9036:3306&amp;#34; volumes: - .</description>
    </item>
    
    <item>
      <title>一键导入iconfont</title>
      <link>https://pub.oribos.cn/web/me/2021/2021050801.html</link>
      <pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/me/2021/2021050801.html</guid>
      <description>进入iconfont官网后，进入需要下载图标页面，打开控制台（F12）,输入一下两段js代码
var j = document.createElement(&amp;#39;script&amp;#39;); j.setAttribute(&amp;#34;src&amp;#34;, &amp;#39;https://ajax.microsoft.com/ajax/jquery/jquery-1.4.min.js&amp;#39;); document.getElementsByTagName(&amp;#34;head&amp;#34;)[0].appendChild(j); 回车后再输入
$(&amp;#34;span[title=&amp;#39;添加入库&amp;#39;]&amp;#34;).each(function(){ $(this).delay(100).click(); console.log($(this).parent().prev().children().eq(0).html()); }); 回车后，等待执行完毕后，点击右上角或者右侧的购物车图标，发现已经将所有图标添加入库，此时点击下载即可。
halo sudo docker run -it -d --name halo -p 9030:8090 -v /denalon/app/halo:/root/.halo --restart=always halohub/halo docker和docker-compose version: &amp;#34;2&amp;#34; services: eid-service: # 指定容器名称 container_name: halotest # 重启机制 restart: always # hub地址，image版本 image: halohub/halo volumes: # 本地jar包路径 - /denalon/app/halo:/root/.halo - /denalon/app/dev/application.properties:/application.properties # 指定容器时间为宿主机时间 - /etc/localtime:/etc/localtime # 访问端口 ports: - &amp;#34;9030:8090&amp;#34; environment: # 指定时区 - TZ=&amp;#34;Asia/Shanghai&amp;#34; # 其他参数 </description>
    </item>
    
    <item>
      <title>docker部署hello图床</title>
      <link>https://pub.oribos.cn/web/me/2021/2021051301.html</link>
      <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/me/2021/2021051301.html</guid>
      <description>说明 不需要在本地安装jdk 需要数据库和docker环境 安装docker和docker-compose
安装数据库（本项目没有在docker里运行数据库，需要在宿主机安装数据库）
新建docker-compose.yml修改application.properties和其他配置文件
docker-compose.yml源码 version: &amp;#34;2&amp;#34; services: eid-service: # 指定容器名称 container_name: hellohao # 重启机制 restart: always # hub地址，image版本 image: openjdk:8u292-jdk-oraclelinux7 volumes: # 本地jar包路径 - ./hellohao:/hellohao - ./Tbedmain:/Tbedmain - ./data:/data/upload_tmp - ./hellodata:/HellohaoData - ./application.properties:/application.properties # 指定容器时间为宿主机时间 - /etc/localtime:/etc/localtime # 访问端口 ports: - &amp;#34;8088:8088&amp;#34; environment: # 指定时区 - TZ=&amp;#34;Asia/Shanghai&amp;#34; # 其他参数 command: [ &amp;#39;./hellohao&amp;#39;, &amp;#39;java&amp;#39;, &amp;#39;-jar&amp;#39;, &amp;#39;Tbedmain&amp;#39; ] 其他内容 另一个版本的源码
version: &amp;#39;3&amp;#39; networks: hello: external: false services: server: image: openjdk:8u292-jdk-oraclelinux7 container_name: hello environment: - USER_UID=1000 - USER_GID=1000 restart: always privileged: true networks: - hello volumes: - .</description>
    </item>
    
    <item>
      <title>docker部署记录</title>
      <link>https://pub.oribos.cn/web/me/2021/20210512.html</link>
      <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/me/2021/20210512.html</guid>
      <description>转移到docker运行 图床，笔记，博客均迁入docker
出现问题 使用docker部署springboot，项目运行前需要在数据库里导入数据，即便我将数据库文件导入，项目运行时依然报错。此项目暂时只能使用外部数据库
使用docker部署的halo，数据库用mysql，导航页不显示，登录后文章统计不正常。
事例 通过简单的docker安装和docker-compose安装，部署项目到docker上运行，以下事例使用了内部网络和mysql数据库连接。
使用docker数据库的halo version: &amp;#39;3&amp;#39; networks: halo: external: false services: server: image: openjdk container_name: halo environment: - USER_UID=1000 - USER_GID=1000 restart: always privileged: true networks: - halo volumes: - ./halo-1.4.8.jar:/halo.jar - ./application.yaml:/application.yaml - /etc/localtime:/etc/localtime ports: - &amp;#34;9030:8090&amp;#34; depends_on: - db command: [ &amp;#39;java&amp;#39;, &amp;#39;-jar&amp;#39;, &amp;#39;halo.jar&amp;#39; ] db: image: mysql restart: always environment: - MYSQL_ROOT_PASSWORD=halo - MYSQL_USER=halo - MYSQL_PASSWORD=passwd - MYSQL_DATABASE=halodb networks: - halo ports: - &amp;#34;9036:3306&amp;#34; volumes: - .</description>
    </item>
    
    <item>
      <title>三观</title>
      <link>https://pub.oribos.cn/web/note/2021/2021050202.html</link>
      <pubDate>Sun, 02 May 2021 12:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021050202.html</guid>
      <description>三观 世界观 存在
世界，物质，科学的存在性。技术，方法，理论是否适合，有效。
价值观 判断
物质对人的作用是否有价值，是否值得做某些事，如何判断某些事情的对错，多少。
人生观 态度</description>
    </item>
    
    <item>
      <title>双生子佯谬</title>
      <link>https://pub.oribos.cn/web/note/2021/2021050201.html</link>
      <pubDate>Sun, 02 May 2021 11:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021050201.html</guid>
      <description>双生子佯谬 内容是这样的：有一对双生兄弟，其中一个跨上一宇宙飞船作接近光速的长程太空旅行，而另一个则留在地球。结果当旅行者回到地球后，我们发现他比他留在地球的兄弟更年轻。这个结果是由狭义相对论所推测出的（移动时钟的时间膨胀现象），而且是能够透过实验来验证：我们能够探测到于大气层上层产生的μ子（渺子，曾被称为μ介子）。如果没有时间膨胀，那些μ子在到达地面之前就已经衰变了。
例子 假设地球之外1光年的地方有一个星球打工星，地球在3000年1月1日发射飞船前往打工星。飞船达到光速0.9999倍速。打工星也在他们的时间打工星1000年1月1日观察到地球准备发射飞船。飞船与地球3000年1月1日起航，到达打工星。
此时地球观察打工星，观察到飞船到达打工星，时间是地球历3002年1月1日
打工星在打工星1000年1月1日观察到地球发射飞船，然后数秒后飞船到达打工星。
宇航员登入飞船，经过加速来到打工星，历时1秒
进一步说明 </description>
    </item>
    
    <item>
      <title>20210501</title>
      <link>https://pub.oribos.cn/web/note/2021/2021050104.html</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021050104.html</guid>
      <description>域名收敛 清理域名解析 清理冗余的域名解析记录，
清理不明确的域名使用，比如dev test blog 作为固定博客，单独使用
语义化域名记录
解析记录分级 从两种记录方式中选择 x.server x.static x.style
style/x code/x
清理域名持有量 服务 资源 页面
记录 oribos.city 服务 资源 inland style
ufs.pub 资源 static
oribos.cn 页面 blog
unid.dev 资源 paper
ufs.im 服务 函数
pps.im 服务 页面 备用 blog
备用 uns.pub elsatar.com
邮箱 oribos.city elsatar.com</description>
    </item>
    
    <item>
      <title>迁移asp.net项目</title>
      <link>https://pub.oribos.cn/web/note/2021/2021043001.html</link>
      <pubDate>Fri, 30 Apr 2021 11:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021043001.html</guid>
      <description>迁移asp.net项目 正常使用的CRM软件，部署在云服务器上，由于已经用了三年，当初打折价购买的服务器现在续费要一个月200元
步骤 安装环境 安装.net环境，iis，asp
安装sqlserver数据库
转移文件 关闭旧应用，将数据库文件转移到新服务器
将旧应用文件转移到新服务器
新建服务器站点
应用程序因程序配置 修改为.NET CLR V2.0.50727 托管管道模式 经典
启用32位应用程序：False
安装 ajax
配置sqlserver 连接数据库，新建应用登录用户名
启动应用 正式访问
问题 </description>
    </item>
    
    <item>
      <title>20210429</title>
      <link>https://pub.oribos.cn/web/note/2021/2021042901.html</link>
      <pubDate>Thu, 29 Apr 2021 11:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021042901.html</guid>
      <description>登录失败 以上错误均来自腾讯手机管家一款app
那么为什么要使用这样如此垃圾的app？还不是因为qq邮箱解绑英文名强制要求绑定这个垃圾app。
设计简陋的app 上传图片没有缩略图
阿里云手机app
强制要求 强制安全问题
强制学习步骤
莫名其妙的网络异常 文字和视频，app都可以打开，唯独个别软件的登录和读取信息出现缓存过久的情况。</description>
    </item>
    
    <item>
      <title>20210429</title>
      <link>https://pub.oribos.cn/web/note/2021/2021042907.html</link>
      <pubDate>Thu, 29 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021042907.html</guid>
      <description>随笔：手机录入 使用手机录入，在termux上使用git push远程仓库
其他 问 你拿出手机突然发现就剩0.1%电量了，只能做一件事或发送一条信息，你会做什么？
问 一个安卓手机和一个苹果手机掉水里了，你先捞哪个？
其他 🐬</description>
    </item>
    
    <item>
      <title>202104292</title>
      <link>https://pub.oribos.cn/web/note/2021/2021042909.html</link>
      <pubDate>Thu, 29 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021042909.html</guid>
      <description>记录 为什么传话筒经过多个人。内容会发生改变，而穿字条就能维持原意
情绪 人对情绪的控制是基于客观还是主观？</description>
    </item>
    
    <item>
      <title>20210428</title>
      <link>https://pub.oribos.cn/web/note/2021/2021042801.html</link>
      <pubDate>Wed, 28 Apr 2021 11:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021042801.html</guid>
      <description>随笔 成果 工作的重点是成果，能在一个小方面的工作上获得优异成果，也就在其他大问题上获得同样高的成绩。扫不干净一个小屋子，就更不要指望大屋子能扫干净，大事情能处理妥当。在一个小任务上投机耍滑，在大事上也难当大任。
关系 家庭是一个容忍程度相当高的环境，同时也是对极其细微的细节关注的很多，处理好家庭问题自然对其他陌生人的问题能处理得当。处理不好家庭问题，一味逃避只会反映出性格缺陷，在事业上也会碰壁挫折。
团队 陌生人是以利益而组成的，无论短期利益，长期利益。如果团队对利益的期望不同，对待团队的价值判断不同，团队就会出现各种各样的矛盾</description>
    </item>
    
    <item>
      <title>20210426</title>
      <link>https://pub.oribos.cn/web/note/2021/2021042601.html</link>
      <pubDate>Mon, 26 Apr 2021 11:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021042601.html</guid>
      <description>两句话概括 林黛玉倒拔垂杨柳，刘玄德三打白骨精
中华铅笔打假 厂家目标是为了打假，那么最首先的做法是控制在售假货，厂商应该上门收缴或收购或其他方式控制店铺在售假货，避免进一步受损。
而此案例，厂家只是下达律师函，法院传票。没有上门或者书面通知控制在售假货。意味着索赔是首要，假货是次要的，厂家不关心在售假货。
厂家发现市场假货，并得知店铺地址后，应派遣人员或者下达文件对假货收缴处理，商议善后事宜。简单直接地处理问题。而不是直接对簿公堂，打持久战。
堂堂一个全国知名品牌，国企要对一个小店铺直接下法院传票，置社会责任，市场影响组不顾。
自始至终，厂家并没有真正维护品牌形象，仅仅是拿着来历不明的产品要挟店铺。
其他 首先 人作为一种生物，不应该存在“”贞洁”的观念，女人同任何男性的行为在生物上是没有区别的。 人作为社会型生物，在社会型上有所限制。对“”关系”的需求比其他生物高。动物中也有“”夫妻”的概念，而人为了维持“”夫妻关系”就需要付出和让步。
“贞洁”的本质 一对夫妻的子嗣，有可能不是男方的，但必然是女方的。贞洁就是男权社会控制子嗣血脉的手段。原始社会母系社会，只知其母不知其父，并不会纠结贞洁问题。
认识: 产品/成果 工作目的就是成果。 成长:成果可累加 力气活: 成果不累加，随时间而损耗
体验生活，不要计较无意义的得失
三思，没有退路，也变不了
做人圆滑，做事也不能急，事缓则圆。而现实是运动式，
评价与批评人时尽量避免不必要的修饰，尽量避免人身攻击，对相貌，身材的描述。 尽量使论据集中在中立因素，归为是与否，多与少等基础逻辑上。避免感性渲染
主谓宾 动态，过程，行为 我写字 不需要状语描述状态，写字有没有写完？
主系表 静态，描述，状态
社会财富 王健林 先赚一个亿 深圳包租婆 拥有几栋楼 19岁学生骗走富婆2.5个亿
社会财富的分配有阶段性，层级特征
愚昧的迷信 神要是善的要么容不得人类这么残忍嗜血，要么于心不忍不会那么多灾难。神要是恶的那献祭少了没用献祭多了部族都完了。神要是坐视不管再怎么献祭也没用。
总之，这祭祀……图啥？​</description>
    </item>
    
    <item>
      <title>得州停电事件</title>
      <link>https://pub.oribos.cn/web/share/2021041901.html</link>
      <pubDate>Mon, 19 Apr 2021 08:20:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/share/2021041901.html</guid>
      <description>暴涨的新闻报道 仔细观察这些新闻，媒体刻意渲染涨价的幅度，涨价后的高额电费。但很少提供明确的涨价前的电价，只有极少数媒体会将涨价前的电价算出来或引用出来。
事实 得州由于是美国的能源大州，自身能源丰富，电力公司可以提供充足的电力供给，所以正常时期的电价极其便宜，基于此，得州不希望将自身供电同全美共享，那样会导致便宜电价被拔高。
基于自身能源丰富而不愿接入全美供电，可以保证自身的极低电价，但造成的影响是灾难时期的孤岛化。即其他州无法及时对其供给电力。
造成灾难时期供电涨价的本质是，电力供应量的减少。不涨价就得寻求其他分配方案，自愿拉闸限电，强制分区分时限电等等。这只是方案的不同，跟供电私有化，公有化并没有关系。私有化的供电依然能维持0.05美元的远低于其他国家的供电费用。
选择 如果你是一个得州用电居民，你愿意将得州用电接入全美电网，使得现有电价提高10倍左右，以在以后发生罕见灾难时获得稳定的供电？还是愿意保持现在的极低电价，在灾难时期承受可能的高额用电吗？
如果你是一个企业，其实没得选，在平常使用极低电价，灾难时期适当的停产减产，减少能源成本，同时由于不可抗力的自然灾害规避部分违约风险。选择保持现在的极低电价是极其明智的。</description>
    </item>
    
    <item>
      <title>20210417</title>
      <link>https://pub.oribos.cn/web/note/2021/2021041701.html</link>
      <pubDate>Sat, 17 Apr 2021 11:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021041701.html</guid>
      <description>简化 简化的本质是加强对重要内容的控制力，减弱次要内容的影响。
规整 面对杂乱无章的内容，太突兀的东西会影响整体美感。
备用 应当尽可能的拥有两个以上的部件，一个主用，一个备用。“2”是一个安全概念，低于2个意味着安全风险已经超过50%。
海外内容 应对国际化，部署在海外可以解决许多问题。但海外内容由于各种干扰访问困难。
其他 4月16日记录
必须有两个域名 取消java程序，仅提供基于hugo的网页
清除github gitee coding azure上的非重要项目
3个github仓库分配必要的内容，
取消jsd链接
整理所有文档的链接
unit doc story develop等名称，存档文件同样修改链接名
取消s.ufs.pub的资源链接</description>
    </item>
    
    <item>
      <title>入门git教程</title>
      <link>https://pub.oribos.cn/web/course/git.html</link>
      <pubDate>Wed, 14 Apr 2021 08:20:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/course/git.html</guid>
      <description>前言 此教程指导入门者初步接触git和使用git从代码托管服务商下载和推送代码，并不系统性介绍git各种概念和原理。
本教程的目录是为了让入门者初步使用代码。参考Git 简明指南
下载项目代码 在github下载缓慢可以选择coding或gitee下载
git的作用 Git（读音为/gɪt/）是一个开源的分布式版本控制系统，hexo的代码可以通过git命令实现代码管理,并通过github actions自动构建。
git使用 推送代码到github或使用项目的自动构建需要下列操作:
安装git 访问git官网下载git，然后按照提示安装(一直下一步什么都不需要改)
配置本地git用户信息 git config --global user.name &amp;#34;用户名&amp;#34; git config --global user.email &amp;#34;邮箱&amp;#34; 配置github仓库 1 注册github账户 在github官方注册github用户，获得用户名和密码
如果github无法访问，可以使用coding或gitee进行代码托管。
2 任选一种方式连接github 2.1 选择 https方式连接 推送代码时需要提供用户名和密码
2.2 ssh免密方式连接，需要使用密钥对
需要在本地电脑上使用以下命令生成密钥对 ssh-keygen -t rsa -C &amp;#34;GitHub 邮箱&amp;#34; 然后一路回车。生成的两个文件中，后缀名为.pub的文件为公钥，无后缀名或后缀名为.key的文件为私钥。
2.3 提交公钥给github，
使用记事本打开.pub文件，将文件内代码复制然后在github网站settings-SSH and GPG keys
私钥需要妥善保管，系统对私钥有严格要求，用于验证时权限不能太大，避免文件被改写影响验证。
私钥：当前系统的SYSTEM，Administrators用户组，拥有该文件的完全控制权限；该文件的所有者拥有修改权限。删除其他用户或Everyone读取和执行权限
公钥：除去私钥的所有权限设置外，可以允许Everyone拥有读取和执行权限
下载代码到本地 使用zip下载不会携带.git文件， 使用git clone方式下载的代码需要删掉项目根目录下的.git文件夹再执行如下操作。
进阶操作：你可以通过git remote github xxx.git 配置github仓库而不需要删除.git
推送代码到github 修改项目根目录下的文件，比如config.yml和CNAME文件，通过以下代码将整个仓库代码推送到github。
git init //初始化仓库。 git add .</description>
    </item>
    
    <item>
      <title>20210413</title>
      <link>https://pub.oribos.cn/web/note/2021/20210413.html</link>
      <pubDate>Tue, 13 Apr 2021 11:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/20210413.html</guid>
      <description>大公司的盛气凌人 google 苹果 微软 索尼等等大公司的强势政策
谷歌对docker的打压 为了在容器业务上控制，谷歌开发了新的容器平台，打压docker
产品缺陷 产品的各种看似不人性的设计，繁杂的配置都是处于各类目的进行而存在的。</description>
    </item>
    
    <item>
      <title>魔改主题</title>
      <link>https://pub.oribos.cn/web/note/2021/2021041307.html</link>
      <pubDate>Tue, 13 Apr 2021 09:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021041307.html</guid>
      <description>魔改主题 将docsy主题魔改成自己的，然后换成自己的名字，放到自己的仓库里。
经过一番折腾，成功运行。😄
过程曲折 由于我在日常修改配置文件的时候，并没有改动原主题的js目录下文件，所以自定义的主题目录里并没有复制js目录。导致第一次运行失败。
面对茫茫报错，反复修改（看不懂的注释掉），结果成功摸不着头脑。
然后就重新下载 主题 https://github.com/google/docsy.git（我采用的coding代码 https://e.coding.net/denalon/asset/docsy.git）。然后逐个目录替换，直到发现之前并没有是缺少整个js目录。
记录：对主题的修改 导航栏 修改原样式的.td-navbar-cover{background: transparent;}
彩色背景使用自定义css类.navbar-custom
.navbar-custom{ background: linear-gradient(90deg, rgba(247, 149, 51, 0.1) 0, rgba(243, 112, 85, 0.1) 15%, rgba(239, 78, 123, 0.1) 30%, rgba(161, 102, 171, 0.1) 44%, rgba(80, 115, 184, 0.1) 58%, rgba(16, 152, 173, 0.1) 72%, rgba(7, 179, 155, 0.1) 86%, rgba(109, 186, 130, 0.1) 100%); } 主体 使用下来代码对主体和页脚颜色进行彩色过渡
.footer-bg{ background: linear-gradient(90deg, rgba(247, 149, 51, 0.1) 0, rgba(243, 112, 85, 0.</description>
    </item>
    
    <item>
      <title>适用于萌新的hexo自动部署</title>
      <link>https://pub.oribos.cn/web/note/2021/2021041102.html</link>
      <pubDate>Sun, 11 Apr 2021 09:10:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021041102.html</guid>
      <description>适用于萌新的hexo自动部署 简述 下载本仓库代码，修改CNAME文件，添加自己的文章，将本仓库代码推送github
使用步骤 第一步 使用代码 git 下载coding仓库代码
git clone https://e.coding.net/frednab/dev/hexo-blog.git
第二步 修改配置 修改 source/CNAME文件里的域名
安装主题
方法一、下载主题目录，然后解压缩到themes目录下
方法二、使用npm安装主题
npm i hexo-theme-butterfly方式安装自己需要的主题（请参照自己需要主题的安装说明）
方法三、通过git submodule安装主题
git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly
其他文件不需要配置
第三步 更新文章 通过hexo new page 文章.md新建文档
或者在source/_posts目录下撰写自己的文章
第四步 将源码推送到github 通过一下命令将该仓库里的源码推送到github仓库
如果你是使用git clone方式下载的代码，建议删掉目录下的.git目录再执行如下操作
git init //初始化仓库。 git add . //添加文件到暂存区。(注意有点号.) git commit -m &amp;#34;更新说明&amp;#34; //将暂存区内容添加到仓库中。标识“更新说明” git remote add origin XXXX.git //添加到远程仓库操作，将xxxx.git设置为远程仓库origin git push -u origin master //推送master分支到origin仓库 提示操作成功后，代码将推送到github上的master分支，github自动部署将启动，将hexo文件自动部署到gh-pages分支
由于该仓库含有github自动构建文件，上传到github将触发自动部署
github自动构建文件为 .github/workflows/hexodeploy.yml文件</description>
    </item>
    
    <item>
      <title>适用于萌新的hexo自动部署</title>
      <link>https://pub.oribos.cn/web/chip/2021041102.html</link>
      <pubDate>Sun, 11 Apr 2021 09:10:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/chip/2021041102.html</guid>
      <description>适用于萌新的hexo自动部署 简述 下载本仓库代码，修改CNAME文件，添加自己的文章，将本仓库代码推送github
使用步骤 第一步 使用代码 git 下载coding仓库代码
git clone https://e.coding.net/frednab/dev/hexo-blog.git
第二步 修改配置 修改 source/CNAME文件里的域名
安装主题
方法一、下载主题目录，然后解压缩到themes目录下
方法二、使用npm安装主题
npm i hexo-theme-butterfly方式安装自己需要的主题（请参照自己需要主题的安装说明）
方法三、通过git submodule安装主题
git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly
其他文件不需要配置
第三步 更新文章 通过hexo new page 文章.md新建文档
或者在source/_posts目录下撰写自己的文章
第四步 将源码推送到github 通过一下命令将该仓库里的源码推送到github仓库
如果你是使用git clone方式下载的代码，建议删掉目录下的.git目录再执行如下操作
git init //初始化仓库。 git add . //添加文件到暂存区。(注意有点号.) git commit -m &amp;#34;更新说明&amp;#34; //将暂存区内容添加到仓库中。标识“更新说明” git remote add origin XXXX.git //添加到远程仓库操作，将xxxx.git设置为远程仓库origin git push -u origin master //推送master分支到origin仓库 提示操作成功后，代码将推送到github上的master分支，github自动部署将启动，将hexo文件自动部署到gh-pages分支
由于该仓库含有github自动构建文件，上传到github将触发自动部署
github自动构建文件为 .github/workflows/hexodeploy.yml文件</description>
    </item>
    
    <item>
      <title>易于分享的模块代码</title>
      <link>https://pub.oribos.cn/web/chip/2021040903.html</link>
      <pubDate>Fri, 09 Apr 2021 09:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/chip/2021040903.html</guid>
      <description>开源的代码 摘抄自某开源的代码诸如以下代码：
代码示例链接：https://dishiduo.coding.net/public/hcj/hcj/git
html { font-size: 14px; } body { width: 100vw; height: 100vh; background-color: var(--background-color); display: flex; justify-content: center; align-items: center; font-family: &amp;#39;Montserrat&amp;#39;, sans-serif, Arial, &amp;#39;Microsoft Yahei&amp;#39;; } .container { display: flex; justify-content: center; align-items: center; flex-direction: column; } .container * { margin-bottom: 30px; color: #FFF; } h1 { width: 60%; text-align: center; } .bt { padding: 12px 40px; background-color: #EC3E27; } .content { width: 60%; } 此处的css样式均以html的基本元素定义，诸如html h1 content尽管可以在模板文件里展示正确的效果。但代码用于其他项目使用需要修改元素命名。</description>
    </item>
    
    <item>
      <title>git隐藏文件</title>
      <link>https://pub.oribos.cn/web/chip/2021040702.html</link>
      <pubDate>Wed, 07 Apr 2021 10:20:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/chip/2021040702.html</guid>
      <description>使用git切换目录内容 1、使用git init新建一个git仓库
2、向仓库目录下方式文件a.md
3、使用git add .``git commit -m&amp;quot;说明&amp;quot;命令将文件加入暂存区
4、使用git branch test命令 创建一个git仓库 test分支
5、向仓库目录下放入文件 hide.md
6、使用git add .``git commit -m&amp;quot;说明&amp;quot;命令将文件加入暂存区
7、使用git checkout master或者git checkout main切换到git仓库主分支</description>
    </item>
    
    <item>
      <title>github加速</title>
      <link>https://pub.oribos.cn/web/chip/2021040701.html</link>
      <pubDate>Wed, 07 Apr 2021 09:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/chip/2021040701.html</guid>
      <description>加速地址 加速功能 cdn 代码下载加速，</description>
    </item>
    
    <item>
      <title>炫彩按键</title>
      <link>https://pub.oribos.cn/web/chip/2021040501.html</link>
      <pubDate>Mon, 05 Apr 2021 09:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/chip/2021040501.html</guid>
      <description>效果 代码 html部分
&amp;lt;a class=&amp;#34;btn btn-colourful&amp;gt; &amp;lt;/a&amp;gt; css部分
/* 炫彩按钮 */ .btn-colourful { position: relative; padding: 12px 30px; border-radius: 20px; font-size: 20px; color: #FFF; text-decoration: none; /* 使用linear-gradient生成一个线性渐变的“背景图” */ background-image: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4); /* 放大背景图 */ background-size: 400%; /* 这里是为了让a标签的背景显示在a::before的下面 */ z-index: 1; } .btn-colourful:hover { /* 创建动画 动画名称show 执行时间8秒 线性 循环执行 */ animation: show 8s linear infinite; } /* 动画主体 从初始到结束，移动背景图的位置 */ @keyframes show { 0% { background-position: 0%; } 100% { background-position: 400%; } } /* 创建背景炫光效果 */ .</description>
    </item>
    
    <item>
      <title>GitHub Actions 入门教程</title>
      <link>https://pub.oribos.cn/web/chip/2021040401.html</link>
      <pubDate>Sun, 04 Apr 2021 09:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/chip/2021040401.html</guid>
      <description>GitHub Actions 入门教程 引用自阮一峰的网络日志
GitHub Actions 是 GitHub 的持续集成服务，于2018年10月推出。
这些天，我一直在试用，觉得它非常强大，有创意，比 Travis CI 玩法更多。
本文是一个简单教程，演示如何使用 GitHub Actions 自动发布一个 React 应用到 GitHub Pages。
一、GitHub Actions 是什么？ 大家知道，持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。
很多操作在不同项目里面是类似的，完全可以共享。GitHub 注意到了这一点，想出了一个很妙的点子，允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。
如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。这就是 GitHub Actions 最特别的地方。
GitHub 做了一个官方市场，可以搜索到他人提交的 actions。另外，还有一个 awesome actions 的仓库，也可以找到不少 action。
上面说了，每个 action 就是一个独立脚本，因此可以做成代码仓库，使用userName/repoName的语法引用 action。比如，actions/setup-node就表示github.com/actions/setup-node这个仓库，它代表一个 action，作用是安装 Node.js。事实上，GitHub 官方的 actions 都放在 github.com/actions 里面。
既然 actions 是代码仓库，当然就有版本的概念，用户可以引用某个具体版本的 action。下面都是合法的 action 引用，用的就是 Git 的指针概念，详见官方文档。
actions/setup-node@74bc508 # 指向一个 commit actions/setup-node@v1.0 # 指向一个标签 actions/setup-node@master # 指向一个分支 二、基本概念 GitHub Actions 有一些自己的术语。</description>
    </item>
    
    <item>
      <title>减少彩色的使用</title>
      <link>https://pub.oribos.cn/web/chip/2021040703.html</link>
      <pubDate>Sun, 04 Apr 2021 09:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/chip/2021040703.html</guid>
      <description>简化页面 减少不必要的装饰，炫彩背景，彩色字体
易于阅读 减少不必要的阅读干扰，突出内容</description>
    </item>
    
    <item>
      <title>Markdown</title>
      <link>https://pub.oribos.cn/web/share/markdown.html</link>
      <pubDate>Thu, 01 Apr 2021 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/share/markdown.html</guid>
      <description>简介 Markdown是一种轻量级标记语言，以纯文本格式编写文档，然后转换成有效的XHTML/HTML内容
语法简洁明了、易读易写 轻量、纯文本、跨平台、兼容性极强 可以转换为HTML/XHTML、EPUB、PDF、Word、纂写Gitbook 广泛使用： Github 简书 Typecho WordPress（需编辑器插件） Reddit Diaspora Apollo Moodle more &amp;hellip;&amp;hellip; 创造者：Aaron Swartz和John Gruber共同设计 Aaron Swartz（1986年11月8日－2013年1月11日）
Markdown主要贡献者，Aaron Hillel Swartz（全名）的维基百科介绍为：美国程序员、企业家、作者、政治活动者、互联网黑客主义者，点击查看更多关于这位天才的完整生平
开始使用 编辑器：Typora、Sublime Text、VS code&amp;hellip; 首推跨平台、所见即所得的Typora编辑器 标题 一般的，Markdown使用#可以表示1-6级标题
# 这是一级标题 ## 这是二级标题 ### 这是三级标题 #### 这是四级标题 ##### 这是五级标题
对于一级和二级标题，还可以使用-和·=来标记
1 2 3 4 这是一级标题 ===== 这是二级标题 ---------- 列表 无序列表 使用-、*、+来标记无序列表，下面以-为例
1 2 3 - 这是第一项 - 这是第二项 - 这是第三项 显示效果：
这是第一项 这是第二项 这是第三项 有序列表 在阿拉伯数字后面加上.来标记
1 2 3 1.</description>
    </item>
    
    <item>
      <title>SSH 容器直通</title>
      <link>https://pub.oribos.cn/web/note/2021/2021052507.html</link>
      <pubDate>Thu, 01 Apr 2021 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021052507.html</guid>
      <description>SSH 容器直通 由于 SSH 在容器内运行，因此，如果需要 SSH 支持，则需要将 SSH 从主机传递到容器。一种选择是在非标准端口上运行容器 SSH（或将主机端口移至非标准端口）。另一个可能更直接的选择是将 SSH 连接从主机转发到容器。下面将说明此设置。
本指南假定您已经在名为 git 的主机上创建了一个用户，该用户与容器值 USER_UID/USER_GID 共享相同的 UID/GID。这些值可以在 docker-compose.yml 中设置为环境变量：
environment: - USER_UID=1000 - USER_GID=1000 接下来将主机的 /home/git/.ssh 装入容器。否则，SSH 身份验证将无法在容器内运行。
volumes: - /home/git/.ssh/:/data/git/.ssh 现在，需要在主机上创建 SSH 密钥对。该密钥对将用于向主机验证主机上的 git 用户。
sudo -u git ssh-keygen -t rsa -b 4096 -C &amp;#34;Gitea Host Key&amp;#34; 在下一步中，需要在主机上创建一个名为 /app/gitea/gitea 的文件（具有可执行权限）。该文件将发出从主机到容器的 SSH 转发。将以下内容添加到 /app/gitea/gitea：
ssh -p 2222 -o StrictHostKeyChecking=no git@127.0.0.1 &amp;#34;SSH_ORIGINAL_COMMAND=\&amp;#34;$SSH_ORIGINAL_COMMAND\&amp;#34; $0 $@&amp;#34; 为了使转发正常工作，需要将容器（22）的 SSH 端口映射到 docker-compose.yml 中的主机端口 2222。由于此端口不需要暴露给外界，因此可以将其映射到主机的 localhost：</description>
    </item>
    
    <item>
      <title>巨型货轮堵住苏伊士运河</title>
      <link>https://pub.oribos.cn/web/note/2021032901.html</link>
      <pubDate>Mon, 29 Mar 2021 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021032901.html</guid>
      <description>3月24日 3月24日 16:29 全球12％的国际贸易通道被台湾货轮“切断”
3月25日 3月25日 15:09 苏伊士运河搁浅的货轮已被移到岸边
3月26日 3月26日 03:58 专业吸泥船抵达苏伊士运河，帮助集装箱货轮脱浅
3月27日 3月27日 11:23 苏伊士运河堵塞船只已超200艘
3月29日 3月29日 11:17 堵塞苏伊士运河的货轮成功上浮
3月29日 12:46 堵塞苏伊士运河货轮恢复正常航线</description>
    </item>
    
    <item>
      <title>20210324</title>
      <link>https://pub.oribos.cn/web/note/2021/2021032406.html</link>
      <pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021032406.html</guid>
      <description>文明古国 将古代遗迹算作文明是需要一个标准的，对于不符合文明标准的遗迹不能为了拔高自己文明就胡乱的算作文明遗迹。文明古国不是随随便便都有资格的，拉低了文明的标准就意味着会加入更多的文明古国，那文明古国的地位就相应的降低了，不值钱了。
将古猿人的活动遗迹算作文明就更是嘲笑和戏弄真正的古代文明。古猿甚至都不能算作现代意义的“人”，将这些古猿的遗迹算作文明，现代人祖先创造的长城，金字塔要跟古猿的石头和山洞平分秋色？</description>
    </item>
    
    <item>
      <title>简化</title>
      <link>https://pub.oribos.cn/web/note/2021/2021032402.html</link>
      <pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021032402.html</guid>
      <description>简化 项目创建，项目组件，项目的外部要求
功能的实现尽可能的简单
服务器自动构建 首先创建一个git仓库
在服务器里git clone 仓库地址
在服务器里配置webhook
在git仓库里配置webhook
推送代码到git仓库，代码托管中心发送webhook
服务器接收到webhook，执行动作，拉取代码，运行代码里的命令
随笔 FROM debian RUN sed -i s@/deb.debian.org/@/mirrors.aliyun.com/@g /etc/apt/sources.list \ &amp;amp;&amp;amp; apt-get clean \ &amp;amp;&amp;amp; apt-get update \ &amp;amp;&amp;amp; apt-get install -y curl \ &amp;amp;&amp;amp; curl -fsSL https://deb.nodesource.com/setup_14.x | bash - \ &amp;amp;&amp;amp; apt-get install -y nodejs &amp;amp;&amp;amp; npm install hexo-cli -g \ &amp;amp;&amp;amp; apt-get install -y git 测试</description>
    </item>
    
    <item>
      <title>简化</title>
      <link>https://pub.oribos.cn/web/note/2021/2021032402.html</link>
      <pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021032402.html</guid>
      <description>简化 项目创建，项目组件，项目的外部要求
功能的实现尽可能的简单
服务器自动构建 首先创建一个git仓库
在服务器里git clone 仓库地址
在服务器里配置webhook
在git仓库里配置webhook
推送代码到git仓库，代码托管中心发送webhook
服务器接收到webhook，执行动作，拉取代码，运行代码里的命令
随笔 FROM debian RUN sed -i s@/deb.debian.org/@/mirrors.aliyun.com/@g /etc/apt/sources.list \ &amp;amp;&amp;amp; apt-get clean \ &amp;amp;&amp;amp; apt-get update \ &amp;amp;&amp;amp; apt-get install -y curl \ &amp;amp;&amp;amp; curl -fsSL https://deb.nodesource.com/setup_14.x | bash - \ &amp;amp;&amp;amp; apt-get install -y nodejs &amp;amp;&amp;amp; npm install hexo-cli -g \ &amp;amp;&amp;amp; apt-get install -y git </description>
    </item>
    
    <item>
      <title>选择</title>
      <link>https://pub.oribos.cn/web/note/2021/2021052703.html</link>
      <pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021052703.html</guid>
      <description>选择 不考虑其他，现在有一个非常复杂，非常重要的工作需要你做做完付给你10年的工资。10年都不需要干活了。 有一个非常简单的，但需要每天维护的工作，每月或每年发当前工资。但需要每天工作坚持10年。
假设这两份工作你都可以胜任，一个是短暂辛苦，一个是每天辛苦如何选。
正常人都想安逸，追求奢华，美好，高端。这是人的本性，不应对抗和逃避。只能通过合适的成本，手段，方法来平衡。
即，肉好吃，人喜欢吃肉是人之常情，不应完全拒绝吃肉，肉提供必要的蛋白质和营养，不吃是不健康的。但又不能吃太多，不加控制。 出于口味，喜好定期不定期选择吃肉，适当增加吃肉是合理的，由于肉价上涨，减少吃肉也是正常的。
限制别人吃肉，提出各种看似合理比如文化，宗教，法律，舆论，道德等等理由限制都是不充分的。
文章管理 将涉及的“种族”的文章暂时隐藏。
对于特殊类型的文章，改时间格式的地址为随机的杂乱代码。避免文章关于时间的隐私信息泄露。
处于安全和其他方面的考虑，应避免不必要的隐私信息泄露。包括“人物”“时间”“地点”等要素。</description>
    </item>
    
    <item>
      <title>2021-03-20</title>
      <link>https://pub.oribos.cn/web/note/2021/2021032001.html</link>
      <pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021032001.html</guid>
      <description>太空竞赛 美国当年登录月球。苏联探索金星，结果呢？登录月球50年了，结果呢？
人类目前针对近地轨道的发展才是有价值的，发射卫星，建立空间站。对其他行星探索就是走上了美国当年太空竞赛的套路。被人牵着鼻子走浪费资源。搞不好美国重启月球计划，再次探索火星就是新的“星球大战计划”。
地球环境还有沙漠地区，高山地区，深海地区一直未能探索和改造。技术和资源也并不富足。最近的卫星月球，50年前已经探索却至今未有一处空间站和基地。相当于地月距离140多倍的火星，一没磁场二没大气，以人类目前的技术水平和发展速度，21世纪内发展火星殖民地几乎不可能。
耗费数代人心血，浪费大量物资并不会获得多少实质性进步。人类关键的任务是在近地轨道和月球制造基地和空间站，打通地面同外太空的第一部链接。没有基地就相当于航海没有船埠。
现在的状况类似于还未进入大航海时代，人类还只会造河里的小船，还不会远洋航行。还把博哈多尔角以南当成海水沸腾的恶魔地区。
大航海时代需要地理，数学，天文，造船，航海技术等多方面的发展和进步。即便如此，按照人类进度1434年葡萄牙人越过博尔哈多角。1492年10月12日哥伦布发现美洲新大陆。1519年西班牙人建立了哈瓦那。
提到生态圈，如果你认为破坏生态圈后果严重不易开发，那就不要去外星殖民好了。你连破坏生态圈再修补重建的技术都没有，就更别提在几乎没有生态圈的地方完全新建。
人类不要指望短期内通过发展外星殖民地解决能源问题和星球灾难问题。因为外星殖民的难度比这两个问题要困难多。
地球现在不存在真正意义上的能源问题，只有合适成本的能源问题。除非外星殖民地的能源成本低于地球资源，太阳能和核能的成本。否则外星殖民地的能源无法解决地球能源问题。外星的矿物资源在很长一段时间无法帮助地球，且要远晚于人类殖民建立。人类只有搬到外星，稳定适应下来，才能提供可靠矿物资源，且要等到外星资源成本低于地球矿物资源成本。
完成地球灾难的巨变（瘟疫，外星威胁，地球地质变化）很难不影响仅仅在一个恒星系的其他行星。殖民火星很难帮人类规避灾难。
短期内发展火星和金星的殖民几乎没有任何作用。
发展近地轨道空间站，基地，科研。适当在月球建造基地，再去投入其他行星探索。
生活状态 1999年人口12.6亿到了2019年人口14亿，你说人口变多了生活质量是变好了还是变差了？现在能养活14亿的土地，在1979年只需要养活9.8亿，生活质量能同日而语吗？
人口向来不是问题和矛盾，生产力才是，发展生产力学习科学技术才是解决吃饭问题的关键。
文化，制度，阶级只是维持社会稳定的方式，维持过去落后生产力养活9.8亿人艰苦度日时不会崩溃。那些宣传人类文明是灾难，知识无用，回归自然的思想是在抑制生产力发展，是在故意扼杀从9.8亿到14亿之间这4.2亿人口的阴谋家。因为信这些落后思想的话，就会在现在人口里多产生4.2亿的人口负担，或者说4.2亿的累赘。当前谁愿意成为这4.2亿中的一位。
很多人不明白欧美宣传政治正确的根本原因，资本家和底层民众天然存在利益冲突和矛盾，而社会需要稳定。资本家就迫切需要转移话题和矛盾，没有矛盾就制造矛盾。性别，文化，种族，信仰等等，底层民众之间内卷只是资本家的伎俩。​
年 首先，需要确定一个概念。“年”我们说的年到底是哪个？
公历纪年，中国古代传统历法纪年，二十四节气循环
公历纪年属于阳历，二十四节气也是阳历，中国古代传统历法纪年属于阴阳历。
干支历，夏历，太初历，时宪历，农历，
干支历的十二月建，“十二月建”的划分是以节令为基准，即以立春、惊蛰、清明、立夏、芒种、小暑、立秋、白露、寒露、立冬、大雪、小寒，分别作为寅、卯、辰、巳、午、未、申、酉、戌、亥、子、各月之始。</description>
    </item>
    
    <item>
      <title>世界上不存在1000公斤的牛</title>
      <link>https://pub.oribos.cn/web/fun/2021/2021031701.html</link>
      <pubDate>Wed, 17 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/fun/2021/2021031701.html</guid>
      <description>“世界上不存在1000公斤的牛” 即，你无法找到一个体重正好是1000公斤，不多一点不少一点，标标准准的1000公斤。
数字是概念，数值是对客观世界的描述。这意味着，数字世界必然无法同现实世界完全融洽。
忒修斯之船 忒修斯之船是一个概念，一个名字。木板组成的船是一艘完整的船，一个客观实物。
船的体现：“名字：忒修斯之船”，“建造好的木船”。
船建好以后，拿走一个木板，那忒修斯之船还是不是忒修斯之船？换掉一个模板呢？换掉整个船头呢？概念和实物必然不是完全对等。哪怕忒修斯之船所有木板都失去了，已经无法正常航行了。</description>
    </item>
    
    <item>
      <title>人工智能</title>
      <link>https://pub.oribos.cn/web/note/2021/2021031701.html</link>
      <pubDate>Wed, 17 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021031701.html</guid>
      <description>文明的能量位 不同能量位的文明存在碾压性，即铁器文明同青铜器文明竞争有较大优势，火器文明对原始部族有较大优势，有核武器国家对无核武器国家有较大优势。优势不一定是绝对的，核武器有可能完全不会启用，但拥有核武器必然有较大军事力量。同样的农耕民族的军队数量庞大同游牧民族正面对抗必然有数量优势，但游牧民族依然会对农耕民族边疆进行骚扰和劫掠。
拥有高能量的智能ai必然对利用化学能的人类拥有碾压优势，即智能ai依靠电力可以持续工作，而人类需要补充食物、水、空气。
但人类使用化学能，电能，核能则在同样使用电能，核能的智能ai拥有相同的能量位。相同的能量位意味着竞争是同等的，两者不存在必然的劣势或优势。
智能ai的逻辑困境 人类的大脑是一个可以兼容各种概念，理论，认知的存在。人类可以同时思考科学理论，宗教观念，遐想，虚拟等等。而人类由1和0组成计算机本质上只是使用一阶谓词逻辑创造的工具，程序也是若干逻辑判断的集合。只有提高计算机的逻辑水平才能有可能创造出“人工智能”
存在 生物的存在是为了繁衍，扩张，保留自身dna。而人工智能的存在意义并不确定。
悖论 有些将某些无法破解的现象归为外星人，神，鬼等未知存在。
为什么就单纯的认为外星人的科技水平要强于人类，当然如果同等情况，其他遥远星球的外星人能来到地球，比如拥有人类目前尚不拥有的星际飞行能力。但同在地球下不见得外星人要高于人类，即为什么不是高科技的人类早就来到地球，破坏了原先的所谓“亚特兰蒂斯”“玛雅”等落后的原始文明。
古老的，过去的文明不见得就高于现代。越古老不见得就越强大。
参禅 一些宗教相信阅读和研究经文，典籍可以领会世间万物规律。但他们阅读研究的仅仅是人类自身的认识，读万卷书也是人类自己的万卷书，知识在一个未知的瓶颈上没有丝毫突破，就像二维世界一样，无法打破“高度”这个无法触及的纬度。读万卷书只是成了一个知识渊博的人类知识分子，根本不可能成为超脱自身的存在。想到成佛成仙，必须去接触他们自身的知识和能力，必须获得一个“飞升”才能超然于自身的存在。一味的研究自己的知识纬度只是在自己的纬度有所扩展，无法进入其他纬度。</description>
    </item>
    
    <item>
      <title>纸档文档保存</title>
      <link>https://pub.oribos.cn/web/note/2021030101.html</link>
      <pubDate>Mon, 01 Mar 2021 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021030101.html</guid>
      <description>什么样的文件更容易保存 将纸档放到时间胶囊里，密封保存埋到底下，可以轻松保存数百年。数百年后只要人类文明还存在，纸上的文字就可以轻松阅读。而如果保存在u盘，硬盘等电子媒介中。尽管同样可以保存数百年，但数百年后是否拥有该介质的读取设备？是否有正确的编码？这些都是问题。如果把文件保存在互联网上，云盘上。每年都需要为此付费，未能及时付费将导致自己的资料丢失。或者运营网盘的公司组织业务变动，等等不可靠的因素太多。
所以，保存相当长文件的方式还是原始的石碑，纸张等真正的物理介质。
云盘只是资本运营手段 完全的公有云需要不断投入大量维护成本，还需要稳定的网络支持。云计算自身就是一门生意。我一个云服务器还有2年有效期时，退订会返款金额：0 元。我三年前购买的1800元三年的服务器，三年到期续费每个月200元。这完全就是坑人的东西。
刻录光盘的必要性 蓝光光盘单碟25G，保存必要的文件，但25G刻录速度太慢，而且需要3T的文件都可以的情况下，需要大量的极其昂贵的光盘。</description>
    </item>
    
    <item>
      <title>敦煌万亩防护林被毁</title>
      <link>https://pub.oribos.cn/web/fun/2021/2021012301.html</link>
      <pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/fun/2021/2021012301.html</guid>
      <description>防护林 近日，敦煌阳关林场万亩防护林遭剃光头式砍伐的新闻，一下子登上热搜。
事情是这样的，在敦煌的库姆塔格沙漠东缘，原本有万亩防护林，是几代护林人做出的成绩。
结果，近日媒体曝出，敦煌防沙的这万亩公益防护林，现在几乎被砍伐殆尽，只剩下一个个树桩，而与此同时，经济效益好但用水多的葡萄园，却在这片土地上扩张起来。
原来好不容易恢复的生态环境，现在大有毁于一旦的风险。</description>
    </item>
    
    <item>
      <title>控制力</title>
      <link>https://pub.oribos.cn/web/note/2021/2021012001.html</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021012001.html</guid>
      <description>控制力 延申自己的控制力。 人人希望获得非常多的钱，非常多的荣誉，国家拥有非常大的领土，非常强大的军队等等。都是延申自己为了延申自己、种群、集体的控制力。
成本的考虑 延申自己的控制力需要成本，而世界本身的资源是有效的，成本也是有限的。无视成本的扩张必然导致灾难
一个国家维护一个强大的军队需要大量的军费，一个家庭抚养多个孩子意味着更多粮食消耗，教育成本。一个人结交多个亲朋好友意味着庞大的交际成本。
强大的控制力意味着很难改变 形成一个强大的控制力，尽管解决成本问题，还会存在改变的问题。即大型车辆的转弯变道往往比小型车辆要困难，受到能源，道路，自然环境的多重影响。你可以加更多的油，但无法走更窄的道路，无法通过小木桥等扽。改变一个庞大的目标往往相当困难。
整个庞大的目标可能是一辆车，一个家族，一个公司，一个国家，一个物种。
侏罗纪时期，庞大的恐龙灭绝了，而小型哺乳动物活了下来。</description>
    </item>
    
    <item>
      <title>电影人类清除计划</title>
      <link>https://pub.oribos.cn/web/note/2021/2021011701.html</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021011701.html</guid>
      <description>有趣的现象 观看电影人类清除计划会发现一个有趣的现象：1 最先起来支持清除计划的是底层穷人，2 底层穷人拿去武器首先攻击的目标也是穷人。3 富人在清除日当天正常享乐，正常雇佣其他人服务。
说明了，穷人是渴望动乱的，而真正动乱以后，穷人攻击的目标还是穷人，他们没有组织起来洗劫富人的动机。因为富人通过正常的雇佣、收买穷人，在动乱时期依然拥有强大的武装力量。富人的自身力量并不比穷人强大，但他们拥有了雇佣，收买这种方式依附在其他力量之下存在。</description>
    </item>
    
    <item>
      <title>大连铁路因Flash停更造成电脑显示故障</title>
      <link>https://pub.oribos.cn/web/fun/2021/2021011501.html</link>
      <pubDate>Fri, 15 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/fun/2021/2021011501.html</guid>
      <description>先进的flash 1月12日，大连铁路因Flash在全球范围内停止更新，导致部分新购置并安装最新Flash版本的电脑无法通过浏览器访问统计现在车系统。</description>
    </item>
    
    <item>
      <title>Incaseformat 蠕虫病毒</title>
      <link>https://pub.oribos.cn/web/fun/2021/2021011401.html</link>
      <pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/fun/2021/2021011401.html</guid>
      <description>2021年01月13日，360安全卫士发布了Incaseformat蠕虫病毒的风险通告，事件等级：高危，事件评分：8.5。
360第一时间发布了专杀工具与修复方案（见修复建议）
对此，360CERT建议广大用户好资产自查以及预防工作，以免遭受黑客攻击。</description>
    </item>
    
    <item>
      <title>20210107</title>
      <link>https://pub.oribos.cn/web/note/2021/2021010701.html</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021010701.html</guid>
      <description>随笔 太阳系里的行星轨道 为什么地球绕着太阳转，轨道是椭圆？
地球和太阳是两个独立的天体 运动员手里拿一个链球旋转，这种情况下运动员和链球在运动员的用力下成为一个整体，离开了运动员的用力，链球不可能保持圆周运动，而是直接飞出去。
而行星的椭圆轨道是地球和太阳两个天体共同作用的结果，地球绕着太阳转同时太阳在万有引力下绕着地球转，但由于太阳过于庞大，它的运行轨道在它天体内部，出现缓慢抖动情况。这种情况跟月球和地球的相互运动一样。宇宙里的其他天体也是类似的运行规律。
椭圆轨道的形成 当太阳系形成之际，太阳的强大引力捕获了许多天体。某些质量或能量非常低的天体。将落入一个围绕太阳的紧密螺旋中，甚至很难称其为轨道，下降越来越低，直至它撞击太阳表面。具有很大速度或距离太阳表面很远的天体上。天体靠近，其路径将向太阳弯曲，但其速度和距离允许它继续越过太阳，而不是被拉入重复的轨道。在形成类似于U的双曲线轨道之后，它将飞向太空，并且永远不会返回。当天体太小或太慢而无法逃离太阳的引力时，它会落入一个重复的椭圆轨道，这在很大程度上取决于它进入系统时的原始能量和轨迹。
椭圆轨道的数学证明 由于螺旋轨道和双曲线轨道都不是一个重复的轨道。所以对椭圆轨道的证明其实是在具有“太阳和地球质量”“万有引力”“太阳和地球距离”等数据以后，计算出来的数学函数。
计算步骤待补充</description>
    </item>
    
    <item>
      <title>20210105</title>
      <link>https://pub.oribos.cn/web/note/2021/2021010501.html</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021010501.html</guid>
      <description>随笔：世界观 科学是研究世界的一种方法 世界存在多样化，人类的认识也是多样化的。科学是人类的众多多样化手段中的一种。数学，哲学，神话等等，人类的文明充实着多种多样的方法。</description>
    </item>
    
    <item>
      <title>ssh</title>
      <link>https://pub.oribos.cn/web/note/2021/2021070101.html</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021070101.html</guid>
      <description>安装ssh服务 $sudo apt-get update #更新软件源 $sudo apt-get install ssh #安装 配置文件：/etc/ssh/sshd_config
修改配置文件 PasswordAuthentication yes PermitRootLogin yes 重启服务： /etc/init.d/ssh restart
此时我们就可以使用ssh对服务器进行远程连接，但也不排除无法连接的情况。
一般ssh无法连接的场景排查
ping xxx.xxx.xxx.xxx 检查网络 很多情况下无法ssh，都是因为网络或者iptables限制导致。所以我们可以先通过ping命令来检查网络的连通性。当然有时候也会遇见防火墙拦截了ICMP和SSH，所以检查网络的最好是在需要ssh连接的服务器下进行
检查端口
ssh使用的是22端口，所以我们可以使用telnet命令检测该端口。
telnet xxx.xxx.xxx.xxx 22 如果正常能通，一般情况下ssh服务器也就没问题了；如果不能通，检查iptables。因为为了保证服务器的安全性，我们经常会通过iptables去限制特定的网段才允许ssh连接服务器。
检查服务 如果网络能通，且端口未被屏蔽。依旧无法ssh到服务器，那么检查ssh服务，以及配置文件是否正确配置。
/etc/init.d/ssh status </description>
    </item>
    
    <item>
      <title>test001</title>
      <link>https://pub.oribos.cn/web/test/2021010191.html</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/test/2021010191.html</guid>
      <description>test 该仓库是作为脱离于博客存档文章以外的额外更新包。平时针对该仓库进行管理和更新，当年末时，这些文章将转移到存档目录下，文章的url地址不变
新增样式 加粗字体的彩色效果
b, strong { -webkit-background-clip: text; -webkit-text-fill-color: transparent; --strong-gradient: linear-gradient(62deg,#188bfd,#a03bff)!important; background-image: var(--strong-gradient); font-weight: bolder; } 代码块
1 2 git remote add origin git@github.com:username/username.github.io.git git push -u origin master 1 2 3 4 5 6 7 b, strong { -webkit-background-clip: text; -webkit-text-fill-color: transparent; --strong-gradient: linear-gradient(62deg,#188bfd,#a03bff)!important; background-image: var(--strong-gradient); font-weight: bolder; } </description>
    </item>
    
    <item>
      <title>博客内容更新包</title>
      <link>https://pub.oribos.cn/web/note/2021/2021010117.html</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2021/2021010117.html</guid>
      <description>博客内容更新包 该仓库是作为脱离于博客存档文章以外的额外更新包。平时针对该仓库进行管理和更新，当年末时，这些文章将转移到存档目录下，文章的url地址不变
cloudflare 内容代理 &amp;#39;use strict&amp;#39; /** * static files (404.html, sw.js, conf.js) */ const ASSET_URL = &amp;#39;http://fly.oribos.cn&amp;#39; const JS_VER = 10 const MAX_RETRY = 1 /** @type {RequestInit} */ const PREFLIGHT_INIT = { status: 204, headers: new Headers({ &amp;#39;access-control-allow-origin&amp;#39;: &amp;#39;*&amp;#39;, &amp;#39;access-control-allow-methods&amp;#39;: &amp;#39;GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS&amp;#39;, &amp;#39;access-control-max-age&amp;#39;: &amp;#39;1728000&amp;#39;, }), } /** * @param {any} body * @param {number} status * @param {Object&amp;lt;string, string&amp;gt;} headers */ function makeRes(body, status = 200, headers = {}) { headers[&amp;#39;--ver&amp;#39;] = JS_VER headers[&amp;#39;access-control-allow-origin&amp;#39;] = &amp;#39;*&amp;#39; return new Response(body, {status, headers}) } /** * @param {string} urlStr */ function newUrl(urlStr) { try { return new URL(urlStr) } catch (err) { return null } } addEventListener(&amp;#39;fetch&amp;#39;, e =&amp;gt; { const ret = fetchHandler(e) .</description>
    </item>
    
    <item>
      <title>随机序列</title>
      <link>https://pub.oribos.cn/web/pub/ac69d809.html</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/pub/ac69d809.html</guid>
      <description>关于测试随机序列 对于后续设计隐私的文章采用随机序列，设计到掩盖的信息有author``data url及其他更多内容
序列问题 尽管该文章隐藏了发布时间，处于对内容效果的测试，仍然将他置顶在前面。</description>
    </item>
    
    <item>
      <title>谣传的大洪水</title>
      <link>https://pub.oribos.cn/web/note/2020122301.html</link>
      <pubDate>Wed, 23 Dec 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020122301.html</guid>
      <description>谣传的大洪水 网上传播的“史前大洪水”“诺亚方舟”“亚特兰蒂斯覆灭的”等等数不胜数的各类传说故事
个人观点 洪水可能只是河水泛滥 仔细观察此图片：
通过以上图片可以看出，古代文明都是靠近大江大河，海边，湖边的土壤肥沃之地。且不说数千年前人类对大江的防汛抗汛能力，即便到了21世纪，也会出现几次重大洪水问题。
我们不能因为A地有洪水记录，B地有洪水记录，C地有洪水记录就武断的认为全世界都同时有洪水
因为，能够留下洪水记录的地区都是靠近江河湖海容易发生汛情的地区。
远古时期记载的泛滥的大洪水可能只是河水泛滥
各地区的大洪水记载日期并不相同 “诺亚方舟”的传说，大洪水是上帝用来毁灭世界的腐败人类的，尽管没有明确的时间记载，但应该早于古苏美尔文明和古埃及文明出现。至少在在公元前3500年之前。而“大禹治水”的故事发生在夏之前，时间约为公元前2070之前的数十年。</description>
    </item>
    
    <item>
      <title>https协议</title>
      <link>https://pub.oribos.cn/web/note/2020120317.html</link>
      <pubDate>Thu, 03 Dec 2020 10:20:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020120317.html</guid>
      <description>http&amp;amp;https协议 参考博客：
HTTP和HTTPS协议，看一篇就够了 什么是http 超文本传输协议，是一个基于请求与响应，无状态的，应用层的协议，常基于TCP/IP协议传输数据，互联网上应用最为广泛的一种网络协议,所有的WWW文件都必须遵守这个标准。设计HTTP的初衷是为了提供一种发布和接收HTML页面的方法。
默认端口80， 如果 一台主机上有多个服务器呢? http报文格式 http的请求报文由：请求行、首部、空行、主体四个部分组成。 其中请求行由请求方法字段、URL字段和HTTP协议版本字段3个字段组成，它们用空格分隔 http通信流程 web客户端tcp连接到Web服务器-&amp;gt;发送Http请求-&amp;gt;服务器接受请求并返回HTTP响应-&amp;gt;释放连接TCP连接-&amp;gt;客户端浏览器解析HTML内容
graph TD A(web客户端tcp连接到Web服务器) --&amp;gt;B(发送Http请求) B --&amp;gt;C(服务器接受请求并返回HTTP响应) C--&amp;gt;D(释放连接TCP连接) D--&amp;gt;E(客户端浏览器解析HTML内容) 什么是https 图解HTTP》这本书中曾提过HTTPS是身披SSL外壳的HTTP。HTTPS是一种通过计算机网络进行安全通信的传输协议，经由HTTP进行通信，利用SSL/TLS建立全信道，加密数据包。HTTPS使用的主要目的是提供对网站服务器的身份认证，同时保护交换数据的隐私与完整性。PS:TLS是传输层加密协议，前身是SSL协议，由网景公司1995年发布，有时候两者不区分。
成本考虑 SSL证书需要购买申请，功能越强大的证书费用越高 SSL证书通常需要绑定IP，不能在同一IP上绑定多个域名，IPv4资源不可能支撑这个消耗（SSL有扩展可以部分解决这个问题，但是比较麻烦，而且要求浏览器、操作系统支持，Windows XP就不支持这个扩展，考虑到XP的装机量，这个特性几乎没用）。 根据ACM CoNEXT数据显示，使用HTTPS协议会使页面的加载时间延长近50%，增加10%到20%的耗电。 HTTPS连接缓存不如HTTP高效，流量成本高。 HTTPS连接服务器端资源占用高很多，支持访客多的网站需要投入更大的成本。 HTTPS协议握手阶段比较费时，对网站的响应速度有影响，影响用户体验。比较好的方式是采用分而治之，类似12306网站的主页使用HTTP协议，有关于用户信息等方面使用HTTPS。 </description>
    </item>
    
    <item>
      <title>前后端分离架构</title>
      <link>https://pub.oribos.cn/web/note/2020112873.html</link>
      <pubDate>Sat, 28 Nov 2020 09:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020112873.html</guid>
      <description> 引用自meloor
参考： 到底什么是前后端分离 1 到底什么是前后端分离 2 到底什么是前后端分离 3
前后端分离是个架构设计问题。所谓架构设计，实际上是如何合理的对现实的人力架构进行系统映射，以便最大限度的提高整个公司的运行效率。
前后端的定义 前后端定义，不应该是以语言来定义，而是应该以它的运行环境
Html+CSS+JS，都是在浏览器端执行，统一称之为前端。(用户能看到) Java，C，Python，PHP 这些在服务器端运行，统一称之为后端。(用户看不到） 前后端不分离 架构设计 交互方式 浏览器发请求，服务器端给出一个完整的网页，浏览器再发请求，服务器端再给出一个完整的网页 缺点 传输的重复数据比较多，网络又会有延迟。所以有没有办法，只传送必要的数据？这是 Ajax 的起源。
Ajax Ajax 就是只传递数据，不传递整个网页。这也是被用来在翻页，注册，发送验证码等场景，但也仅仅止布于此了。
前后端分离 架构设计 交互方式(通过浏览器测试) 页面跳转(浏览器地址栏 url 会变)时浏览器先发送请求给前端服务器 浏览器得到响应数据前端代码(html+css+js, 响应数据)并渲染。(地址栏输入后端服务器的 url 会直接显示 json 格式数据, 是 html 就会渲染) 渲染时会执行 js 代码，这时 js 代码向后端服务器发送请求得到数据并动态更新 html 元素得到最终页面。 区分前后端的原因 第一个，是可以并行开发。前后端的进度互不影响，在过去，前后端不分离的情况下，前端的工作量相对较少，一个前端可以对四个后端。
第二个，是成本问题。在过去，后端的成本还是比前端要高一些。同样的工作，如果能拆给两个人做，一个成本高一点，一个成本低一点，能接受。
第三个，CSS 太难了。JS 还好，和后端语言在对技能的训练上相差不大，可是。。CSS 是什么鬼？记住那么多的属性，和 Hash 算法有关系吗？
优点 前端人员和后端人员只需约定好接口，大大降低了前后端耦合性 前端人员彻底不用再关心业务处理是怎么回事，他只需要把界面做好就可以了 后端人员也不用再关系前端界面是什么样的，他只需要做好业务逻辑处理即可。 服务的切离，代码管理，服务部署也都独立出来分别管理，系统的灵活性也获得了极大的提升。 </description>
    </item>
    
    <item>
      <title>日记2020-11-18</title>
      <link>https://pub.oribos.cn/web/note/2020111808.html</link>
      <pubDate>Wed, 18 Nov 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020111808.html</guid>
      <description>同样的代码，不同的效果 在国内服务器上，由于以下内容的下载和安装问题，执行npm install会出现错误。
而同样的代码，在香港服务器上，执行npm install尽管依然需要下载，但速度相对快，也没有文件丢失或无法访问。</description>
    </item>
    
    <item>
      <title>日记2020-11-17</title>
      <link>https://pub.oribos.cn/web/note/2020111714html/</link>
      <pubDate>Tue, 17 Nov 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020111714html/</guid>
      <description>cloudflare的kv存储免费计划 Cloudflare Workers简单地说就是一个可以让你运行Javascript的平台，因为它免费，不需要域名，不需要维护服务器，在线率高。最简单的例子就是通过使用以下代码显示一个普通html页面
const html = `&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt; &amp;lt;p&amp;gt;This markup was generated by a Cloudflare Worker.&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt;` async function handleRequest(request) { return new Response(html, { headers: { &amp;#34;content-type&amp;#34;: &amp;#34;text/html;charset=UTF-8&amp;#34;, }, }) } addEventListener(&amp;#34;fetch&amp;#34;, event =&amp;gt; { return event.respondWith(handleRequest(event.request)) }) 其他使用workers的方法可以通过Examples 获得。
workers有免费计划，包括 100,000 个请求/天 。然后令人意外的是，cloudflare也将kv存储加入免费计划（之前使用kv存储需要5美元/月)。这样workers可以做的事情就多了。
比如使用workers不但可以部署一个静态页面，还能部署一个静态网站。
wrangler npm安装wrangler
npm i @cloudflare/wrangler -g 然后使用wrangler login 登录，wrangler config配置api-key，通过wrangler publish部署
通过教程进一步了解使用wrangler</description>
    </item>
    
    <item>
      <title>日记2020-11-16</title>
      <link>https://pub.oribos.cn/web/note/2020111608.html</link>
      <pubDate>Mon, 16 Nov 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020111608.html</guid>
      <description>站点整合和拆分 之前的个人网站由许多内容杂乱无章的堆放在一起，后来整理一下，区分了“日记”“文章”“故事”“测试”等几个内容。并且处于分开管理和发布的目的，将一个博客网站拆分成blog,test,diary,story等几个不同站点。
多个站点，使用的是不同的域名解析，想使这些都正常使用，需要dns解析，必要的cdn和不同的部署位置。由于管理多个站点的部署太过复杂繁琐。计划了新一次的整个和拆分。
即：1 需要一个index的索引页面，整合不同的内容汇集起来统一显示。
2 发布的重要的，精彩的文章提供一个稳定的地址。保持长期可用性。
3 日记，较私有的内容也会选择性的发布出去，但不应该同2的文章放到一起，因为私有的，日常的琐碎内容不需要也不能稳定显示。偶尔心情变化，可能文章就会撤掉或修改。
4 杂类 一些涉及版权问题，社会问题或其他有争议的内容，也会发布。但不会放关键位置展示，需要一个混杂的仓库，随便丢进去。想起来的时候浏览，修改，整理一下。
取消其他服务 图床，git托管，文件服务等需要自建服务的，都会撤销。因为没有精力去维护一个不常用的服务。目前没有服务器要求长期占用一个服务器。静态部署，页面，文章都是部署在托管平台的。个人的内容不应该被禁锢在某一个服务器上，服务器应该随时清空而不影响站点访问。</description>
    </item>
    
    <item>
      <title>日记20201115</title>
      <link>https://pub.oribos.cn/web/note/2020111305.html</link>
      <pubDate>Sun, 15 Nov 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020111305.html</guid>
      <description>使用gatsby错误提示 原本在hugo使用的html代码，在gatsby上并不识别，导致出现错误提示。但问题是这是数百个旧文件中的一个，可以识别的md文档先渲染出来显示，不能识别的md文档不显示不就可以了。如此到每个错误就停下来，不进行渲染部署。那我需要将hugo的数百个文章转而使用gatsby生成，需要多长时间？
由于过于繁多的不兼容，识别问题，阻碍了使用gatsby。导致想变换静态部署工具的想法无法实现。
gatsby的博客模板 没有配置分页，由于gatsby的配置过于复杂，而且对于主题的支持并没有使用完善的git子模块，导致主题更新复杂。</description>
    </item>
    
    <item>
      <title>日记20201113</title>
      <link>https://pub.oribos.cn/web/note/2020/2020111305.html</link>
      <pubDate>Fri, 13 Nov 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020111305.html</guid>
      <description>记录 在部署项目时最慢的过程就是下载这个文件：https://github.com/lovell/sharp-libvips/releases/download/v8.7.4/libvips-8.7.4-darwin-x64.tar.gz，
只要涉及到github上文件下载，可能都会巨慢：
阿里巴巴在中国提供了一个镜像站点，其中包含夏普和libvips的二进制文件。
要使用此功能，请设置以下配置：
npm config set sharp_binary_host &amp;#34;https://npm.taobao.org/mirrors/sharp&amp;#34; npm config set sharp_libvips_binary_host &amp;#34;https://npm.taobao.org/mirrors/sharp-libvips&amp;#34; npm install sharp 原因 项目中绝大部分使用git管理，组件和模板使用包管理器比如npm，而这个sharp-libvips非要直接从github下载代码，http的下载方式绕过了npm的淘宝源，git服务器缓存，奇葩的使用方式导致下载速度极慢，整个安装包只有10.3M，却要下载4-5分钟。
类似的非要绕过npm源，git服务器的组件，下载和配置均会相当慢。</description>
    </item>
    
    <item>
      <title>日记20201113</title>
      <link>https://pub.oribos.cn/web/note/2020111305.html</link>
      <pubDate>Fri, 13 Nov 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020111305.html</guid>
      <description>记录 在部署项目时最慢的过程就是下载这个文件：https://github.com/lovell/sharp-libvips/releases/download/v8.7.4/libvips-8.7.4-darwin-x64.tar.gz，
只要涉及到github上文件下载，可能都会巨慢：
阿里巴巴在中国提供了一个镜像站点，其中包含夏普和libvips的二进制文件。
要使用此功能，请设置以下配置：
npm config set sharp_binary_host &amp;#34;https://npm.taobao.org/mirrors/sharp&amp;#34; npm config set sharp_libvips_binary_host &amp;#34;https://npm.taobao.org/mirrors/sharp-libvips&amp;#34; npm install sharp 原因 项目中绝大部分使用git管理，组件和模板使用包管理器比如npm，而这个sharp-libvips非要直接从github下载代码，http的下载方式绕过了npm的淘宝源，git服务器缓存，奇葩的使用方式导致下载速度极慢，整个安装包只有10.3M，却要下载4-5分钟。
类似的非要绕过npm源，git服务器的组件，下载和配置均会相当慢。</description>
    </item>
    
    <item>
      <title>页面分栏</title>
      <link>https://pub.oribos.cn/web/note/2020111203.html</link>
      <pubDate>Thu, 12 Nov 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020111203.html</guid>
      <description>页面分栏 实现文章内容较多的时候，实现内容自动分为左右两列。</description>
    </item>
    
    <item>
      <title>腾讯云函数计算备案</title>
      <link>https://pub.oribos.cn/web/note/2020111005.html</link>
      <pubDate>Tue, 10 Nov 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020111005.html</guid>
      <description>云开发域名备案服务 腾讯云上使用云函数，需要申请备案，备案本身并没有问题，但是在云函数上没有固定的服务器和ip，就无法安装一般的云服务器申请备案。事实上，在其他平台上申请的备案本应该完全可以在腾讯云上使用，只要你在腾讯云上接入备案。奈何云函数的特殊性，没有服务器和ip无从接入备案。
如果按照规定，正常在腾讯云上使用云函数的话，你需要在腾讯云上购买云服务器。然后通过服务器，接入备案。而如果你只是使用腾讯云的云函数的，就会需要一个空壳的云服务器提供备案申请。当然，你可以使用备案授权码而使用其他用户的服务器，但是2019年10月20日起，仅企业实名认证的腾讯云账号可生成备案授权码。
如此麻烦，腾讯云“人性化”的提供了
即：提供一个环境和ip方便用户备案。
其实 早期的云函数是可以使用已经备案的域名的，后来腾讯云撤销了未在腾讯云上接入备案的域名访问云函数，然后不久提供了专用的云函数备案付费服务。即，通过政策赚钱。</description>
    </item>
    
    <item>
      <title>wordpress测试</title>
      <link>https://pub.oribos.cn/web/pro/test/2020110502.html</link>
      <pubDate>Thu, 05 Nov 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/pro/test/2020110502.html</guid>
      <description>问题 发现wordpress的css和js文件并不全部会自动设置为https，由于wordpress是服务端渲染，页面效果应环境而出现不同。导致设置了https://app.holz.pub，页面显示仍然引用的http
如下图
导致页面效果出现问题。
而另一方面，wordpress自带的编辑器并不能很好的解决css和js文件的配置，导致此处配置必须修改主题文件。
结论 wordpress 糟糕的前端页面编辑器（或者说wordpress作为服务端渲染应用，前端页面根本不重要），在后台配置里即便设置了站点为https，仍然不会完全生效。</description>
    </item>
    
    <item>
      <title>新站点</title>
      <link>https://pub.oribos.cn/web/note/2020110501.html</link>
      <pubDate>Thu, 05 Nov 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020110501.html</guid>
      <description>新站点 相册
文章
展示
站点规划 blog作为主要正式内容发布网页，提供编辑教完整的文章。
library 存放临时，测试，未完工的文章。
photo 存放用于分享得图片资料，相册等。</description>
    </item>
    
    <item>
      <title>相册</title>
      <link>https://pub.oribos.cn/web/note/2020110101.html</link>
      <pubDate>Sun, 01 Nov 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020110101.html</guid>
      <description>创建了一个展示相册 相册站点 ，用来集中展示分享的图片。
子站点 项目的部署站点在 /photo ，即博客的子目录里，尽管使用的主题完全跟blog主题不一样。用子目录可以使得站点内容集中在一个域名下。原本使用photo.holz.pub域名，但是考虑到cdn，文件存放等等需要更多的设置，还是不如子目录方便。
后续新增友链，其他内容也会使用子目录的形式集中部署在blog.oribos.cn之下。(2020-11-20变更:由blog.holz.pub变更为blog.oribos.cn)</description>
    </item>
    
    <item>
      <title>收敛型和发散型知识</title>
      <link>https://pub.oribos.cn/web/note/2020102701.html</link>
      <pubDate>Tue, 27 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020102701.html</guid>
      <description>知识的收敛和发散 “收敛型知识” 收敛 是指会聚于一点，向某一值靠近。
“收敛型知识” 表现在越来越集中到某一些内容，某一部或几部著作。将某些内容视为最终的，全知全能的知识，解开宇宙万事万物奥秘的钥匙。
收敛型知识在起初会出现多种表现，他们的理论和依据在他们自身的性质决定下，集中成唯一的目标。这个唯一的目标可能是一本书，也可能是一个人，也可能是传说。
“发散型知识” “发散型知识”表现在越来越广泛，复杂。对某一个点的研究就能开拓出许多未知的课题。对课题的研究越来越复杂，内容越来越多。无法使用一个或有限个内容来解答所有问题。甚至出现相互矛盾，互相不相容的情况。
发散型知识在起初体现在一个简单的现象，基于理论之下会将此现象分析成多种因素，对不同因素的研究又能探索出更多内容，周而复始。</description>
    </item>
    
    <item>
      <title>记录hugo配置</title>
      <link>https://pub.oribos.cn/web/note/2020102705.html</link>
      <pubDate>Tue, 27 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020102705.html</guid>
      <description>日记 使用config.yml的publishDir自定义hugo生成的目录
使用baseURL = &amp;quot;/dir/&amp;quot;修改网页使用的根目录</description>
    </item>
    
    <item>
      <title>内容简化与复杂的矛盾</title>
      <link>https://pub.oribos.cn/web/note/2020102301.html</link>
      <pubDate>Fri, 23 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020102301.html</guid>
      <description>日记 简化内容 修改了之前在页面url上使用的随机质数页面
减少使用嵌入内容
减少内容子模块的数量，整合资源
矛盾 使用嵌入内容是期望在不频繁提交部署次数的情况下更新内容。使用额外的嵌入内容，博客的内容更新就不依赖于blog源文件的构建和部署。但是使用外嵌入页会使得内容分散，不利于分享。
内容收敛 无法确保长期服务的站点比如图床和自建git，这些应用撤销。仅保留长期的服务。
内容blog.holz.pub，资源base.oribos.city 仅提供这两个访问域名。
content.uns.pub是引用内容。
新增：private.oribos.city作为私有内容
其他的扩展内容均已子目录形式部署在blog上</description>
    </item>
    
    <item>
      <title>公开</title>
      <link>https://pub.oribos.cn/web/note/2020102107.html</link>
      <pubDate>Wed, 21 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020102107.html</guid>
      <description>公开 部署在vercel的页面内容
取消了其他站点的页面</description>
    </item>
    
    <item>
      <title>日记</title>
      <link>https://pub.oribos.cn/web/note/2020102101.html</link>
      <pubDate>Wed, 21 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020102101.html</guid>
      <description>日记 连续更新的内容，引用的其他网页内容。</description>
    </item>
    
    <item>
      <title>萌新专用hexo教程.</title>
      <link>https://pub.oribos.cn/web/note/2020102117.html</link>
      <pubDate>Wed, 21 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020102117.html</guid>
      <description>萌新专用hexo教程 介绍
适用于萌新的hexo自动部署 使用步骤 第一步 使用代码 git 下载github上的源码
git clone https://github.com/denalon/product.git
也可以使用coding仓库
git clone https://e.coding.net/frednab/test/product.git
第二步 修改配置 修改 项目目录下的CNAME文件里的域名
原文使用butterfly,你可以通过hexo 5.0之后的新的安装主题方式使用
npm i hexo-theme-butterfly方式安装自己需要的主题（请参照自己需要主题的安装说明）
其他文件不需要配置
第三步 更新文章 撰写自己的文章
第四步 git推送到github 通过一下命令将代码推送到github仓库
如果你是使用git clone方式下载的代码，建议删掉目录下的.git目录再执行如下操作
git init //初始化仓库。 git add . //添加文件到暂存区。(注意有点号.) git commit -m &amp;#34;更新说明&amp;#34; //将暂存区内容添加到仓库中。标识“更新说明” git remote add origin XXXX.git //添加到远程仓库操作，将xxxx.git设置为远程仓库origin git push -u origin master //推送master分支到origin仓库 提示操作成功后，代码将推送到github上的master分支，github自动部署将启动，将hexo文件自动部署到gh-pages分支
第五步 开启pages 在github仓库 “Settings”选择“GitHub Pages” source项选择Branch:gh-pages 如图：
即可使用由github自动部署的 pages 服务。
以下是需要用到的内容
nodejs安装 ubuntu Installation instructions Node.</description>
    </item>
    
    <item>
      <title>日常控制力</title>
      <link>https://pub.oribos.cn/web/pro/test/202010200930.html</link>
      <pubDate>Tue, 20 Oct 2020 09:30:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/pro/test/202010200930.html</guid>
      <description>列举一下日常控制力方面 不应在手机或电脑上下载和安装陌生应用，除非你知道该应用的作用和使用效果。
不应使用陌生的pe系统盘或系统镜像，ghost文件，备份文件。除非你知道其来源和效果。
不应将重要的u盘，磁盘，文件借给其他人。
密码分级，密码妥善保管。
对此，某些厂商的服务要求用户提供复杂的密码其实是一种差劲行为。
要求提供复杂密码 某些厂商的服务需要用户使用尽可能复杂的密码，推荐使用确实有助于用户资料安全。但是，强迫使用就是一种无理要求。用户并不信赖你的服务，使用一个简单密码暂时试用，测试一下你的服务，效果好了就会正式使用，再根据需求修改自己密码保障自己的额资料安全。这完全是用户的行为，不能让厂商强加干涉。
尽管用户使用简单的密码，但完善的密码保存机制可以通过使用混淆代码和多次加密，使简单的密码仍能以极其复杂的方式保存在服务器。对密码的保管是需要技术投入的，厂商不愿意增加技术投入，转而迫使用户提供妥善的密码机制是一种成本转移的方式。</description>
    </item>
    
    <item>
      <title>博客变更历程</title>
      <link>https://pub.oribos.cn/web/note/2020101303.html</link>
      <pubDate>Tue, 13 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020101303.html</guid>
      <description>博客变更 记录博客部署的过程</description>
    </item>
    
    <item>
      <title>封神榜的故事</title>
      <link>https://pub.oribos.cn/web/note/2020101312.html</link>
      <pubDate>Tue, 13 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020101312.html</guid>
      <description>仅针对封神榜小说内的故事情节
封神榜的故事内容 由于纣王的“无道”，导致女娲娘娘降罪，派出狐狸精蛊惑纣王，破坏商的实力。同时道教、阐教、截教三教共同制定了天庭员工名单，名单并不是明确的，而是针对武王伐纣的事件做的“规划”。名单的原则大体是“执意下上协助纣王的就是助纣为虐，被击败后进入封神榜成为天庭员工。而协助武王顺应天命的，也会在伐纣大业里遇到劫数，只是消去修为重新修道。
问题点 封神榜名单是否是一开始就确定的？
众阐教截教弟子知不知道自己的下场？道教阐教截教的教主知不知道自己弟子的下场。毕竟太上老君，元始天尊本身就是“天”还有什么能逃出他们的法眼？
女娲娘娘派出狐狸精是诱发了商灭亡还是加速了商灭亡？毕竟尽管商已经日薄西山，但聚集力量解决周边诸侯国是没有问题的，甚至武王伐纣之际，也进行了强烈镇压，一堆围困周军几乎到粮尽援绝，幸得杨戬的粮食救济才度过难关。
分析 截教是可以“选择”，选择中立，不参与武王伐纣的并不会影响。助纣为虐的就只能成为上封神榜。截教人士，修仙超脱凡间，有些却因为别人的几句谗言盲目下山，有些贪图人间富贵要入朝为官。总之，他们在武王伐纣的历史洪流中，充当了反派角色。
而阐教尊师命下山协助武王，也是存在巨大风险的，尽管方向和目标是明确的，但过程中应了劫数，损伤修为也是代价极大的。但总体而言，阐教人士没得选，要么谨遵师命投入危险重重的纷争，要么离经叛道躲过劫难。事实上，无论怎么选对于修仙而言都不是明智之举。
诱惑截教人士前仆后继投身注定失败的历史洪流中的重要角色是阐教的申公豹。无论出于什么心思，他的参与在“确定&amp;quot;的封神榜名单下提高了截教人士的名额，进而减少了其本派阐教的名额。就是有一个这样的角色，才使得大批截教人士成为“注定失败的一方”
人类在武王伐纣的纷争中属于次要的，士兵，低阶将领都是在阐教截教的大杀器面前成为牺牲品。只有少部分高级将领在种种机缘巧合之下入天庭。</description>
    </item>
    
    <item>
      <title>10022</title>
      <link>https://pub.oribos.cn/web/note/2020101271.html</link>
      <pubDate>Mon, 12 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020101271.html</guid>
      <description>科学态度 中华文化跟科学态度互斥，儒家道家的知识根本不以逻辑思维，科学研究为标准。
《庄子与惠子游于濠梁》惠子曰：“子非鱼，安知鱼之乐？
这其中就是以逻辑辩论的惠子同道家庄子的辩论。
古代文明 古埃及文明，从起源公元前5450年到鼎盛公元前3150经历了2000多年，到公元639年没落。而中华夏朝出现约公元前2070年，这相当于别人楼房已经快塌了，自己家茅草屋才刚开始搭建。
一个80岁老态龙钟的老人跟一个刚出生年轻活泼的小孩子怎么比好坏对错大小？关公战秦琼？</description>
    </item>
    
    <item>
      <title>10023</title>
      <link>https://pub.oribos.cn/web/note/2020101231.html</link>
      <pubDate>Mon, 12 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020101231.html</guid>
      <description>态度 地域歧视，种族歧视，性别歧视等等都是人类本身具有的生存能力，这种事情不应该去限制，批判。如果有人歧视你能力低，你最好的反驳是用结果狠狠打他的脸，如果有人歧视你穷，你最好的反驳是大把钱砸死他。除此之外的批评，辱骂，攻击并不能改变他人的歧视。
因为歧视是人对差异化的一种本能抗拒，就像有些人害怕蛇，蝎子，鲸鱼等等，人对这些跟自己相差很大的事物陌生的事物有本能的抗拒，难受。可以克服但无法避免。
别人是否违法，违法就举报起诉，让权力机关制裁。如果别人不违法，那么你对别人的任何伤害都在道理上是站不住脚的。
别人攻击你，你可以反抗，反抗是本能。
尽管人类有独立思想，但依然属于生物，本能依然无法避免。
事物 一件事情发生，人类用不完备的条件去解释和重现是困难的。解释一个现象或者事情是需要比事情再次发生需要更多。古埃及人能建造金字塔，人类用不完整的资料去研究和还原金字塔需要的成本更大。
一个私钥加密基于质数计算，而反之计算一个大数的质因数是相当困难的。
一个水杯，将它摔碎只需要手一松手，而将一个破碎的水杯完整还原需要的工作量是非常大的。甚至大于重新制造一个。</description>
    </item>
    
    <item>
      <title>引用文件</title>
      <link>https://pub.oribos.cn/web/note/2020101217.html</link>
      <pubDate>Mon, 12 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020101217.html</guid>
      <description>连续更新的内容 使用https://github.com/Rheaheim/content的内容作为日常引用文件，一些临时撰写的文章会上传到github，生成https://content.uns.pub/的页面。并根据需要引入到博客页面。
使用代码： &amp;lt;div class=&amp;#34;left&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;div1&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; $(&amp;#34;#div1&amp;#34;).load(&amp;#34;https://content.uns.pub/test/1.html&amp;#34;); &amp;lt;/script&amp;gt; &amp;lt;/div&amp;gt; </description>
    </item>
    
    <item>
      <title>自媒体</title>
      <link>https://pub.oribos.cn/web/note/2020101207.html</link>
      <pubDate>Mon, 12 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020101207.html</guid>
      <description>自媒体 知识P2P分享，每个人都分享，每个人的认知都是块状逐渐完善？为什么有人讨厌？P2P的网络必然影响网络服务商的垄断，必然抢这些人的饭碗，人学聪明，认知多了必然不容易被人忽悠。
就像过去骑士阶层鄙视火枪手一样，旧的阶层对新的产品总因为各种情况抵制新兴事物。旧的知识垄断阶层必然大肆宣传自媒体的问题。
封神榜 哪怕商已经走下坡路，但周依然无法战胜强大的商。电视剧里姜子牙多次受挫，军队多次被困，断粮还需要杨戬救急。
服务限制 服务商的服务必然存在故意的，武断的限制,以形成体验差异。服务商通过剥夺用户的选择权来降低研发和设计成本，用户不知道自己需要什么，纵然是知道也没能力去实现。少部分人的需求难以形成市场需求。
美洲原住民 多少年了，自从哥伦布到达美洲，美洲原住民一直处于落后，被动形势。哪怕是二战以后，也没有哪个美洲原住民建设的经济强国。
商品不值钱 对于商家来说，产品的价值多少并不重要，销售价格是根据需求情况而定的。只要有人需求，不值钱的石头都可以卖上钻石的价格。在可预计的情况下与其直接按成本价销售，不如从高价逐渐下降，通过价格歧视的策略收割更多利润。</description>
    </item>
    
    <item>
      <title>nodejs和git安装</title>
      <link>https://pub.oribos.cn/web/note/2020/20201011.html</link>
      <pubDate>Sun, 11 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/20201011.html</guid>
      <description>nodejs安装 ubuntu Installation instructions Node.js v15.x: # Using Ubuntu curl -sL https://deb.nodesource.com/setup_15.x | sudo -E bash - sudo apt-get install -y nodejs # Using Debian, as root curl -sL https://deb.nodesource.com/setup_15.x | bash - apt-get install -y nodejs Node.js v14.x: # Using Ubuntu curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt-get install -y nodejs # Using Debian, as root curl -sL https://deb.nodesource.com/setup_14.x | bash - apt-get install -y nodejs Node.</description>
    </item>
    
    <item>
      <title>为什么很多地方用的版本都很低</title>
      <link>https://pub.oribos.cn/web/note/2020/20201010.html</link>
      <pubDate>Sat, 10 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/20201010.html</guid>
      <description>为什么很多地方用的版本都很低 软件版本低 操作系统，应用程序，网络服务，app，文件等等，日常工作中总遇到各类版本问题，许多应用都在用很久之前的版本，很旧的模板。
日常生活遇到 如果软件版本低是因为使用者认为“旧的稳定”，那么生活中遇到的其他方面问题呢？
办理业务需要早就不在提供的“税务登记证”“开户许可证”“机构信用代码”等等，这些东西早就随着三证合一而取消。
本质 改变，更新需要成本和动力。维持不变是一种惯性思维。
惯性 物体运动，人类生活都存在惯性。惯性导致改变状态需要付出动力。
关于wow的各种设定 过度使用绑定功能 过度限定等级 剧情设计碎片化无脑 政治正确
狭义价值观
游戏设定胡乱修改 90%变为9%
反人类设计 </description>
    </item>
    
    <item>
      <title>连续更新的内容</title>
      <link>https://pub.oribos.cn/web/note/2020101000.html</link>
      <pubDate>Sat, 10 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020101000.html</guid>
      <description>连续更新的内容 连续更新，内容引用github</description>
    </item>
    
    <item>
      <title>博客撤销后端服务</title>
      <link>https://pub.oribos.cn/web/note/2020100813.html</link>
      <pubDate>Thu, 08 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020100813.html</guid>
      <description>撤销后端服务 撤销了测试用的halo ghost等服务端渲染应用
关闭所有使用php的服务端渲染站点,包括测试用的wordpress,typecho.和函数计算上的php应用.
博客和单页摒弃web服务器 用来记录和展示日常文章的博客,将不再部署在云服务器,物理服务器,树莓派,NAS上.将以hugo生成html托管在静态站点上或者对象存储服务上.简单的js或功能性页面将在cf的worker或者对象存储上使用.
关闭个人云服务器的web服务,关闭个人功能的后端服务.
文章以文件形式部署 博客的文章更新以文章的形式保存在git托管上,博客的项目托管在github或coding上,通过定时运行部署,或者api触发 .
说明 由于部署一个前后端分离的应用需要前端服务器和后端服务器同时持续运行,虽然前端服务可以托管在静态服务上,但需要考虑静态服务的托管费用和流量问题.还要关注后端服务的持续运行和维护.这些在项目运行中是有必要的,但博客的作用有限.投入过多的资源并不明智.
采用git托管和静态页面部署,配置简单的自动部署和cdn,维持一个长期的网页在线.其他的服务器运行和维护不需要担心.这是必要的.
不采用落后的wordpress,typecho等应用,不采用java,python,go项目的服务端渲染应用.一个简单长期的博客,应当尽可能的结构简单,稳定运行.
测试项目另外部署 之前的博客作用是用来测试项目代码的效果,现在博客作为一个长期维护的项目,就不再作为一个临时的测试的运行状态.所以,不必要的内容应当被剥离.
用来测试的项目将另外安排域名和服务器,使博客尽可能不受干扰 .</description>
    </item>
    
    <item>
      <title>新机常用软件及环境配置清单</title>
      <link>https://pub.oribos.cn/web/note/2020/20201007.html</link>
      <pubDate>Wed, 07 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/20201007.html</guid>
      <description>新机常用软件及环境配置清单 写在前面的评价 有些应用的选择需要单独说一下。
网易云音乐，海外有版权限制，真的是自掘坟墓，本身自己的资源就快被QQ音乐抢光了，还有这限制，9102年都过完了还有这些限制，真该学学QQ音乐啊，不然再多云村钉子户，也分分钟就弃坑了。
Chrome，我现在已经彻底是Google用户了，从Map到YouTube到GPlay，我没有理由不选择Chrome作为我的主力浏览器，Firefox已经多年不用了，不晓得体验如何（只在Linux上用用）
360安全浏览器，只是想用这个来当IE的替代品，极个别时候还必须得用IE，木的办法。 Editplus，这个我要强调，这是我见过的能够打开文本文件最大的编辑器了，比如50M、100M的文本，用记事本和NPP等会直接卡死的。
AIDA64，强大的硬件监控、查看、测试软件，其实前面说的全都能干，但我一般查看信息，里面的传感器部分很好，可以捕获全部的硬件传感器信息。
HWIDGEN脚本，Win10专业版现在找激活秘钥太难了，基本不可用，而KMS类似的激活又有时效且不稳定。基于此网上有永久激活的方法，但亲测并不适用每个人，而这个脚本可以一键傻瓜式激活（虽然也是命令行运行），效果和使用秘钥激活一样。
Anydesk，这个要说，非常轻便，真的是随下随用，安不安装都可以用，显示速度也不错，重要的是免配置，这个非常棒，就通过一个数字码连接，而且配置非常容易，适用全部的操作系统，手机、Linux、Windows全部可以互通。RealVNC可以实现相同的功效，但只是VNC分为Server和Viewer，而且都需要安装，方便性稍差一些。
PUBG_Lite，我第一次用我的Win10平板玩就惊到了，平板的配置 core m 真的很差了，但我玩PUBG_Lite依旧可以畅玩，操作和视觉上和正常版差一些，但差归差该有的一点不少，只是画质稍差，当然可以调高，而且操作非常流畅，Lite真的降低了PC吃鸡的要求，看好这个版本。 日常使用
No.	软件名称	说明 1	搜狗拼音	基础 2	WinRAR	最好用，不喜欢7z 3	Chrome	浏览器主力 4	Office365	学校给的账号，白嫖 5	HWIDGEN脚本	永久激活Win10专业版 6	360安全浏览器	用他的IE内核 7	Notepad++	文档编辑主力 8	Editplus	亲测适用于50M以上文件 9	迅捷PDF编辑器	强大，当阅读器也不错 10	迅捷PDF转换器	各种转换一步到位 11	Cmd_Markdown	写作工具，最好无之一 12	360驱动大师	主要更新下声卡驱动 13	360安全卫士	只是想用加速球 14	TrafficMonitor	替代360加速球 15	Adobe Flash Player	Flash，谷歌已弃用 16	Potplayer	4K播放环境-播放器 17	madVR	4K播放环境-渲染 18	LAVFilters	4K播放环境-解码 19	微信	社交 20	QQ	社交 21	Telegram	社交 22	QQ音乐	网易云海外体验极为差劲 23	CPU-Z	简单的看下CPU和内存 24	AIDA64	查看硬件信息必备 25	CrystalDiskMark	硬盘测速，注意版本</description>
    </item>
    
    <item>
      <title>霰弹</title>
      <link>https://pub.oribos.cn/web/note/2020100703.html</link>
      <pubDate>Wed, 07 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020100703.html</guid>
      <description>霰弹枪 霰弹枪的&amp;quot;霰&amp;quot;读作san是没有错的,如图:
霰弹枪
散弹枪
在老广的发音里面都是发san音！
表达的都是一个意思：一发子弹里面有很多小弹丸，打出去会逐渐发散。
在大陆，正确写法是霰弹。 以下内容转自 知乎
作者：pcc778899 链接：https://www.zhihu.com/question/290013820/answer/467708564
1.在大陆，正确写法是霰弹。
2.这个字你可以读xian4，也可以读san3(这个问题见后文)，但写作散是错误的(过去似乎有一段时间由于太多人写错了，加了“另作散弹”一条)。(也就是说大多数情况下读san3弹是有争议，但写散弹是更倾向于错误。)
3.“霰”怎么读，存在着演变。
4.很多网友做过考证，这个字读音很混乱，从70年代到现在出版的各种工具书(《现代汉语词典》，《辞海》，《新华字典》等)有一个读音(只有xian4)，也有两个读音(xian4，san3)。但是存在很多矛盾，总体上是从两个读音逐渐向一个读音演变，但是不同工具书演变时间不同(可能差十几年)，还出现同一个出版社不同工具书同年出版不一样的情况。
5.1987年的《全军武器装备命名规定》中对于霰弹枪的命名L-QBS，显然是采用了san3这个读音。2012年颁布了《中国人民解放军装备命名规定》，但截止现在我查不到12年以后的霰弹枪命名。
6.总之，现在绝大部分最近出版的工具书都只有(xian)一个读音。
7.补充第四条，有一段时间san3这个读音特指弹种，这可能是87年《命名规定》的缘由。
8.这个词可能来源于日语“霰弹铳”(我直接用简体打出来了)，但是日本也有“散弹铳”这个说法，现在日本的普遍汉字写法是“散弹铳”。“散”和“霰”读音在日语里相同。
9.至于形象不形象的问题，看这个词“榴霰弹”，这个词如果用“霰”(自然现象的释义，xian4)，是很形象的，从天而降的细雹。但是对于“霰弹枪”“炮射霰弹”(葡萄弹)，就不是很形象了。
10.如果要细究，我们需要:从14，15世纪开始到现代欧洲各国火炮弹种和枪械弹种在各自语言里的叫法，以及这些词的拉丁语，希腊语词源。从宋代开始我国对于各种火炮弹种，火枪弹种的叫法以及汉字字形，字意，读音(涉及方言)的演变。从战国时代到现代日本对于各种火炮弹种，火铳弹种的叫法以及字意，字形，读音的演变。完整的87年和12年两个版本的命名规定。从晚清到现代出版的各种字典，词典类工具书(不同年份出版的版本都要)等等等等……这些玩意足够写论文了。
11.建国后，主流是这样发展的:霰是多音字》霰是多音字，且散也对》霰只有一个读音，且散不对
12.现在存在很多迁就错误读法的读音修正(其实也不能这么说，很多涉及到民国时读音演变和新中国读音演变等问题)，比如说服(shuo1还是shui4)，一骑当先(qi2还是ji4)。淬火，cui4还是zhan4？行业内读zhan4火，但是现行标准是cui4。
最后：我倾向读san3写霰，但是现在标准就是读xian4写霰。行业内，军内不管怎么读，怎么写，但是标准就是xian4。
个人看法 过去中国社会状况和文化教育导致识字率低,文字不统一,特别是近代引进的东西.近年来出版的字典,粗暴的将文字进行标准化,规范化.却没有对必要的分歧进行说明和保留.导致命名san3的读音是历史存在的,却被&amp;quot;官方&amp;quot;划为&amp;quot;不规范&amp;quot;.
还原历史,还原文化的真相是必要的.
武 武”字是个合体字，bai按古代造字法的“du会意”，
“武”zhi从止、从戈，由止、戈二字合dao起来成为“武”字。戈是古代的一种兵器，止在甲骨文中实则为人的脚趾的象形，在金文中，“止”依然构成人的脚趾之形；
在篆文中“止”依然如此。甲骨文中“武”字的最初表现形式是“足戈并立”，左边画一个“足型”，而右边画一个“戈型”，二者组合成其雏形，并以象形取意，即立足持戈，是一种静态；在此基础上字体由左右结构，变成了上下结构，近而形成了“止戈竖立”的组合，此时最大的变化在于“足型”被“止”字所代替，而“戈”的一撇移到“弋”字的左上角，其意是持戈而行，处于一种动态。
进入青铜器时代，金文中的“武”字，已由象形向会意方向发展，并形成“动静”结合的字体，笔划粗细一致，结构相对协调，以适用于人的习惯认识和记忆。
从甲骨文中“武”字的变化看，其原始本意并非止戈为武，而完整的表述应该是这样的：或持戈静止而立，注视前方；或举戈而动，欲与人、欲与兽斗，与人斗是争夺地盘和剩余价值，与兽斗是维持生存和生命。
古人错误的把&amp;quot;止戈为武&amp;quot;当做&amp;quot;要能止战，才是真正的武功（军事成就/建树）.其实是错误的.</description>
    </item>
    
    <item>
      <title>图片嵌入</title>
      <link>https://pub.oribos.cn/web/note/2020/20201006.html</link>
      <pubDate>Tue, 06 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/20201006.html</guid>
      <description>图片嵌入 &amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt; function changeFrameHeight(){ var iframe= document.getElementById(&amp;#34;myiframe&amp;#34;); var wid = document.getElementById(&amp;#39;father&amp;#39;).clientWidth; if (wid&amp;gt;900) iframe.height = wid/2.19; else if (wid&amp;gt;551) iframe.height = wid/2.21; else if (wid&amp;gt;470) iframe.height = wid/2.165; else iframe.height = wid/2.26; } &amp;lt;/script&amp;gt; &amp;lt;div style=&amp;#34;background-color: rgb(0, 0, 0);padding-top: 7px;&amp;#34; id=&amp;#34;father&amp;#34;&amp;gt; &amp;lt;iframe width=&amp;#34;100%&amp;#34; id=&amp;#34;myiframe&amp;#34; frameborder=&amp;#34;0&amp;#34; onload=&amp;#34;changeFrameHeight()&amp;#34; src=&amp;#34;https://api.dujin.org/pic/&amp;#34; img&amp;gt; &amp;lt;/iframe&amp;gt; &amp;lt;/div&amp;gt; </description>
    </item>
    
    <item>
      <title>hexo安装步骤</title>
      <link>https://pub.oribos.cn/web/note/2020/20201005.html</link>
      <pubDate>Mon, 05 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/20201005.html</guid>
      <description>hexo安装步骤 在客户端运行和推送
安装nodejs 安装git 安装hexo 配置文件 发布 hexo d
在服务器上运行和部署
推荐安装宝塔面板 安装nodejs 根据需求安装git 由于是在服务器上安装，就不需要使用git和github代码托管，就没必要安装git。当然使用github托管代码有助于保留源代码，推荐使用。
安装hexo 配置文件 发布 hexo g</description>
    </item>
    
    <item>
      <title>一点认识</title>
      <link>https://pub.oribos.cn/web/note/2020100511.html</link>
      <pubDate>Mon, 05 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020100511.html</guid>
      <description>个人见解 位置 目标 过程 位置: 条件,资源,能力,
目标: 控制
过程: 发现,经历,体验,探索
思维 思维 智慧 灵感 思维: 抽象的东西
智慧: 表现出的具体的东西
灵感: 促使发现新的,修改旧的,一种催化剂</description>
    </item>
    
    <item>
      <title>中文域名的尴尬</title>
      <link>https://pub.oribos.cn/web/note/2020100573.html</link>
      <pubDate>Mon, 05 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020100573.html</guid>
      <description>中文域名 类似于 域名.信息 的中文域名,看似符合中国文字的习惯,但是域名url的符号&amp;quot;.&amp;ldquo;是英文符号,导致使用中文输入法输入 域名.信息 时需要输入 中文符号&amp;quot;域名&amp;rdquo;+英文符号&amp;quot;.&amp;quot;+中文符号&amp;quot;信息&amp;quot;,一个简单的域名需要切换至少两次输入法.
这种复杂的输入方式导致中文域名的使用难度比英文域名高.在英文域名中,一个字符的差别就会使得域名价格翻十几甚至几十倍价格.中文域名如此尴尬的使用方法实则推广难度大.
中文的符号 不知道何时,中文排版需要自创 全角符号 ，。代替 . , 等符号。导致在电脑操作上，两者具有较大不同。</description>
    </item>
    
    <item>
      <title>1003日记</title>
      <link>https://pub.oribos.cn/web/note/2020100303.html</link>
      <pubDate>Sat, 03 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020100303.html</guid>
      <description>记录 英国的苹果往下掉，中国苹果为啥没一点骨气非要遵循外国的规则，为啥不往天上飞！中国几千年悠久文明，那么多能人志士为啥要学外国的“科学“！大家一起努力发明御剑飞行，时光倒流，反重力不好吗？？
记录 火星没有磁场，这比有没有大气更重要，无法抵御太阳风侵袭，就算是人工制造了火星大气，也会很快被太阳风吹散，致命宇宙辐射更是会轻易杀死生命体。资本家治理不好撒哈拉沙漠，探索不玩海底和极低，却热衷于探索火星和月球。
记录 中国古代也只是在不同时期面对匈奴，蒙古，满族三大蛮族若干小部族，就这样还多次被外族统治。
欧洲希腊和罗马要面对凯尔特人，日耳曼人，斯拉夫人，阿拉伯人，波斯人，埃及人等等众多民族，个个割据一方不容小觑。欧洲的混乱和分裂根本不是一个皇帝一个强大国家能解决的。再加上，基督教，伊斯兰教冲突。
南斯拉夫本来是一个民族，都是斯拉夫人，结果由于宗教，地域冲突，一直动乱到现在还在分裂。
记录 人是高等动物，高级的存在。人的大脑可以容纳各种不同的思维模式和逻辑体系。数学，自然科学，天文地理，社会百态。这些是多种多样的，花样繁多的模式同时在我们大脑里存在。
数学，哲学，自然科学，人文地理等等不是独一的排斥的，相反是共容的。哪些顾此失彼，不懂包容的都是认识不足的。
机器人的数学逻辑，超出数学的问题要么归为数学，要么bug死机。我们有些人排斥科学理论，只认自己文化的那些人，就像死板的电脑一样，一出现理解不了的或跟自己已有认知冲突的，要么报错，要么死机。
记录 医学
西方医学研究生物的物质形态，细胞蛋白质等微观层面，而生命本身包括精神意识是复杂的无法被机械化物质化研究的。
那怎么办，细胞蛋白质随着人类的科学技术水平可以通过放大镜显微镜接触观察研究。你那精气神能观察研究吗？如果现在一个大神能让人学会研究这些理论上的东西，如果现在人个个能悟道修法那没的说。但很可以你这样人看不到，历史上也没几个大神级人物接触到。扁鹊对于病入骨髓的病也无能为力，张仲景的家族也因为瘟疫死伤无数。
精气神，中医的道人类研究不到，看不到，也很难推而广之，从古至今病症和瘟疫依然肆虐，甚至技术顶尖的皇家御医也对皇子夭折皇帝盛年而亡束手无策，面对大范围的瘟疫也无能为力。张仲景研究瘟疫时，如果有人告诉他，有一种可观察可接触的办法可以看到致病菌，有一种手段可以杀死这些害人的东西，他会如何选择？
毒药为什么致人死亡，凭什么活蹦乱跳的人一小滴药水很快就能致死？重要的是这种毒药怎么解？更重要的是解药怎么重复制取？这种你不了解致病原理，不了解毒药的化学成分和化学性质是很难有所突破的。
天花为什么可以通过种痘形式预防，原理是什么？很多人没注意到，中国古代通过实践发展种人痘可以预防天花，但是由于理论本身的不了解，种人痘极度危险，失败率很高。就连清朝还出现皇家感染天花，可以说古代中国对天花的防治是失败的。没有理论支持的古代医术是存在极大问题的。
科学方式医学是近现代才发展壮大的，并不在于其理论和文化底蕴。而是随着人类生产力水平的发展，认知进步，技术爆炸。人类可以使用更高级的工具，接触更多的资源去研究探索世界，认识世界。并且并不会局限性某本典籍某位先贤的局限，西方医学发展的本质是人类技术爆炸在一个方向上的释放。
拜经济发展和技术进步，人类开始有能力研究现代医学又能支持部分人研究传统医学，这不是一个单选题，但真实的疗效开来前者成果更显著。人类的平均寿命显著提高就是一个体现。特别是皇帝或领导阶层的寿命。人类不是先贤仙人，理解不了高深莫测的玄学理论，有人理解就放任他们研究，奈何只听说过诺贝尔物理学，医学等奖，没有哪个国际形式的玄学奖，道学奖，仙学奖。
对待哪些道学，仙学，传统医学。社会是放任其研究的，有成果就会有资源来支持，没有成果就只能慢慢凋零，任何逆流而上的就不得不怀疑其目的。
现在医学对病毒，这种极其微小极其简单的生命形态很困惑。研究不透，这不是现代医学的问题，这是人类局限性问题，人类没能掌握且无从掌握生命的本质和万事万物。所以只能通过一点一滴的技术手段，用对病毒来说极其拙劣的手段研究它对付它。就像数学家求圆周率一样，圆周率是人类无法理解的超越数，人类就不应该着眼于探求圆周率的精确值最后一位，应该放眼于自己能力范围内的不断求值满足要求。就像现代医学来说，人类掌握不了万事万物的规律，人类身体的大智慧。现代医学无法让个个长命百岁，但可以让人平均寿命比古代多活三五十年，残疾先天疾病也能过的很长过的很好，这就是成功的。肝不好，切除一部分还能恢复，肾不好切除一个也能活十几年。甚至肺，心脏都能更换。这是现代医学对人类社会的伟大贡献。
传染病，对待传染病跟普通疾病是不同的，他首先不应该关心怎么治愈，而因为关心如何控制，如何防止大面积传播。针对长期无法治愈的传染病，不需要医生出手，直接隔离就能解决问题。这是一个很难接受但又很现实的选择。如果你某个组织染病，而且生命堪忧，你是坚持花更多时间研究治愈最终结果不一定成功，还是切除阻断来自保？如果医生是神仙那自然药到病除，但现在治不了的，医生只是凡夫俗子。坚持人体道法自然万物相生相克等等，还是切断自保？
记录 尽管人类探索宇宙已经进行了几十年，但是由于技术不足，短期内找到殖民星球的可能性极低。人类连自己所处的星球的沙漠和草原地区都无法改造，还痴心妄想改造没有大气的月球，没有磁场的火星。
人类发射的最远的探测器旅行者一号，离开太阳系需要数万年时间。假如地外文明滞留在太阳系外围观察，那么旅行者一号接触地外文明需要数万年。
人类对微生物，病毒的研究几乎空白，根本不了解在火星地理环境下微生物的生存状况，无法预防可能的微生物泛滥。</description>
    </item>
    
    <item>
      <title>日记20201112</title>
      <link>https://pub.oribos.cn/web/note/2020/2020111201.html</link>
      <pubDate>Sat, 03 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020111201.html</guid>
      <description>躲避思考 有一种心理现象，人在面对复杂的事情时首先想到的是避免复杂的思考，而去选择简单的易于实现的方法，或者通过逃避，转嫁的方式去应付需要面对的事情。有人把这种归纳为奥卡姆剃刀原理的一种体现，有些人把视为惰性。
只观看不思考 互联网时代发展，现在出现一味的刷趣味短视频，肥皂剧，营销号视频等等，低质量的视频。所谓低质量指在这类视频“不烧脑”观看这类视频不需要投入过多的思考就能体验到有趣，搞笑，惊奇，震撼等等。一个简单的重力现象可以被渲染成灵异现象，阴谋论。过度的观看这类东西往往会让人不自觉的失去思考能力，只用简单的理论描述事情。
反剃刀理论 奥卡姆剃刀原理这个原理称为“如无必要，勿增实体”描述了自然界，人类社会等多处出现的化复杂为简单的理论。原理看似合理，而且在社会实践中确实有用。但要明白，奥卡姆剃刀原只是人类为了问题而做的概括，往往自然界的随便一个事物，看似简单，背后的理论和技术是极其复杂的。
举例：一把手枪，你只需要扣动扳机就可以射出一枚子弹攻击目标，被视为人类征服大自然的有利武器。手枪的操作极其简单，扣动扳机即可，奥卡姆剃刀原理描述了人类征服成千上万野生动物的极其简单的方式。然而，手枪的原理极其复杂，内部零部件也同样繁多。对子弹，火药，底火的要求和规定也是相当盘根错节。甚至手枪的型号，用途，使用条件等等同样不简单。
往往人类面对的真是的自然是相当复杂的，奥卡姆剃刀原理只是一个描述世界的方法，它在某些领域和情况下有效，但不意味着处处有效。
控制力 对于自然，人类一直在探索对自然的改造能力，对于社会，人类同样发明了各种方法提现权贵阶层的控制力。最大的控制力莫过于帝王，一个人对整个国家的资源有绝对的控制力。对于规则，法律，经济，军事等等拥有绝对的控制力。
反观现代社会，许多国家的领导人，只是利益集团的代表人，单独的个体并没有出众的控制力。所作所为受到法律和舆论的制约。就连总统总理也是选举出来的，而且无论本人的意愿，选举和取缔都不是个体能左右的。
不同的国家政策受控制力束缚，在一个较重控制力的国家，自由必定受限。提倡自由的国家，控制力比如存在不足。</description>
    </item>
    
    <item>
      <title>1002日记</title>
      <link>https://pub.oribos.cn/web/note/2020100219.html</link>
      <pubDate>Fri, 02 Oct 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020100219.html</guid>
      <description>隐藏ip 对所有服务都接入合适的cdn，避免在业务上直接使用域名解析ip地址，应该关联相应cdn服务，提供动态的ip和内容源站。
问题 腾讯云的云开发，对销毁环境有限定，一个月只能销毁一个
vercel netlify github对静态文件托管进行整理，只体现出一个服务，简单甚至免费。而阿里云，腾讯云将一个静态文件托管服务拆成对象存储，函数，cdn，NAS等等多个复杂繁琐的业务，处处对自己的业务进行捆绑关联和扣费。业务表现越来越复杂，对自身的服务依赖越来越紧密。这是在深耕商业化。类似的还有cloudflare的KV空间，业务高度关联，看不到具体数据，收费固定，略显鸡肋。</description>
    </item>
    
    <item>
      <title>docker安装宝塔面板</title>
      <link>https://pub.oribos.cn/web/note/2020093073.html</link>
      <pubDate>Wed, 30 Sep 2020 11:09:33 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020093073.html</guid>
      <description>在使用docker安装宝塔面板之前请先确保服务器已经安装并开启了docker
拉取centos基础镜像，用容器启动该基础镜像，直接在这个容器中部署
1.拉取纯净系统镜像
$ docker pull centos:7.2.1511 1 2.启动镜像，映射主机与容器内8888（宝塔面板）、888（PHPMYADMIN）端口
$ docker run -d -it -p 8888:8888 -p 888:888 centos:7.2.1511 1 可以同时映射进去其它常用端口比如：80、443、3306等
$ docker run -d -it -p 8888:8888 -p 888:888 -p 80:80 -p 443:443 -p 3306:3306 centos:7.2.1511 1 挂载目录
$ docker run -d -it -p 8888:8888 -p 888:888 -p 80:80 -p 443:443 -p 3306:3306 -v /www:/www &amp;ndash;privileged=true centos:7.2.1511 1 3.查看容器id，并进入容器
$ docker ps 1 $ docker exec -it 容器ID bash 1 4.</description>
    </item>
    
    <item>
      <title>日记01</title>
      <link>https://pub.oribos.cn/web/note/2020092572.html</link>
      <pubDate>Fri, 25 Sep 2020 11:09:33 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020092572.html</guid>
      <description>尽管人类探索宇宙已经进行了几十年，但是由于技术不足，短期内找到殖民星球的可能性极低。人类连自己所处的星球的沙漠和草原地区都无法改造，还痴心妄想改造没有大气的月球，没有磁场的火星。
人类发射的最远的探测器旅行者一号，离开太阳系需要数万年时间。假如地外文明滞留在太阳系外围观察，那么旅行者一号接触地外文明需要数万年。
人类对微生物，病毒的研究几乎空白，根本不了解在火星地理环境下微生物的生存状况，无法预防可能的微生物泛滥。</description>
    </item>
    
    <item>
      <title>使用docker运行hugo</title>
      <link>https://pub.oribos.cn/web/note/2020092313.html</link>
      <pubDate>Wed, 23 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020092313.html</guid>
      <description>使用docker运行hugo docker run &amp;ndash;rm -t -v $(pwd):/src klakegg/hugo:0.74.3-ext-ubuntu</description>
    </item>
    
    <item>
      <title>0919日记</title>
      <link>https://pub.oribos.cn/web/note/2020091903.html</link>
      <pubDate>Sat, 19 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020091903.html</guid>
      <description>日记 本来打算把dynadot和namecheap上注册的域名设置到dnspod上解析，第一步已经填写好了。打算检测是否正常时，被繁琐的验证搞得恶心，腾讯云需要微信登陆扫码或者qq登陆，安全验证这可以接受。结果跑到dnspod上也需要微信扫描，安全验证。频繁的扫码，验证码让人相当难受。
最终放弃使用腾讯云的域名管理和dnspod的域名解析。
本身对pc端微信登陆每次都需要手机验证感到极度恶心，这腾讯云上的操作需要多次微信验证，安全工具验证，短信验证。唯恐用户尽快完成操作。
捆绑设定 腾讯云的捆绑微信验证，频繁的安全工具验证，腾讯云dns不支持二级域名解析
阿里云的域名管理和dns捆绑，dns解析服务无法删除。如果你使用阿里云的域名管理，就必须在dns解析服务上有一天记录，如果你不使用阿里云的dns解析服务，就频繁提示警示。相当让人难受。
为什么这些公司需要推出繁琐的验证？ 就像信用卡设置了支付密码，交易的风险就可以从银行转移到用户，是用户没有保管好密码。但信用卡本身只需要签名就可以完成支付的，复杂的，繁琐的验证看似安全性高，实则是将安全管理责任由企业的技术支持转嫁给用户，用户操作繁琐就可以避免企业管理安全信息的风险。
如果你需要填写申请，人脸验证，提供20位的密码，数字证书，安全密钥甚至柜台办理才能修改你的信息，那必然是最安全的。繁琐的复杂的手续看上去是为用户负责，实在是转嫁风险。
没有这些繁琐的验证，企业就需要投入大量的资金和技术妥善管理用户安全数据，需要复杂的算法识别是否为用户真实操作。需要用户数据越多，这个成本和风险越小。有些企业一味地向用户索取太多的信息，就使得用户操作相当繁琐，这是方便了企业管理和风险，视用户的使用体验而不顾。微信的登陆需要手机验证就是一个典型例子。</description>
    </item>
    
    <item>
      <title>信息拆分</title>
      <link>https://pub.oribos.cn/web/note/2020091919.html</link>
      <pubDate>Sat, 19 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020091919.html</guid>
      <description>口令 对文件设置访问口令，口令正确才能访问
字典 为了避免信息泄露需要将信息拆分，混淆
作用特殊的文件夹名称: *7*DA-0001A*7* 7DA-0001A7 指某一个名称，该名称为保密内容
7 只是其中一个特殊标记，DA指序号
混淆 *7*DA-0001A*7**7*DA-0001B*7**7*DA-0001A*7* 加密信息被无意义的内容填充，或者多个加密信息，只有特定的一个为真
信息拆分 一个完整的信息被拆分成多个文件，只有这些文件全部集齐才能得到完整信息</description>
    </item>
    
    <item>
      <title>概念</title>
      <link>https://pub.oribos.cn/web/note/2020091913.html</link>
      <pubDate>Sat, 19 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020091913.html</guid>
      <description>概念 概念（Idea；Notion；Concept）是人类在认识过程中，从感性认识上升到理性认识，把所感知的事物的共同本质特点抽象出来，加以概括，是自我认知意识的一种表达，形成概念式思维惯性。在人类所认知的思维体系中最基本的构筑单位 心理学上认为，概念是人脑对客观事物本质的反映，这种反映是以词来标示和记载的。概念是思维活动的结果和产物，同时又是思维活动借以进行的单元。 个人理解 物质是真实存在的，概念是虚拟的，抽象的。 唯物主义和唯心主义的不同就是概念的抽象和物质的真实的差别 </description>
    </item>
    
    <item>
      <title>网站分拆</title>
      <link>https://pub.oribos.cn/web/note/2020091907.html</link>
      <pubDate>Sat, 19 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020091907.html</guid>
      <description>问题 由于网站在coding构建计划推送阿里云oss，同时期望找到到一个可靠的静态托管服务避免不必要的付费。出现以下两个矛盾：
1 使用github pages和vercel时会出现下载国内的内容缓慢(子模块中引用coding的git仓库)。
2 在coding构建计划中使用npm时出现网络错误，自动部署失败。
原因： 在国内使用npm和git速度是相当慢，且经常遇到无法下载而停滞的情况。而国内并没有一个完全有效代替npm和git的工具。这就导致在网站项目里使用npm install时，所使用的hugo-bin需要单独从其他地方下载文件时发生网络错误卡住。
解决方法 在国内项目中使用blog仓库，使用的服务和内容均引用国内仓库地址。去除npm命令和项目依赖。在海外项目使用note仓库，使用的服务和内容引用github，bitbucket仓库地址。使用npm命令。
其他 使用npm可以简化程序代码，使用统一的包管理器。而由于国内糟糕的网络状况。这种方便的形式无法正常使用。且没有一个合适的代替方法。只能添加繁琐复杂的代码，并自行维护。cnpm仅提供基础的缓存，在npm rimraf vendor &amp;amp;&amp;amp; node lib/install运行时依然出现网络问题。</description>
    </item>
    
    <item>
      <title>从零搭建Spring Boot的Hello World</title>
      <link>https://pub.oribos.cn/web/note/2020091801.html</link>
      <pubDate>Fri, 18 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020091801.html</guid>
      <description>从零搭建Spring Boot的Hello World 安装Java开发环境 下载并安装JDK8，下载地址参见Java SE 8u261 。
配置Java环境变量。
a. 打开命令窗口，执行以下命令。
说明：执行命令前，请修改JAVA_HOME参数C:\Program Files\Java\jdk1.8.0_211为您的JDK安装目录。
``` setx JAVA_HOME &amp;quot;C:\Program Files\Java\jdk1.8.0_211&amp;quot; setx path &amp;quot;%path%;%JAVA_HOME%\bin&amp;quot; ``` b.执行以下命令，验证环境变量配置是否成功。 ``` java -version ``` 安装并配置IntelliJ IDEA 此步骤主要介绍使用IntelliJ IDEA安装Spring Assistant插件。
下载并安装IntelliJ IDEA，下载地址参见 IntelliJ IDEA 。
双击运行IntelliJ IDEA。
在IntelliJ IDEA启动界面，依次单击 Configure &amp;gt; Settings 。
单击 Plugins，然后在搜索栏输入spring Assistant。最后单击 Install 安装插件。 单击 Restart IDE。 创建Spring Boot项目 本步骤主要介绍使用Spring Assistant插件来搭建简单的Spring Boot项目。
在IntelliJ IDEA启动界面，单击 Create New Project。
在左侧单击 Spring Assistant，然后单击 Next。
如下图所示，依次配置Group Id、Artifact Id、Packaging等，然后单击 Next。 在左侧单击 Web，然后勾选 Spring Web，最后单击Next。 单击 Finish，等待项目初始化。 完整的目录结构如下。</description>
    </item>
    
    <item>
      <title>本地博客</title>
      <link>https://pub.oribos.cn/web/note/2020091871.html</link>
      <pubDate>Fri, 18 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020091871.html</guid>
      <description>本地环境的博客 由于hexo和hugo等静态工具是按照文件形式存放文章，可以用hexo搭建私有个人博客，仅供个人日常日记和图片整理。不对外访问。</description>
    </item>
    
    <item>
      <title>缘起性空</title>
      <link>https://pub.oribos.cn/web/note/2020091607.html</link>
      <pubDate>Wed, 16 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020091607.html</guid>
      <description>缘起性空 缘起性空是佛教用语。所谓“缘起”，就是说：世间上没有独存性的东西，也没有常住不变的东西，一切都是因缘和合所生起。所谓“性空”，就是说：因缘和合所生起的假有，本性是空的；如果自性不空，则不能有，这就是“真空生妙有”的意义。
缘起论是佛法中的概念。缘起论认为世间上的事事物物(一切有为法)非凭空而有，不能单独存在，必须依靠种种因缘条件和合才能成立，一旦组成的因缘散失，事物本身也就归于乌有，「 诸法因缘生，诸法因缘灭 」的因果定律，称之为「 缘起 」。
定义 要明白佛教的义理，就必须从缘起论开始。缘起，是宇宙人生本来的、必然的、普遍的存在，所谓「若佛出世，若未出世，此法常住，法住法界。」当初佛陀在菩提树下金刚座上，因为现观缘起而成佛。「缘起」并非佛陀所「创造」，佛陀只是「发现」了「缘起」这个自然的法则，再将此宇宙人生的真理对众生宣说、开示。 《中阿含经》云「若此有则彼有，若此生则彼生，若此无则彼无，若此灭则彼灭」，这是对缘起的定义。 缘起，就是说一切诸法都是由于因缘而生起的。简单地说，就是世界上一切事物、现象的生起都是相对的，都是互相存在的关系和条件。如果没有这个关系和条件，任何事物和现象都无法生起。
因、缘、果 缘起论包括因和缘两个部分。因即因素，缘即条件，其中因是主要的，缘是辅助的。因缘聚则生，因缘散则灭。 一切法的生灭既由因缘，那么一切法存在或坏灭也就有因可循、有理可据。凡果必有因，怎样的因便产生怎样的果，因果必相应。 世间一切有为法皆无独立性、恒常性，必须靠「因」、「缘」和合才有「果」。「缘起」法所阐述的，就是因、缘、果的关系，因、缘、果三者是相依相待而存在，没有绝对的独立性。
个人理解 物质是客观存在的，一个存在本身是确定的，不依赖于其他的决定。
比如一个人有许多身份，是学生，是父母，是领导。这些概念和身份只是这个人的客观存在的一些标签，标签可多可少，可加可减。但人的客观存在并没有发生客观上的变化。一个人成为学生和父母，自己的客观存在并没有发生变化。婴儿出生，一个就成为父亲。但这个人可以不用等婴儿出生，认另一个婴儿为“干儿子”他同样成为父亲。另一种婴儿出生之后，这个父亲不知道或者不承认，那么“父亲”这个概念是否影响到这个人的“因缘”？
一杯水，尽管水由氢和氧原子构建，但氢和氧生成水以后，氢和氧就不能决定水的存在了，除非电能来破坏水的结构生成氢气和氧气。
即：关系，缘分，规则只是来描述客观存在的一种形式和概念，不是决定客观存在的行为。
理论是人们人类世界的工具 由于人类的局限性，认识世界并不是全面的和完整的。人类使用的认识工具也必然存在片面，矛盾的。这是由人类本身的局限决定。如果一种方式是全知全能的，那必然不是人类能接受的。视图用有限的理论描述整个世界和解释所有问题是徒劳的。
客观世界的存在必然是确定的，对客观事物的描述也只是赋予的概念，并没有改变客观事物的本质。客观事物的存在不依赖于概念和理论。改变和消灭客观事物必须引起能量和物质的改变。
唯物主义 物质是客观实在的哲学范畴，这种客观实在是人通过感知的，不依赖于我们的感觉而存在，为我们的感觉所复写、摄影、反映。</description>
    </item>
    
    <item>
      <title>heroku</title>
      <link>https://pub.oribos.cn/web/note/2020091521.html</link>
      <pubDate>Tue, 15 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020091521.html</guid>
      <description>Heroku 免費版，竟然也可架設 WordPress heroku 上使用wordpress 免费使用heroku的php空间和数据库
步骤 安装heroku CLI 参考地址The Heroku CLI
npm install -g heroku 由于在服务器上无法打开浏览器，可以使用账户密码登录，登录命令如下：
heroku login -i 创建wordpress项目 创建一个项目 example
使用一个add-ons，选择JawsDB MySQ
获得数据库的地址和用户名
下载wordpress
通过heroku cli 部署项目
$ heroku git:clone -a example $ cd example 将wordpress的文件复制到example文件夹下
修改wp-config.php里的数据库连接地址和用户名密码
部署到heroku $ git add . $ git commit -am &amp;#34;make it better&amp;#34; $ git push heroku master heroku cli将项目部署到heroku
完成 添加域名解析
访问网址</description>
    </item>
    
    <item>
      <title>learn-termux</title>
      <link>https://pub.oribos.cn/web/note/2020091511.html</link>
      <pubDate>Tue, 15 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020091511.html</guid>
      <description>learn-termux learn-termux 前言 第一章 一切歧途，自此而始 ## 1.1 termux的下载与安装 #### 1.2 颜值是第一生产力 #### 1.3 简单操作 1.4 简单易懂的ZSH配置方法 第二章 写作与同步 2.1 vim 和 emacs 2.2 git和github 2.3 geeknote 第三章 进阶玩法 RE:从零开始的 termux 学习生活
前言 Termux 是一款强大的安卓终端模拟 APP，无需 root 直接启动，自动安装最小化 linux 系统，使用 APT 作为包管理工具并提供各种各样的软件包。 高级终端 Termux 组合了强大的终端模拟和拓展 Linux 包收集支持。
• 享受bash 和 zsh。
• 使用nano 和 vim编辑文件。
• 通过ssh访问服务器。
• 使用gcc和clang编译代码。
• 使用python控制台来作为口袋计算器。
• 使用git 和 subversion检查项目。
• 使用frotz运行基于文本的游戏。
官方网站
这个应用真的很有意思，不过对于新手而言不太友好。比如说我，可以说是完全从零开始学习相关的知识。在这里就把我折腾这个应用的经历写一写，做一个学习笔记吧。
目前我的水平是能够简单地使用这个软件，并使用它做一些简单的操作。比如说我的这篇文章就完全是在termux里完成、修改和上传的。那么我以一个萌新的身份来讲讲 termux 的一些基础使用以及用 termux 写文章的方法。顺带一提我现在对这个应用的理解依然不够深，之后还会不断地进行补充和修改。</description>
    </item>
    
    <item>
      <title>hexo自动部署</title>
      <link>https://pub.oribos.cn/web/note/2020091431.html</link>
      <pubDate>Mon, 14 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020091431.html</guid>
      <description>测试 hexo自动部署代码
name: github pages on: push: branches: - master # Set a branch to deploy jobs: deploy: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v2 with: submodules: recursive # Fetch the Docsy theme fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Node uses: actions/setup-node@v1 with: node-version: &amp;#39;12.x&amp;#39; - name: Cache dependencies uses: actions/cache@v1 with: path: ~/.npm key: ${{ runner.os }}-node-${{ hashFiles(&amp;#39;**/package-lock.json&amp;#39;) }} restore-keys: | ${{ runner.os }}-node- - run: npm ci - run: hexo g - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.</description>
    </item>
    
    <item>
      <title>hugo自动部署</title>
      <link>https://pub.oribos.cn/web/note/2020091417.html</link>
      <pubDate>Mon, 14 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020091417.html</guid>
      <description>.travis.yml上的配置文件 language: go # Specify which branches to build using a safelist # 分支白名单限制: 只有hugo分支的提交才会触发构建 branches: only: - master # install: # # 安装最新的hugo # - go get github.com/spf13/hugo install: - uname -a - wget https://github.com/gohugoio/hugo/releases/download/v0.74.3/hugo_extended_0.74.3_Linux-64bit.deb - sudo dpkg -i hugo*.deb - hugo version - ls - pwd script: # 运行hugo命令 - hugo deploy: provider: pages # 重要，指定这是一份github pages的部署配置 skip-cleanup: true # 重要，不能省略 local-dir: public # 静态站点文件所在目录 target-branch: gh-pages # 要将静态站点文件发布到哪个分支 github-token: $GH_TOKEN # 重要，$GITHUB_TOKEN是变量，需要在GitHub上申请、再到配置到Travis #fqdn: blog.</description>
    </item>
    
    <item>
      <title>资源分离</title>
      <link>https://pub.oribos.cn/web/note/2020091303.html</link>
      <pubDate>Sun, 13 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020091303.html</guid>
      <description>仅向github推送源码 许多人使用hexo,hugo等静态页面生成工具,最会将生成的public文件或者dist推送到github上,属于较落后的方式.
将源码推送到github,听过github actions或者travis ci或其他持续集成方式,自动运行源码文件,将public生成并自动发布到gh-pages分支上是推荐的方式.也可以使用netlify,vercel,aws amplify等静态托管服务,自动部署静态页面.</description>
    </item>
    
    <item>
      <title>github</title>
      <link>https://pub.oribos.cn/web/note/2020090807.html</link>
      <pubDate>Tue, 08 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020090807.html</guid>
      <description>github 部署在github上的构建计划配置代码
name: Build Hugo on: push: branches: [ hugo ] jobs: build: name: Build runs-on: ubuntu-latest steps: - name: Check out code uses: actions/checkout@master - name: upload sub run: | git submodule init git submodule update - name: Build Hugo uses: lowply/build-hugo@v0.74.1 - name: Deploy to GitHub Pages if: success() uses: crazy-max/ghaction-github-pages@v2 with: target_branch: gh-pages build_dir: deploy/public env: GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} </description>
    </item>
    
    <item>
      <title>Travis CI</title>
      <link>https://pub.oribos.cn/web/note/2020090803.html</link>
      <pubDate>Tue, 08 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020090803.html</guid>
      <description>Travis CI language: go # Specify which branches to build using a safelist # 分支白名单限制: 只有hugo分支的提交才会触发构建 branches: only: - hugo # install: # # 安装最新的hugo # - go get github.com/spf13/hugo install: - uname -a - wget https://github.com/gohugoio/hugo/releases/download/v0.74.3/hugo_extended_0.74.3_Linux-64bit.deb - sudo dpkg -i hugo*.deb - hugo version - ls - pwd script: # 运行hugo命令 - hugo deploy: provider: pages # 重要，指定这是一份github pages的部署配置 skip-cleanup: true # 重要，不能省略 local-dir: deploy/public # 静态站点文件所在目录 target-branch: gh-pages # 要将静态站点文件发布到哪个分支 github-token: $GH_TOKEN # 重要，$GITHUB_TOKEN是变量，需要在GitHub上申请、再到配置到Travis #fqdn: blog.</description>
    </item>
    
    <item>
      <title>360安全卫士</title>
      <link>https://pub.oribos.cn/web/note/2020090773.html</link>
      <pubDate>Mon, 07 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020090773.html</guid>
      <description>臃肿的“安全软件” 用360就是为了在电脑运行出现问题时扫描木马病毒和恶意软件。结果360自己做的臃肿庞大，安装程序一直提示即将完成，运行程序需要安装各类插件，开始扫描半天一直进行所谓的优化修复，稍有些组件不正常就无法运行。
自身无法运行，真正的木马病毒不能第一时间清除，只是在不同安装全家桶，优化清理。
有问题的不能第一时间处理。而是不停的进行常规扫描
为什么使用360安全卫士 尽管360安全卫士臃肿缓慢，但必要的时候还是需要这种可以快速扫描隐藏的木马，恶意应用的安全软件。通过360安全卫士，清理掉这些较难清理的应用，然后再将360安全卫士卸载即可。
由于360不断推出插件，全家桶，不建议长期使用360安全卫士。</description>
    </item>
    
    <item>
      <title>0906归纳</title>
      <link>https://pub.oribos.cn/web/note/2020090673.html</link>
      <pubDate>Sun, 06 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020090673.html</guid>
      <description>阴谋论 相信阴谋论，怀疑意味着能力欠缺。不确定地球是不是圆的，不确定美国有没有登月，不知道苏美尔文明来源，因为这些阴谋论者没能力飞向太空，穿越回古代。
对于远古时期，史前时期，遥远的地方，漫长的时间这些超出人类控制的内容，既要有所怀疑又需要有所相信。无论是否相信是陨石造成的恐龙灭绝，恐龙已经消失不见，没有能力挽回。古代文明已经消散，准确找到何年何月并没有实际意义。直立人智人的联系，人类起源无论是否完全研究出来，对当前的人类并没有多大影响。人类不缺真相。
知识阶级 富有阶层可以有时间学习艺术，哲学，文化，考古，经济，政治。而穷人只能学赚钱，打工，出力，技能。并非某学科“无用“而是是否能为自己提供有“有价值” “有意义”的成果。
设身处地 设身处地，换位思考，为他人着想，听上去很有道理。但人是有局限性的，根本不能完全互换位置，不同的环境不同的条件造就了不同的行为和决定。
人不轻身经历，身入其境某些事情，根本理解不了很多东西。所以要多万卷书，行万里路。
神明 敬神而不信神
神意味着未知的，远超自身理解的东西。对待未知我们要保持敬畏，恐惧。但不能受此影响。因为接触不到，认识不到才是未知，一旦接触到，看到听到那他就是必然的存在，就不再是未知。
未知就是不可知，知道了就不是不可知了，就应该研究知道的里面的不可知情况。神明最好就是永远不为人知，因为一旦神明现身，那就要思考，谁创造了“这个“神明？（神明未现身时“这个“就无法用来描述）
生命 无论人类是不是从低级生命演化而来，宇宙生命体必然是从无到有，由简到繁。一个固定的环境却存在各式各样生命体，这必然不是一蹴而就的。加入将整套地球生态采用一定样本完全丢到一个固定环境的星球，那么，必然会存在大型动植物或特殊生命体因为环境变化而灭绝。这是正常的，把南极的企鹅放到非洲必然会影响生存，同理把非洲的大象丢到南极也如此。也就是说，一个固定环境下，适应性强的物种生存和繁衍下来。
这意味着，假如上帝创造了世界，那上帝必然是创造了简单的结构，这些简单结构慢慢发展，演化，逐渐变成复杂的。如果上帝直接将全套现有的生态系统扔到世间。那么最开始必然存在大量不适应的情况导致大范围灭绝。</description>
    </item>
    
    <item>
      <title>神秘代码</title>
      <link>https://pub.oribos.cn/web/note/2020090611.html</link>
      <pubDate>Sun, 06 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020090611.html</guid>
      <description>神秘代码 阿阿 阿巴阿阿 巴巴巴 阿阿阿巴 阿 巴阿巴阿 阿阿阿阿 阿阿 巴阿 阿巴
有人常识将它翻译成以下文字↓
.. .-.. &amp;mdash; &amp;hellip;- . -.-. &amp;hellip;. .. -. .-</description>
    </item>
    
    <item>
      <title>hugo主题配置</title>
      <link>https://pub.oribos.cn/web/note/2020090343.html</link>
      <pubDate>Thu, 03 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020090343.html</guid>
      <description>安装基础程序 确保以下应用安装完毕： git
hugo 扩展版最佳
新建项目 使用hugo new site example example为自己的项目名称
进入项目目录cd ecample可以看到以下文件 进入themes目录，执行git clone https://github.com/nmasse-itix/photo-stream.git
将主题下载下来
这里可以通过使用git submodule 方式引入
将主题内自带的exampleSite 文件夹内文件复制到根目录
cp themes/photo-stream/exampleSite/config.toml . 配置文件 在项目根目录下content文件夹下创建第一个项目目录，例如&amp;quot;first&amp;quot;
并在first文件夹下创建一个空文件index.md
index.md内容为以下内容
--- title: &amp;#34;beauty&amp;#34; date: 2020-09-03T08:22:38+08:00 # By default, photos are sorted by filename sort_by: Name # But you can sort instead by EXIF date if you prefer # sort_by: Exif.Date resources: # # You can set the album cover image by setting the param &amp;#39;cover: true&amp;#39; # on a photo.</description>
    </item>
    
    <item>
      <title>photo代码</title>
      <link>https://pub.oribos.cn/web/note/2020090301.html</link>
      <pubDate>Thu, 03 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020090301.html</guid>
      <description>photo pipeline { agent any stages { stage(&amp;lsquo;检出&amp;rsquo;) { steps { checkout([ $class: &amp;lsquo;GitSCM&amp;rsquo;, branches: [[name: env.GIT_BUILD_REF]], userRemoteConfigs: [[ url: env.GIT_REPO_URL, credentialsId: env.CREDENTIALS_ID ]]]) } } stage(&amp;lsquo;改写ssh&amp;rsquo;) { steps { sh &amp;rsquo;ls -a&amp;rsquo; sh &amp;lsquo;mkdir -p ~/.ssh&amp;rsquo; withCredentials([ sshUserPrivateKey(credentialsId:&amp;lsquo;79eea4d2-1079-482a-bb35-0c9963537257&amp;rsquo;,keyFileVariable:&amp;lsquo;SSH&amp;rsquo;) ]) { sh &amp;lsquo;cat ${SSH} &amp;gt; ~/.ssh/id_rsa&amp;rsquo; }
sh &#39;chmod 600 ~/.ssh/id_rsa&#39; } } stage(&#39;更新子模块&#39;) { steps { sh &#39;git submodule init&#39; sh &#39;git submodule update&#39; sh &#39;git submodule foreach \&#39;git pull origin master\&#39;&#39; } } stage(&#39;hugo&#39;) { steps { sh &#39;git clone git@e.</description>
    </item>
    
    <item>
      <title>进一步完善</title>
      <link>https://pub.oribos.cn/web/note/2020090373.html</link>
      <pubDate>Thu, 03 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020090373.html</guid>
      <description>进一步完善 通过研究前后端分离项目，转而想进一步将hugo生成的博客静态页面链接必要的后端服务。需要在页面上增加对前端框架的支持以运行同后端服务api的连接。
为什么非要配置前后端分离？ 在我看来，以wordpress为代表的服务器渲染式网站，需要复杂服务器环境，消耗大量服务器性能，框架固定保守等等问题，象征着盲目和落后。有些流行的php架构主体已经十多年没有更新，大量新手被忽悠着选择浪费性能的方式制作简单的页面。
前后端不分离以为着保守，封闭，落后
进一步使用持续集成 服务器使用的hugo vue 和其他应用，将全部提交到持续环境上运行，coding构建计划，github actions 或者vercel netlify自动部署。
进一步的持续集成，hugo项目将不再在本地和服务器上保留和推送生成文件。pages所需要的静态页面由该环境自动生成。
鉴于本地运行应用多且复杂，针对前端环境特意去配置多种环境是没有必要的，将前端环境打包部署运行在持续集成中，运行在容器里，脱离复杂的个人电脑。
文件备份 以nas git oss 等全方面文件共享和备份。
https 博客，资源全面使用https协议，</description>
    </item>
    
    <item>
      <title>先写代码后补充内容</title>
      <link>https://pub.oribos.cn/tech/develop/2020/2020-09-01-%E5%85%88%E5%86%99%E4%BB%A3%E7%A0%81%E5%90%8E%E8%A1%A5%E5%85%85%E5%86%85%E5%AE%B9/</link>
      <pubDate>Tue, 01 Sep 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/tech/develop/2020/2020-09-01-%E5%85%88%E5%86%99%E4%BB%A3%E7%A0%81%E5%90%8E%E8%A1%A5%E5%85%85%E5%86%85%E5%AE%B9/</guid>
      <description>先写代码后补充内容 类似如下的代码
&amp;lt;div class=&amp;#34;text-center&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;div1&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; $(&amp;#34;#div1&amp;#34;).load(&amp;#34;https://base.oribos.city/function/html/1002.html&amp;#34;); &amp;lt;/script&amp;gt; &amp;lt;/div&amp;gt; 作用 先将基础代码构建到页面上，嵌入api，html等可以随时变动的内容。这样主页面保持不变情况是，可以灵活变动页面内容。
本质上跟前后端分离，css文件引用原理一样。</description>
    </item>
    
    <item>
      <title>blog代码</title>
      <link>https://pub.oribos.cn/web/note/2020083103.html</link>
      <pubDate>Mon, 31 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020083103.html</guid>
      <description>blog pipeline { agent any stages { stage(&amp;#39;检出&amp;#39;) { steps { checkout([ $class: &amp;#39;GitSCM&amp;#39;, branches: [[name: env.GIT_BUILD_REF]], userRemoteConfigs: [[ url: env.GIT_REPO_URL, credentialsId: env.CREDENTIALS_ID ]]]) } } stage(&amp;#39;改写ssh&amp;#39;) { steps { sh &amp;#39;ls -a&amp;#39; sh &amp;#39;mkdir -p ~/.ssh&amp;#39; withCredentials([ sshUserPrivateKey(credentialsId:&amp;#39;15a357be-78af-4353-ae31-aa6d14fa6c0d&amp;#39;,keyFileVariable:&amp;#39;SSH&amp;#39;) ]) { sh &amp;#39;cat ${SSH} &amp;gt; ~/.ssh/id_rsa&amp;#39; } sh &amp;#39;chmod 600 ~/.ssh/id_rsa&amp;#39; } } stage(&amp;#39;更新子模块&amp;#39;) { steps { sh &amp;#39;git submodule init&amp;#39; sh &amp;#39;git submodule update&amp;#39; sh &amp;#39;git submodule foreach \&amp;#39;git pull origin master\&amp;#39;&amp;#39; } } stage(&amp;#39;npm&amp;#39;) { steps { sh &amp;#39;npm init -y&amp;#39; sh &amp;#39;npm install -g cnpm --registry=https://registry.</description>
    </item>
    
    <item>
      <title>index代码</title>
      <link>https://pub.oribos.cn/web/note/2020083107.html</link>
      <pubDate>Mon, 31 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020083107.html</guid>
      <description>index 部署在www.efs.app上的构建计划配置代码
pipeline { agent any stages { stage(&amp;#39;检出&amp;#39;) { steps { checkout([ $class: &amp;#39;GitSCM&amp;#39;, branches: [[name: env.GIT_BUILD_REF]], userRemoteConfigs: [[ url: env.GIT_REPO_URL, credentialsId: env.CREDENTIALS_ID ]]]) } } stage(&amp;#39;改写ssh&amp;#39;) { steps { sh &amp;#39;ls -a&amp;#39; sh &amp;#39;mkdir -p ~/.ssh&amp;#39; withCredentials([ sshUserPrivateKey(credentialsId:&amp;#39;15a357be-78af-4353-ae31-aa6d14fa6c0d&amp;#39;,keyFileVariable:&amp;#39;SSH&amp;#39;) ]) { sh &amp;#39;cat ${SSH} &amp;gt; ~/.ssh/id_rsa&amp;#39; } sh &amp;#39;chmod 600 ~/.ssh/id_rsa&amp;#39; } } stage(&amp;#39;更新子模块&amp;#39;) { steps { sh &amp;#39;git submodule init&amp;#39; sh &amp;#39;git submodule update&amp;#39; sh &amp;#39;git submodule foreach \&amp;#39;git pull origin master\&amp;#39;&amp;#39; } } stage(&amp;#39;npm&amp;#39;) { steps { sh &amp;#39;npm init -y&amp;#39; sh &amp;#39;npm install -g cnpm --registry=https://registry.</description>
    </item>
    
    <item>
      <title>分享呆萌头像</title>
      <link>https://pub.oribos.cn/web/note/2020083113.html</link>
      <pubDate>Mon, 31 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020083113.html</guid>
      <description> https://twitter.com/lenz9644?lang=ga
分享呆萌头像 </description>
    </item>
    
    <item>
      <title>有限控制</title>
      <link>https://pub.oribos.cn/web/note/2020083003.html</link>
      <pubDate>Sun, 30 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020083003.html</guid>
      <description>减少核心处理量 搁置项目 仅对未完工的项目,搁置进一步发展,并不对历史进度进行彻底清空
后续可能使用搁置项目
放弃对鸡肋的控制力 次要项目 使用引用,导入,克隆方式对别项目进行引用.尽可能的不去修改所引用项目的内容
对引用项目的修改使用另外的代码和配置覆盖其效果,而不是对引用项目直接修改
尽管引用的项目控制权在其作者手里,自己必须拥有一份相对完整的代码拷贝</description>
    </item>
    
    <item>
      <title>此消彼长</title>
      <link>https://pub.oribos.cn/web/note/2020083171.html</link>
      <pubDate>Sun, 30 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020083171.html</guid>
      <description>感悟 有的人看到红色划一道红色，看到蓝色划一道蓝色，看的多了画出来是五彩缤纷。有的人看到红色划一道红色，看到蓝色就抹掉红色重新划一道蓝色，周而复始，结果画出来一团黑糊糊一片。
一个部族，需要保守的指挥和激进的指挥，至于决策者才用何种方式那是决策者自己的利益选择。不应彻底否定保守或者激进。缺乏多样的可能性和势力均衡，组织决策容易走向极端。
不同态度的之间的此消彼长是必要的，但不应坚持把对方赶尽杀绝。因为，如果对方能确定可观的支持，那么必然存在滋生其生长的客观原因。不去关注其根本原因，必然无法治本。极端的打压和剿灭必然产生相当大的成本。
个人亵渎神明，神明没有表现明显的惩罚，反倒是人类自己会去攻击亵渎者。就像别人侵害了自己利益一样，对神明和信仰的维护本质上是维护自身利益，跟神明和信仰本身并没有相关性。因为，神明和信仰不会因为别人的质疑和反对就有所改变。那么，改变的什么？是信徒和其他人自身的概念和认知。</description>
    </item>
    
    <item>
      <title>Cloudflare Workers 发起 http 请求</title>
      <link>https://pub.oribos.cn/web/note/2020082801.html</link>
      <pubDate>Fri, 28 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020082801.html</guid>
      <description>来自 ZeroDream 官方博客
Cloudflare Workers 发起 http 请求 如果想要在 Cloudflare Workers 中发起 http 请求，则需要用到 Fetch API。
注意：Fetch API 仅能在 Request 中使用。
首先我们来看看 fetch 的基本使用方法：
const response = await fetch(url, init); 其中 response 是返回数据的储存变量，url 是需要请求的地址，init 是请求的参数设定（可选的）。
init 有以下几个选项：
method：请求的方法，例如 GET 或者 POST headers：请求时需要发送的 headers，它是一个对象 body：请求时需要发送的内容，注意，这个选项不能在 GET / HEAD 方法下使用 redirect：重定向的处理方式，可选值：follow 跟随跳转，error 抛出错误，manual 手动处理 await 在异步函数内使用时必须要添加。 我们得到了 response 后，就可以开始对其进行处理，如果要获取返回的内容，可以这样写：
const data = await response.text(); 然后你就可以对 data 变量进行任何处理了。
下面是一段演示代码，用于获取访问者 IP 的地理位置：
addEventListener(&amp;#39;fetch&amp;#39;, event =&amp;gt; { event.</description>
    </item>
    
    <item>
      <title>web端被打压</title>
      <link>https://pub.oribos.cn/web/note/2020082811.html</link>
      <pubDate>Fri, 28 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020082811.html</guid>
      <description>查看更多内容需要下载APP 下载APP以使用更多功能 付费下载且下载需要使用APP 不提供web端访问入口 web端内容陈旧 </description>
    </item>
    
    <item>
      <title>世界观</title>
      <link>https://pub.oribos.cn/web/note/2020082891.html</link>
      <pubDate>Fri, 28 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020082891.html</guid>
      <description>维基百科
世界观 世界观（德语：Weltanschauung）意思是“着眼世界之上”。
这是德国知识论中所使用的词汇，指的是一个“广泛世界的观念”。世界观指涉的是一种人类知觉的基础架构，透过它，个体可以理解这个世界并且与它互动。
世界观和认知哲学 世界观是认知哲学和生产科学中的重要概念。这个词表达的是人所拥有的广泛世界的认知，而这源于他们对于这个世界的独特经验，或者更狭义地说，是民族经过长久时间以来对于世界的诠释。人的语言即反映了他们的世界观，这个意义由一些语言学的层次上展开，语句上的结构、无法翻译的内涵和它的外延。
一个以世界观绘成的世界地图将会跨越政治领域的障碍，因为世界观除了是人类政治活动的产物之外，同时也是共同人类经验、地理区域、自然气候条件、可用的经济资源、社会文化系统和语言系族的产物。人口遗传学者路易吉·路卡·卡瓦利-斯福扎便指出了人类基于血缘和语言而开展出来的共同文明进化的理论。
世界观的影响 此一名词指称对于世界作为人类实作以及人类存有的中介性，即一个综合意见的集合。世界观作为框架影响人类的知觉和经验，以及社会的许多层次：知识、政治、经济、宗教、文化、科学和道德。
举例来说，对于因果关系的理解的世界观有各式各样的面貌，它可能是单向的，或循环的，或是螺旋性的。这样一个认知结构便反映了对于世界的不同系统性理解，在中文中，我们指称这样的世界观为“世界史观”。一个单向的世界史观会是一种一神教的观点，认为世界历史只有一种方向，世界有究极的初始状态，并且将会在某个时间点结束，如同基督教所说“我是开始亦是终结”，回教亦有相同观点。而循环史观则认为世界的状态是系统性而不断循环的，如同四季不断更迭，例如祆教、波斯拜日教和印度教。
对于因果关系的世界观理解不只影响宗教传统，还有人类思想的其他层面，例如历史的目的、政治和经济理论、还有许多其他系统性思想：民主、独裁、无政府主义、资本主义、社会主义、共产主义。
有了线型史观和非线型史观的不同理解，便会产生在科学思考上各具特征的抽象机构。举例来说，对于世俗普遍行动和事件的不同理解，便会产生决定论和自由意志的种种对立。自由意志的世界观认为，世界的原则是简单的法则，他们总是维持稳定不变，在科学上它们称作经验主义；相反地，决定论的世界观认为世界的原则是由动态的系统组成，在科学方法上称作理性主义。
某些形式的哲学自然主义和唯物论反对实体会因为本身的限度而无法从事自然科学的命题，他们认为科学方法是最可信赖、建立模型以理解世界的最佳方法。</description>
    </item>
    
    <item>
      <title>大公司的恶行</title>
      <link>https://pub.oribos.cn/web/note/2020082831.html</link>
      <pubDate>Fri, 28 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020082831.html</guid>
      <description>大公司的恶行 营销策略 价格歧视 免费试用 先给一个低价的或免费的诱惑让用户试用，但用户通过试用养成习惯后形成依赖，这是取消试用。用户不得不高价续费。
0元套餐，几个月后失效，继续使用需要续费。0元服务器，如果你在服务器上部署项目，试用结束后，你就会因为项目的持续运行承担高额服务费。
首年免费，首年打折。续费高昂，打折活动仅限新用户。
消极服务 售后服务程序自动答复，自动答复权限很低，无法解决复杂问题。
售后服务权限低，无法解决任何问题，只会机械式的解释。
事例 【#因微信封号坠亡男子哥哥发声#：确实太傻，腾讯人工客服不作为，一条人命15万太少了】因微信被封号，一男子从深圳腾讯用户接待中心跳楼身亡。8月27日，腾讯官方两次回应称，男子从腾讯公司坠亡说法不实，系租用大厦，公安确认属于自杀。坠楼者哥哥称，弟弟确实太傻太极端。他是想知道封号原因，腾讯人工客服不作为造成悲剧。15万元是街道办给的人道主义安慰现金，说是和腾讯无关，一条人命15万我们觉得太少了。</description>
    </item>
    
    <item>
      <title>微信令人讨厌之处</title>
      <link>https://pub.oribos.cn/web/note/2020082817.html</link>
      <pubDate>Fri, 28 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020082817.html</guid>
      <description>刚注册的账号无法登陆 此账号是新注册的，不应该是长期不登陆的睡眠账号，出现这种情况完全是腾讯为了限制用户故意设置的障碍。
辅助认证的条件繁杂，苛刻 不知道什么情况就无法验证 这种情况要么是 之前给别人辅助认证过，但三个月内并没有什么认证。更别说是一年时间内，记不清到底有没有给别人辅助认证了。
纵然一年内有跟别人辅助认证，也不可能在这个账号上进行三次。
结论 结论是 微信：你也配登微信？</description>
    </item>
    
    <item>
      <title>方法论</title>
      <link>https://pub.oribos.cn/web/pro/test/2020082837.html</link>
      <pubDate>Fri, 28 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/pro/test/2020082837.html</guid>
      <description>维基百科
方法论 方法学（又称为方法论），是哲学用语，指的是研究如何处理问题的一个哲学分支。南宋哲学家朱熹的格物致知论是方法论的典型例子。法国哲学家笛卡儿在1637年出版的哲学论著《谈谈方法》，被认为是有关方法论的重用著作，影响了西方主流学界的思维方式、思想观念、和科学方法的发展，对西方近代科学的快速发展起了相当大的促进作用。
定义 一门学问采用的方法、规则与公理；
一种特定的做法或一套做法；
在某种知识的领域上，对探索知识的原则或做法而作之分析（梅里厄姆-韦伯斯特词典）。
方法学意味着的通用概念就是：在某一门学问或所要探索的知识领域上，对所使用之个别方法加以整合、比较探讨与批判。
大多数科学学问都有它们各自特定的研究方法；方法学的任务，在于提出一系列能够支持这些方法之准确性和有效适用的原理。换言之，方法学在于证明方法的有效或无效，并提出支持采取或不支持采取该方法的理由。
在软件工程与专案管理中，方法学通常是指一系列编撰好的建议方法，有时还包括训练材料、正规教育性程序、工作表和图像工具。与其被称为方法学，这些概念比较适合叫作方法。
方法论的发展史 古中国 参见：格物致知
公元前600年：孔子提出了正名的要求，并提出“能近取譬”和“举一反三”等类推方法。
公元前350年：墨子在《墨经》中阐述了力的概念和力矩原理、杠杆原理，也提出了“粒子论”的雏形，指出“端”是不占有空间的，是物体不可再细分的最小单位。
公元前300年：公孙龙通过对“白马非马”这一命题的具体分析，提出了“唯乎其彼此焉”的正名原则。
公元前250年：韩非提出了“矛盾”概念，揭示了矛盾律。
公元前250年：荀子系统化地整理了名家和墨家对儒家正名思想的逻辑学理论。
公元86年：王充在反对宗教神学的斗争中，著作了《论衡》，强调要通过论证而达到辨真伪、证是非、驳虚假的目的。
公元240年：王弼为代表的“言不尽意”论和欧阳建的“言尽意”论之间的辩论。
公元1000年：程朱学派把“理”作为思想本体，发展出由一理推知诸理的认识论观点，是北宋理学的主要内容。
古典西方主流学派 在1960年代以前，西方科学研究的方法，从机械到人体解剖的研究，基本是按照笛卡儿的《谈谈方法》进行的，对西方近代科学的飞速发展，起了相当大的促进作用。
笛卡儿在《谈谈方法》中指出，研究问题的方法分四个步骤：
永远不接受任何我自己不清楚的真理，就是说要尽量避免鲁莽和偏见，只能是根据自己的判断非常清楚和确定，没有任何值得怀疑的地方的真理。就是说只要没有经过自己切身体会的问题， 不管有什么权威的结论，都可以怀疑。这就是著名的“怀疑一切”理论。例如亚里士多德曾下结论说，女人比男人少两颗牙齿。但事实并非如此。
可以将要研究的复杂问题，尽量分解为多个比较简单的小问题，一个一个地分开解决。
将这些小问题从简单到复杂排列，先从容易解决的问题着手。
将所有问题解决后，再综合起来检验，看是否完全，是否将问题彻底解决了。
现代复杂科学的出现 笛卡儿的方法论有其一定的缺陷，如人体功能，只是各部位机械的综合，而对其互相之间的作用则研究不透。直到阿波罗1号登月工程的出现，美国科学家才发现，有的复杂问题无法分解，必须以复杂的方法来对待，因此导致系统工程的出现，方法论的方法才第一次被综合性的方法所取代。系统工程的出现对许多大规模的西方传统科学起了相当大的促进作用，如环境科学，气象学，生物学，人工智能等等。</description>
    </item>
    
    <item>
      <title>方法论</title>
      <link>https://pub.oribos.cn/web/note/2020082897.html</link>
      <pubDate>Fri, 28 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020082897.html</guid>
      <description>维基百科
方法论 方法学（又称为方法论），是哲学用语，指的是研究如何处理问题的一个哲学分支。南宋哲学家朱熹的格物致知论是方法论的典型例子。法国哲学家笛卡儿在1637年出版的哲学论著《谈谈方法》，被认为是有关方法论的重用著作，影响了西方主流学界的思维方式、思想观念、和科学方法的发展，对西方近代科学的快速发展起了相当大的促进作用。
定义 一门学问采用的方法、规则与公理；
一种特定的做法或一套做法；
在某种知识的领域上，对探索知识的原则或做法而作之分析（梅里厄姆-韦伯斯特词典）。
方法学意味着的通用概念就是：在某一门学问或所要探索的知识领域上，对所使用之个别方法加以整合、比较探讨与批判。
大多数科学学问都有它们各自特定的研究方法；方法学的任务，在于提出一系列能够支持这些方法之准确性和有效适用的原理。换言之，方法学在于证明方法的有效或无效，并提出支持采取或不支持采取该方法的理由。
在软件工程与专案管理中，方法学通常是指一系列编撰好的建议方法，有时还包括训练材料、正规教育性程序、工作表和图像工具。与其被称为方法学，这些概念比较适合叫作方法。
方法论的发展史 古中国 参见：格物致知
公元前600年：孔子提出了正名的要求，并提出“能近取譬”和“举一反三”等类推方法。
公元前350年：墨子在《墨经》中阐述了力的概念和力矩原理、杠杆原理，也提出了“粒子论”的雏形，指出“端”是不占有空间的，是物体不可再细分的最小单位。
公元前300年：公孙龙通过对“白马非马”这一命题的具体分析，提出了“唯乎其彼此焉”的正名原则。
公元前250年：韩非提出了“矛盾”概念，揭示了矛盾律。
公元前250年：荀子系统化地整理了名家和墨家对儒家正名思想的逻辑学理论。
公元86年：王充在反对宗教神学的斗争中，著作了《论衡》，强调要通过论证而达到辨真伪、证是非、驳虚假的目的。
公元240年：王弼为代表的“言不尽意”论和欧阳建的“言尽意”论之间的辩论。
公元1000年：程朱学派把“理”作为思想本体，发展出由一理推知诸理的认识论观点，是北宋理学的主要内容。
古典西方主流学派 在1960年代以前，西方科学研究的方法，从机械到人体解剖的研究，基本是按照笛卡儿的《谈谈方法》进行的，对西方近代科学的飞速发展，起了相当大的促进作用。
笛卡儿在《谈谈方法》中指出，研究问题的方法分四个步骤：
永远不接受任何我自己不清楚的真理，就是说要尽量避免鲁莽和偏见，只能是根据自己的判断非常清楚和确定，没有任何值得怀疑的地方的真理。就是说只要没有经过自己切身体会的问题， 不管有什么权威的结论，都可以怀疑。这就是著名的“怀疑一切”理论。例如亚里士多德曾下结论说，女人比男人少两颗牙齿。但事实并非如此。
可以将要研究的复杂问题，尽量分解为多个比较简单的小问题，一个一个地分开解决。
将这些小问题从简单到复杂排列，先从容易解决的问题着手。
将所有问题解决后，再综合起来检验，看是否完全，是否将问题彻底解决了。
现代复杂科学的出现 笛卡儿的方法论有其一定的缺陷，如人体功能，只是各部位机械的综合，而对其互相之间的作用则研究不透。直到阿波罗1号登月工程的出现，美国科学家才发现，有的复杂问题无法分解，必须以复杂的方法来对待，因此导致系统工程的出现，方法论的方法才第一次被综合性的方法所取代。系统工程的出现对许多大规模的西方传统科学起了相当大的促进作用，如环境科学，气象学，生物学，人工智能等等。</description>
    </item>
    
    <item>
      <title>字母解释法</title>
      <link>https://pub.oribos.cn/web/note/2020082401.html</link>
      <pubDate>Mon, 24 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020082401.html</guid>
      <description>字母解释法 业余无线电字母解释法在业余无线电通讯中广泛使用，解决在无线电通讯中经常会碰到的声音无法清晰辨识，国际民用航空组织（ICAO）的通讯用语也普遍使用类似的解释法，同时在日常语言交流中也采用此方法。如&amp;quot;A&amp;quot;读Alpha、&amp;ldquo;C”读Charlie 、&amp;ldquo;R&amp;quot;读Romeo 、&amp;ldquo;J&amp;quot;读Juliet 等26个英文字母都有常用的解释法。
对照表 字母 解释 读音 中文解释 A ALFA [&amp;rsquo;ælfə] 阿尔法（第一个希腊字母） B BRAVO [&amp;lsquo;brɑ&amp;rsquo;vo] （喝彩声）好啊，妙啊 C CHARLIE [&amp;rsquo;tʃɑrlɪ] 人名（查理） D DELTA [&amp;lsquo;dɛltə] 德尔塔（第四个希腊字母） E ECHO [&amp;lsquo;ɛko] 回声 F FOXTROT [&amp;lsquo;fɑks,trɑt] 狐步舞 G GOLF [gɑlf] 高尔夫 H HOTEL [hoˈtɛl] 酒店 I INDIA [ˈɪndɪə] 印度 J JULIET [&amp;lsquo;dʒuljət] 朱丽叶 K KILO [&amp;lsquo;kilo] 千 L LIMA [&amp;rsquo;laɪmə] 利马（秘鲁首都） M MIKE [maɪk] 人名（麦克） N NOVEMBER [no&amp;rsquo;vɛmbɚ] 十一月 O OSCAR [&amp;lsquo;ɔskɚ] 奥斯卡 P PAPA [&amp;lsquo;papə] 爸爸（口语） Q QUEBEC [kwɪ&amp;rsquo;bɛk] 魁北克（加拿大省） R ROMEO [&amp;lsquo;romɪ,o] 罗密欧 S SIERRA [siˈɛrə] 塞纳（地名） T TANGO [ˈtæŋɡəu] 探戈舞 U UNIFORM [&amp;lsquo;junə,fɔrm] 制服 V VICTOR [ˈviktə] 胜利者 W WHISKEY [&amp;lsquo;hwɪskɪ] 威士忌（烈酒） X X-RAY [&amp;lsquo;ɛks&amp;rsquo;re] x-射线 Y YANKEE [&amp;lsquo;jæŋkɪ] 北方佬（美国） Z ZULU [&amp;lsquo;zulu] 祖鲁人（非洲东南部） 实例 “C”用Charlie 来进行解释，R，J分别用Romeo 与Juliett 进行解释等。这种解释，在业余电台用话的通信联络中是必不可少的。如呼号BY1PK ，除了按英文读法报出“B-Y-ONE-P-K”以外还应对字母进行逐个的解释，即“B-Y-ONE-P-K，BRAVO-YANKEE-ONE-PAPA-KILO“，如果一遍不够，可以从头在解释一遍。除ITU规定的解释法外，在实际工作中，我们往往还能听到很多不规则的解释法。这种不规则的解释法没有统一的规定，但必须是大家非常熟悉的名词，而起首字母必须与被解释的字母相同。</description>
    </item>
    
    <item>
      <title>观看视频和文章的原则</title>
      <link>https://pub.oribos.cn/web/note/2020082431.html</link>
      <pubDate>Mon, 24 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020082431.html</guid>
      <description>拒绝短内容 例如：在B站视频低于10分钟的一律不点赞投币。同样一个视频60分钟。可以分成一个视频10分钟发布6个，或者一个视频6分钟发布10个。大量零碎的短视频形成快餐式阅读。10分钟只是个人界定短视频的标准，低于10分钟的视频一律不推荐阅读。除非是紧急分享，实时更新的特殊内容。
拒绝伪科学 拒绝抄袭搬运 拒绝无意义 </description>
    </item>
    
    <item>
      <title>一个简单的 Service Worker</title>
      <link>https://pub.oribos.cn/web/reprint/001.html</link>
      <pubDate>Wed, 19 Aug 2020 23:29:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/001.html</guid>
      <description>引用自reuixiy
1 2 3 4 5 6 7 8 9 &amp;lt;!-- HTML --&amp;gt; &amp;lt;script&amp;gt; if (&amp;#39;serviceWorker&amp;#39; in navigator) { window.addEventListener(&amp;#39;load&amp;#39;, function() { navigator.serviceWorker.register(&amp;#39;/sw.js&amp;#39;); }); } &amp;lt;/script&amp;gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 // sw.js /** References: 1. https://developers.google.com/web/fundamentals/primers/service-workers 2.</description>
    </item>
    
    <item>
      <title>页面新规则</title>
      <link>https://pub.oribos.cn/web/note/2020/2020081911.html</link>
      <pubDate>Wed, 19 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020081911.html</guid>
      <description>之前用的页面规则 content目录下直接引用子模块的全部内容形成 content/sub1 的形式
而sub1的文件就会收到不同调用时的限制，比如sub1/index.html在项目a中表现跟项目b中表现就会有巨大差异
新的规则 在content下创建一个固定的索引页面即content/index.html 这个文件保持固定格式，适用于当前项目
在content/project下引用子模块sub1形成 content/project/sub1 的形式
对于项目形成固定的目录形式project 和index.html 的固定形式，适用于当前项目，保证项目的正确表现。并不直接引用sub1子模块里的内容，而仅仅将子模块作为project里的扩展内容。
随着以上形式的变动，sub1作为扩展内容，剔除了不必要的index配置信息但保留独立的仓库。剔除掉的index配置信息交给项目里的固定的index配置，不再在子模块里配置。
总结 用于子模块，扩展内容，引用内容的仓库，尽可能的少携带配置信息，而仅仅保留必要的具体的内容。配置信息是跟随项目固定的要由项目所处的固定文件配置。
即：1 活动的信息仅提供相应内容，不涉及项目本身的配置。 2 子模块仅作为补充，不能完全取代子目录。</description>
    </item>
    
    <item>
      <title>简化博客</title>
      <link>https://pub.oribos.cn/web/reprint/2020081802.html</link>
      <pubDate>Tue, 18 Aug 2020 22:55:47 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2020081802.html</guid>
      <description>引用自reuixiy
转眼间，博客三岁多了，从一开始的五光十色到一年前的极简主义，从加法到减法，从碎点到几何，博客如博主一样，逐渐走上而立之路。
前些天，博主偶然在 GitHub 上看了眼博客的仓库，久久的重逢之后忽觉博客的复杂，于是一个计划浮上心头——简化博客！
在最初的时候，博主使用的是 NexT 主题，然后魔改添增了许多眼花缭乱的样式和功能，不过这些在一年前都已经被移除简化了，这次的简化从何说起呢？
一、页面
这方面其实已经很好了，但出现了两处主要退化，一是分享，二是页脚。这两处退化的原因不是自己「贪钱」，而是自己「贪名」，希望通过链接引流量，而现在，是时候再次潜入黑暗了。
同时关闭了多余的代码块行号，奇怪的代码块固定高度，将 SVG 图标用字符替换，用 CSS 的 scroll-behavior 和 scroll-margin-top 属性取代了 Smooth Scroll，关闭了 Instant Page，将 Medium Zoom 改为本地加载，减少了对第三方 JavaScript 库和服务的依赖。
二、依赖
博主搭建博客的目的一直很简单——作为一本自己的笔记本，只不过它是电子的，而非纸质。对于传统的纸质笔记本，它的依赖几乎为零，类比于电子相当于我们只需要一个输入和一个显示，即可。
技术上，博主之前已经从 Hexo 迁移到 Hugo 了，但是为何却仍未摆脱 NPM 呢？因为博主需要通过 Workbox 来实现 Service Worker，当时觉得高大上，现在只觉满是复杂——选择 Hugo，就是因为它不需要 NPM，还是纯净的二进制——于是现在弄了一个简单的 Service Worker，然后 rm -rf package*.json node_modules——Farewell, NPM!
有时代码开发上的 KISS，往往意味着代码链后的复杂。在当时，博主觉得研究 Service Worker 的原生接口势必要明白其原理，势必会更浪费时间，现在看来，这是画地为牢——其实原理没有想象中的复杂，自己也并非弄不明白。代码上要想真的践行极简，前提还是必须明白其原理，如此才能抓住源头，减少依赖。
网页是前端，前端怎么能不用 NPM 呢？你这太过时了！是的，现代的 Web 前端是 Angular、React、Vue，但一个博客，要那么现代干什么，一本纸质书，不也没有淹没在这个电子化的时代，依旧不失其价值。要我说，这不叫过时，这叫 Old School，相比而言，反而与初衷一本自己的笔记本更相符。
至于写作上，博文一直以来采用将必要样式语义化的标准 Markdown，使得在富文本的前提下能够以更为基础的文件系统来直接组织文章，避免了 CMS 的黑盒依赖。
三、部署
博客一开始是手动部署在 GitHub Pages 上的，后来手动部署在了 Netlify ，再后来自动部署在了 IPFS，甚至还尝试了 IPFS + ENS，现在走了一圈，又回到了 GitHub Pages，通过一个自己写的 GitHub Actions 自动部署，将来打算部署到自己的服务器上。减少平台，减少流程，减少依赖，减少黑盒，探索黑盒。</description>
    </item>
    
    <item>
      <title>计算机的束缚</title>
      <link>https://pub.oribos.cn/web/note/2020081713.html</link>
      <pubDate>Mon, 17 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020081713.html</guid>
      <description>人的控制欲 人是具有强烈控制欲的，自从人类从原始社会发展到私有制社会，人类就不知从何而来具有了强烈的控制欲，对物质的控制，对人的控制等等。阶级社会就是控制欲泛滥的社会。皇帝可以控制整个帝国，一家之主可以控制一个家庭等等，具有强烈自身意识凌驾于其他之上的力量被人类牢牢掌握着。
计算机的束缚 人类发明计算机，尽管赋予它们自动化和程序化的操作。但计算机的自动化完全在人类给的明确的框架里的。哪怕是人类自己对计算机发出指令故意输错一个字母，计算机都不会正确执行，或者说人类的程序设计就不让计算机去执行故意错误的指令。
https://base.oribos.city/images/2020/20200817031.png
逻辑体系差异 人类的大脑可以包容各类不同的逻辑体系，而计算机的算法建立在简单的逻辑运算上的，具有局限性，计算机不会认为执行错误代码是必须的，哪怕是某些单词意思相近，只要在算法上没有将相似的单词设置为操作关键字，计算机就不会去运行。
人类对计算机的故意限制 上例中，人类对程序代码编写中，已经通过算法识别到用户的操作单词拼写有误，并且给出了正确的建议。但是程序并没有自动按照建议的单词运行，即：人类发现了计算机运行中的拼写错误，但是没有主动为用户纠正拼写错误，扔以错误代码运行同时报错。
在控制力表现上看，就是计算机发现了人类错误，但计算机的控制力默认低于人类的控制力，计算机没有主动将自己的控制力超出人类的错误控制力。类似于，儿子发现了父亲的错误，但儿子只是提示了父亲，却没有主动纠正父亲的错误，因为身份差异。这在阶级社会和封建王朝时期是常见的。而人类对计算机的控制和故意限制也沿用了这种等级差别。
计算机是否会主动纠正？ 在计算机看来，正确的代码和拼写错误的代码均为用户的唯一输入，是否正确在计算机的逻辑上是确定的。计算机没有理由却保证用户意料的结果，即代码执行错误是用户的操作问题，计算机只需要保证完全按照用户指令就可以了。</description>
    </item>
    
    <item>
      <title>使用 GitHub Actions 部署 Hugo 博客到 GitHub Pages</title>
      <link>https://pub.oribos.cn/web/reprint/2020081605.html</link>
      <pubDate>Sun, 16 Aug 2020 21:30:32 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2020081605.html</guid>
      <description>引用自reuixiy
近期博主有了简化博客的想法，于是打算从 Netlify 回到 GitHub Pages，并采用 GitHub Actions 实现博客的持续集成部署。
为了践行极简，博主自己写了一个 Action，使用 Arch Linux 作为 Docker 容器的基础镜像，见 reuixiy/hugo-deploy。
如果你之前使用过 GitHub Pages，可前往 GitHub 参考 README.md 直接使用；如果没有，则可以参考下方的详细教程。
Prerequisites Git GitHub SSH Tutorial Git 你的 Hugo 站点
参见 https://io-oi.me/tech/host-your-blog-on-ipfs/#准备环境。
GitHub 上新建仓库
要使用 GitHub Pages，必须先新建一个 &amp;lt;username&amp;gt;.github.io 的仓库。
参见 Types of GitHub Pages sites。
通过 SSH 连接 GitHub
参见 https://io-oi.me/tech/ssh-with-multiple-github-accounts/#单帐号。
推送源码到 GitHub
这里，我们区分一下，我们要推送的是源码，而..不是..生成的 public 文件夹。
1 2 git remote add origin git@github.com:username/username.github.io.git git push -u origin master 新建 Workflow 配置文件</description>
    </item>
    
    <item>
      <title>0813</title>
      <link>https://pub.oribos.cn/web/note/2020081313.html</link>
      <pubDate>Thu, 13 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020081313.html</guid>
      <description>日志 在ci里运行代码,将生成的文件推送到该仓库的gh-pages分支
推送本地分支local_branch到远程分支 remote_branch并建立关联关系 a.远程已有remote_branch分支并且已经关联本地分支local_branch且本地已经切换到local_branch git push b.远程已有remote_branch分支但未关联本地分支local_branch且本地已经切换到local_branch git push -u origin/remote_branch c.远程没有remote_branch分支并，本地已经切换到local_branch git push origin local_branch:remote_branch git push -u origin master和git push &amp;lt;远程主机名&amp;gt; &amp;lt;本地分支名&amp;gt;:&amp;lt;远程分支名&amp;gt;作用 git push git push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相仿。
$ git push &amp;lt;远程主机名&amp;gt; &amp;lt;本地分支名&amp;gt;:&amp;lt;远程分支名&amp;gt; 注意：这里的:前后是必须没有空格的。
注意，分支推送顺序的写法是&amp;lt;来源地&amp;gt;:&amp;lt;目的地&amp;gt;，
所以git pull是&amp;lt;远程分支&amp;gt;:&amp;lt;本地分支&amp;gt;，而git push是&amp;lt;本地分支&amp;gt;:&amp;lt;远程分支&amp;gt;。
如果省略远程分支名，则表示将本地分支推送与之存在&amp;quot;追踪关系&amp;quot;的远程分支（通常两者同名），如果该远程分支不存在，则会被新建。
$ git push origin master 上面命令表示，将本地的master分支推送到origin主机的master分支。如果后者不存在，则会被新建。
如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。
$ git push origin :master 等同于
$ git push origin --delete master 上面命令表示删除origin主机的master分支。
如果当前分支与远程分支之间存在追踪关系，则本地分支和远程分支都可以省略。
$ git push origin 上面命令表示，将当前分支推送到origin主机的对应分支。
如果当前分支只有一个追踪分支，那么主机名都可以省略。
$ git push 如果当前分支与多个主机存在追踪关系，则可以使用-u选项指定一个默认主机，这样后面就可以不加任何参数使用git push。</description>
    </item>
    
    <item>
      <title>换位思考</title>
      <link>https://pub.oribos.cn/web/note/2020081501.html</link>
      <pubDate>Thu, 13 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020081501.html</guid>
      <description>换位思考的概念 换位思考，是设身处地地为他人着想，即想人所想，理解至上的一种处理人际关系的思考方式。换位思考是人对人的一种心理体验过程。将心比心、设身处地是达成理解不可缺少的心理机制。它客观上要求我们将自己的内心世界，如情感体验、思维方式等与对方联系起来，站在对方的立场上体验和思考问题，从而与对方在情感上得到沟通，为增进理解奠定基础。它既是一种理解，也是一种关爱。
事实情况 媒体和教育总是用理解和包容的心态去教化他人，主流价值总是宣导和谐友爱，仿佛只要遵守这些看似美好的原则，社会就会安定团结，人民幸福美满。然而，事实是甲不是乙，没有亲身经历过乙的状况，根本不可能理解乙的所作所为，将心比心。很多时候，每个人所做的事是是不由己，别人很难理解也无法理解的。加入把甲跟乙从一开始就完全调换未知，甲不见得比乙做的更好。换位思考只不过是自欺欺人。
我们的教育，媒体文章，主流价值宣传总是宣传一些看似美好，实则违反人的基本思维逻辑，使用道德凭空捏造一些“美德”麻痹人民群众的生活。
为什么换位思考行不通？每个人的从小到大的成长历程不同，价值观差异，社会地位和经济条件差异。导致某些看似不合理的事情换做别人就很正常。没有那种对应的环境和生活体验是无法理解的。一瓶酒上万元，上万块可以让农民辛苦种多少庄稼？
事例 我们不理解为什么二战时候纳粹德国屠杀那么多犹太人，但是到了2020年四位美国警察暴力执法致乔治·弗洛伊德死亡，体现出美国社会对黑人的歧视和迫害。我们应该怎么看待？换位思考一下，如果美国人自己是黑人？他们就不歧视其他黑人了吗？未必。近代以前非洲黑人部落战争不断，奴隶贸易时贩卖黑人同胞，1994年卢旺达种族清洗事件。黑人不见得不歧视黑人。</description>
    </item>
    
    <item>
      <title>数量级的差距</title>
      <link>https://pub.oribos.cn/web/note/2020081901.html</link>
      <pubDate>Thu, 13 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020081901.html</guid>
      <description>生活中的差距 几岁的孩子能不能打赢健康的父亲？哪怕是这个孩子整天锻炼，他能使出的劲跟他父亲相比差距是巨大的。
有钱人家的孩子能买的起上万块手机，而穷人家的孩子买不起手机，那这两个孩子的差距是一部手机吗？
社会上的差距 世界范围上的差距 黑暗森林法则的问题 超出人类认知范围上的文明，他们的跟人类的差距是极其巨大的，他们使用的资源可能人类根本没有涉及。宇宙资源纵然有限，不同文明层次使用的资源水平是不相同的，一个使用整个银河系资源的问题，是不会对一个使用银河系100亿分之一资源的低级文明忌惮的。哪怕是对低级文明放任不管，他们的文明等级发展到跟高级文明比肩可能需要上亿年。纵然存在技术爆炸，但大部分时间文明只会待在一个固定水平，长期持续下去。有些甚至永远无法突破。</description>
    </item>
    
    <item>
      <title>腾讯乱七八糟的登陆方式</title>
      <link>https://pub.oribos.cn/web/note/2020081301.html</link>
      <pubDate>Thu, 13 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020081301.html</guid>
      <description>账户使用的邮箱 账户已经绑定了邮箱
但是使用这个邮箱无法重置账户密码
下图为别人的管理界面 我登陆腾讯云之后的管理页面
问题总结 账户绑定的邮箱和手机号，在腾讯云重置账户密码的时候，提示不存在
使用已经绑定的邮箱登陆，提示密码错误
只能使用微信扫码登陆
原因 腾讯为了推广微信验证登陆，强制要求用户只能使用微信扫码确认的方式，绑架用户习惯，设置复杂繁琐的流程限制用户自由使用账户和密码。
类似的情况还有微信登陆必须在手机上点击确认，本质上就是绑架用户习惯。
只要绑架了用户习惯，用户越来越离不开腾讯。</description>
    </item>
    
    <item>
      <title>分拆博客-剔除kor</title>
      <link>https://pub.oribos.cn/web/note/2020/2020080311.html</link>
      <pubDate>Mon, 03 Aug 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020080311.html</guid>
      <description>分拆博客 基于新的布置原则,博客将进行分拆
内容 原有的部署在一个站点的内容将根据内容等级分拆到不同站点,这是基于内容的类型和敏感程度做的细分.
基于内容分离的分开 基于内容A类 B类 C类的不同,对内容进行分开.不同于以往的要求,个人信息将完全从博客中剔除,减少由于博客导致的个人信息泄漏.
域名 普通文章将以uns.pub域名发布,特定的文章B类将以efs.app域名发布.</description>
    </item>
    
    <item>
      <title>内容分拆和规划</title>
      <link>https://pub.oribos.cn/web/note/2020/2020073119.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020073119.html</guid>
      <description>博客内容划分 由于内容进行了频繁的分拆和重新调整，某些文件夹功能出现重复，地址重复。</description>
    </item>
    
    <item>
      <title>内容组件</title>
      <link>https://pub.oribos.cn/web/note/2020090203.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020090203.html</guid>
      <description>使用以下代码作为每篇文章的内容组件 &amp;lt;div class=&amp;#34;text-center&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;div1&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; $(&amp;#34;#div1&amp;#34;).load(&amp;#34;https://base.oribos.city/function/html/1004.html&amp;#34;); &amp;lt;/script&amp;gt; &amp;lt;/div&amp;gt; </description>
    </item>
    
    <item>
      <title>区分资源块</title>
      <link>https://pub.oribos.cn/web/note/2020/202003151.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/202003151.html</guid>
      <description>资源块 纳法 辩证论
数量级
如果蚊子像苍蝇一样在周围飞，不对人造成影响
人会把蚂蚁视为害虫吗？</description>
    </item>
    
    <item>
      <title>博客内容划分</title>
      <link>https://pub.oribos.cn/web/note/2020/2020073111.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020073111.html</guid>
      <description>博客内容划分 记录 发布一些正常撰写发表的文章，
便签 随时发表，零碎的内容，需要进一步总结修改
知识库 记录学习到的内容
文档 各类设计引用的内容</description>
    </item>
    
    <item>
      <title>博客架构</title>
      <link>https://pub.oribos.cn/web/note/2020082111.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020082111.html</guid>
      <description>首页 仅以www.efs.app作为博客的首页，提供索引，分类等功能，展示基础的联系方式，代码分享地址。
efs.pub页面部署在github上，使用Netlify作为静态页面托管1 。
内容页 尽管以www.efs.app作为博客首页，但blog的主要更新页面为：blog.holz.pub。
扩展页 可能使用到的扩展页面均在首页里做链接。
&amp;lt;server.uns.pub&amp;gt; 提供服务器访问，后端应用
&amp;lt;ufs.pub&amp;gt; 提供存储服务，静态文件支持
必要的拷贝 尽管不太愿意将一个站点的内容使用多个域名，但考虑到网络的不确定性，多站点配置是有必要的，这些站点的地址并不固定。
blog.efs.app 内容同blog.holz.pub相同，但站点托管地址不同。
www.holz.pub 内容同www.efs.app有些许差异2 ，但主要功能相同
github pages存在dns污染等情况。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
由于 holz.pub 使用国内服务，需要标注ICP备案号&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>域名的充分使用</title>
      <link>https://pub.oribos.cn/web/note/2020083143.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020083143.html</guid>
      <description>减少域名持有量 充分利用已有域名 增加子域名使用 server,develop,app,config,static等作为子域名使用
多服务商 减少使用腾讯产品，不使用腾讯云dns</description>
    </item>
    
    <item>
      <title>字母表</title>
      <link>https://pub.oribos.cn/web/note/2020082151.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020082151.html</guid>
      <description>字母解释法 根据国际电信联盟ＩＴＵ的规定，业余通信中运用国际民航组织（ＩＣＡＯ）使用的解释法作为其“标准解释法”。此外也经常用一些人们熟识的地名、人名等来解释字母，形成了习惯使用的其他解释法。
字母 标准解释法 A ALFA B BRAVO C CHARLIE D DELTA E ECHO F FOXTROT G GOLF H HOTEL I INDIA J JULIET K KILO L LIMA M MIKE N NOVEMBER O OSCAR P PAPA Q QUEEC R ROMEO S SIERRA T TANGO U UNIFORM V VICTOR W WHISKEY X X-RAY Y YANKEE Z ZULO </description>
    </item>
    
    <item>
      <title>封闭的互联网</title>
      <link>https://pub.oribos.cn/web/note/2020090103.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020090103.html</guid>
      <description>各类公司营造自己封闭的资源 淘宝禁止百度抓取，微信公众号对外封闭，闲鱼，快手等app只提供app访问。
造成的结果 以上各类公司对web端，搜索引擎的封闭看上去是各自的经营策略。然而形成的影响是多种多样的。
曾经看到一个呆萌的头像，想寻找其出处。在百度上搜索半天，找不到任何有价值的信息。换用谷歌，搜索到twitter上原作者发表的文章，进而通过其作者的id，在微博上搜索到其发布出处。
这期间，直接使用百度是无法从微博上搜索到有价值信息的。这或许是百度搜索技术问题，也可能是微博对百度搜索的专门屏蔽。你只有准确的输入该作者的id，缺一个字母都不行
整个过程就是：离开国内封闭的互联网环境，从其他更开放的环境下搜到有价值信息，然后在到该封闭环境下的继续搜索。</description>
    </item>
    
    <item>
      <title>心理问题</title>
      <link>https://pub.oribos.cn/web/note/2020080503.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020080503.html</guid>
      <description>心理 心理医生会有意无意的将患者的心理问题夸大化，会将症状归为一种难听难懂的词汇比如口欲期、肛欲期、俄狄浦斯期。这些名词无法准确的描述症状却让人感觉不适。
严重性 大部分人都存在或多或少的心理问题,这跟童年生活环境有关,特别是保守,封闭,教育程度低的地区.而大部分人的心理问题并不会对社会造成多大伤害.
反而心理医生会借助各类相关技术,夸大表现.就好比一个世界名厨要教人怎么品味食物,钢琴师音乐家教大家欣赏音乐.而大部分人只是在唱歌房吼几嗓子,不需要那么专业.
但是心理医生对人的心理问题的分析是有很大的借鉴的,心理医生通过科学方法对日常生活中的表现,个人行为习惯分析,得出的结论可能是普通人半辈子才能理解的知识.
资本家的伎俩 某些资本家为了利益所常使用的伎俩
锚定效应
价格歧视
免费营销</description>
    </item>
    
    <item>
      <title>忒修斯之船</title>
      <link>https://pub.oribos.cn/web/note/2020080407.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020080407.html</guid>
      <description>忒修斯之船 公元1世纪的时候普鲁塔克提出一个问题：如果忒修斯的船上的木头被逐渐替换，直到所有的木头都不是原来的木头，那这艘船还是原来的那艘船吗？因此这类问题现在被称作“忒修斯之船”的问题。有些哲学家认为是同一物体，有些哲学家认为不是。在普鲁塔克之前，赫拉克利特、苏格拉底、柏拉图都曾经讨论过相似的问题。近代霍布斯和洛克也讨论过该问题。这个问题的有许多变种，如“祖父的旧斧头”。
哲学家托马斯·霍布斯后来对此进行了延伸，如果用特修斯之船上取下来的老部件来重新建造一艘新的船，那么两艘船中哪艘才是真正的特修斯之船？
类似的悖论 人体组织细胞更新的周期大致为120至200天左右（神经组织细胞除外），大约每6到7年就可以全部更新为新的细胞。
赫拉克利特之河 人们虽然同样渡过相同的河，但流经身旁的水却是不同的。普鲁塔克亦引用赫拉克利特的观点，提出无法再次渡过相同的河流的假说。
祖父的旧斧头英文的口语，指某物每次都残留了本来的一部分；但更换了另一部分，逐渐所有的部分都换过的意思。斧头的刀刃换了3次，刀柄也换了4次，可是还是同一把旧斧头。
个人认识 在我看来，概念本身就不是真正的客观的存在。概念是人类认识事物的一种表述，是抽象的，不固定的。
比如 一张钞票，今天上午能拿去买1kg黄金，然后下午爆出消息经济崩溃，钞票不值钱了成垃圾了。买不到任何东西了，钞票本身一点没变，但它的价值变了不能称为钞票了，成废纸了。所以，钞票或者说钱这个概念，跟其物理属性的关系不是固定的，钞票破损一点仍能使用。破损一半仍是钞票，只不过价值可能有所损失，但仍是钞票。
忒修斯之船哪怕是换掉了所有的材料，只有有一个人认为这个船还是忒修斯之船，那么这艘船在这个人心目中仍然是忒修斯之船。这是根据人的认识的，不是明确的客观的。许多人不认可换掉大部分材料的船不再是忒修斯之船，那也是这个概念在这些人心目中的概念，这个概念本身就是抽象的，不固定的。</description>
    </item>
    
    <item>
      <title>操作系统</title>
      <link>https://pub.oribos.cn/web/note/2020081113.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020081113.html</guid>
      <description>操作系统内置SSL证书 由于在网络传输中，传递ssl加密证书公钥是不可靠的。所以，一直相对完善的https信息往往将内容使用可信赖的CA机构的ssl证书加密。而客户端用来内置的CA证书公钥对内容解密。这就保证了信息的可信任性。
对于国家机构，不应使用国外操作系统的CA机构证书。因为无法避免数据被窃听的风险。但对于国内用户而言，信息被海外企业窃听的风险较低，反而为了防止数据被盗用，必要的审查等考虑。使用有别于国家机构的第三方CA机构证书是有必要的。</description>
    </item>
    
    <item>
      <title>日志</title>
      <link>https://pub.oribos.cn/web/note/2020/2020073191.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020073191.html</guid>
      <description>日志 </description>
    </item>
    
    <item>
      <title>注意别人说法时的出发点</title>
      <link>https://pub.oribos.cn/web/note/2020080613.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020080613.html</guid>
      <description>注意别人说法时的出发点 媒体,网络文章发表的文章,作者在编撰文章的时候,是有他自己的利益,价值观的出发点的.某些现象,某些事实经过作者的描述的时候,会不自觉的进行调整,校正.淡化他们不想提或跟他们利益价值观相悖的内容.
频发使用语气,频繁对某些事情定性,频繁表现个人的喜恶就是很明显的表现.
对历史的过度深究,对某些历史事件的过度批判,对资料不健全的情况的单方面定性都是片面的,有目的的.
历史 历史真相很难弄明白,史料也存在偏差,删减,误导,虚假.对于有争议内容的过度研究,多度批判是不恰当的.
例子&amp;quot;止戈为武&amp;quot; 最初造字的时候,字体是按照形象创造的象形字,抽象意义的很难造字.&amp;ldquo;武&amp;quot;的造字本意里的&amp;quot;止&amp;quot;仅仅是指脚掌,脚趾.描述走路,行军.简单概括 &amp;ldquo;止戈&amp;quot;的本意就是&amp;quot;拿着武器行走的人&amp;quot;而《左传·宣公十二年》里楚庄王对武的解释,导致含义出现偏差,后人借此已经曲解了本意.</description>
    </item>
    
    <item>
      <title>记录</title>
      <link>https://pub.oribos.cn/web/note/2020080401.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020080401.html</guid>
      <description>英语跟汉语区别 表音文字和表意文字区别
英语作为表音文字，用少量的字母记录语言中的语音，从而记录语言的文字。字母是表音文字的基础，字母的数量较其他语言较少。文字的复杂程度跟使用的字母数量有关，存在不同的读音变异。不同文字之间用空格隔开。
汉语作为表意文字，用象征性书写符号记录信息的文字体系，不直接或不单纯表示语音。从象形文字发展而来，历史悠久。
局限性 随着人类对世界的认识，用象征性的符号无法有效的表达不断增长的信息。使用表意文字就会不断表现出局限性。一些抽象的概念，复杂的实物是无法使用表意文字有效的表达的。由于文字之间较少使用空格类似的分隔符来短句短词，词语语句会存在一些歧义的误解。
随着计算机的出现，表意文字较难使用计算机录入和处理。对表意文字的处理需要耗费更多的资源。
发展的眼光 不能因为表意文字的局限性就对此嗤之以鼻，未来世界的语言形式会超出人类现有的理解，单纯使用以表音文字或表意文字是片面的。</description>
    </item>
    
    <item>
      <title>防止信息泄露</title>
      <link>https://pub.oribos.cn/web/note/2020080511.html</link>
      <pubDate>Fri, 31 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020080511.html</guid>
      <description>互联网id 不会只使用一个互联网id,也不会在一个账号上捆绑太多的服务.
有计划的区分多个邮箱账户id
有计划的区分微信，微博，qq等sns账号。
密码和私钥 密码分级别,私钥需要全部备份.密码和私钥不保存在git仓库里
博客网站 为了区分内容,博客网站将被拆分成不同的域名,分别展示不同级别的内容.
多个git仓库 github多账号，资源权限区分，git仓库多服务商，及时备份。
多个手机号码 使用海外服务的手机号码和虚拟账号</description>
    </item>
    
    <item>
      <title>jsdelivr403问题</title>
      <link>https://pub.oribos.cn/web/note/2020/2020073017.html</link>
      <pubDate>Thu, 30 Jul 2020 08:16:36 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020073017.html</guid>
      <description>jsdelivr对直接访问进行阻断 直接访问cdn.jsdelivr.net下的github资源会提示403问题
通过页面带referrer的请求使用正常</description>
    </item>
    
    <item>
      <title>假如动物为人类投票</title>
      <link>https://pub.oribos.cn/web/note/2020/2020072911.html</link>
      <pubDate>Wed, 29 Jul 2020 08:16:36 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020072911.html</guid>
      <description>假如动物为人类投票 某一天，上帝让动物决定人类是否应该被消灭。由于人类对自然的影响，上帝需要通过大自然对待人类的态度决定人类命运，让动物对人类投票。
假设各种动物知道投票对它们带来的以下影响：
1 人类保护大熊猫，雪豹，藏羚羊，麋鹿等等许多野生动物，如果人类不存在，这些本来就濒临灭绝的动物可能会完全灭绝。
2 人类饲养猪，马，牛，羊，狗，猫等动物已经长期脱离自然环境，如果人类不存在，它们目前的演化程度很难适应大自然环境，它们可能出现数量锐减，仅可能剩少量艰难生存繁衍。
可能的结果 野生动物肯定不喜欢人类，对人类投NO票，因为人类的发展，对它们的栖息地造成毁灭影响，消灭人类可以让它们生存下来。
受到人类保护的动物，对人类投YES票，这些动物竞争力弱，适应环境能力差，随时可能灭绝，人类对它们的保护可以让它们规避灭绝的风险。
蚊虫，老鼠等动物，虽然不喜欢人类，但由于人类数量众多，在人类的栖息地这些寄生动物可以获得更多的食物资源，但如果没有人类，这些动物生存能力本身就强，对它们影响甚少。对人类投YES NO都无关紧要。
动物应不应该生存在动物园？ 老虎，狮子，大熊猫在动物园的生活条件比野外强太多了，不用担心捕食，不用担心受伤和疾病，不用担心野兽攻击。
但，动物园的老虎狮子，本身是需要进食的，人类可以给它们提供猪肉牛肉以食用。甚至会提供活的动物以训练它们生存能力，那么这些被捕食的动物想不想在动物园里居住？</description>
    </item>
    
    <item>
      <title>黑暗森林法则</title>
      <link>https://pub.oribos.cn/web/note/2020/2020072717.html</link>
      <pubDate>Mon, 27 Jul 2020 08:16:36 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020072717.html</guid>
      <description>未知的恐怖 未知是人对失去控制力的一种排斥反应，即当一个东西未能让人所控制掌握时，就会表现出厌恶，排斥等负面反应。
但未知是因为人类本身的认识局限性导致的，是客观存在的。未知的世界是不会被人所完全理解和掌握的。
黑暗森林并没有固定法则 宇宙就是一座黑暗森林，每个文明都是带枪的猎人，像幽灵般潜行于林间，轻轻拨开挡路的树枝，竭力不让脚步发出一点儿声音，连呼吸都必须小心翼翼：他必须小心，因为林中到处都有与他一样潜行的猎人，如果他发现了别的生命，能做的只有一件事：开枪消灭。在这片森林中，他人就是地狱，就是永恒的威胁，任何暴露自己存在的生命都将很快被消灭，这就是宇宙文明的图景，这就是对费米悖论的一种解释
这个看似合理的行为却经不起推敲。因为将每个文明都假设为猎人是极其幼稚的，你所认为的枪，炮在别的文明眼里就跟细菌，蚊子差不多。这个凶猛的猎人在别的文明眼里就跟兔子一样，开枪和攻击根本起不到任何效果。
重新认识 首先 黑暗森林并不会有一个固定的法则。
黑暗森林本身就是人类的局限性导致的未知世界，不会被人类影响，不会守人类控制。
其次 未知的目标不会固定表现一种态度。
即未知的文明是敌对，入侵还是和平友好并不是固定的。是根据自己的状态和目标的状态而改变的。
再次 对待未知，只有不断的提升而没有终点。
由于 未知文明是否入侵是不可控的，
探索本身是一种喜悦 由于探索本身是对未知的控制，所以，当未知文明发现一个新的目标，新的文明时，本身不会表现敌意。即生命体本身不会向外接表现敌意，只有自身的存在受到威胁或者攻击能导致正效益时，才会表现出敌意。
假如未知的文明，发现一个相对落后的文明。那么他们就会表现出掠夺，入侵的行为。这是必然的，不可控的。哪怕这个未知文明自身不会去攻击，只要两者相遇，高级文明必然会去掠夺落后文明，这是生命本身决定的。
自身能做的只有不断提升自己的对抗能力，提升安全水平，这个水平是没有终点了，文明本身只能不断提升自身，不断突破而不能停下，其实，提升和不提升都不能保证绝对安全，只是停止提升的风险要高于不断提升的风险。
提升的天花板 尽管文明自身会意识到只有不断提升自己，演化，超越才能安全的生存在已知空间。但文明自身的提升的天花板是极难突破的，符合大过滤理论。而突破提升的天花板将面临许多问题，
假如生命需要放弃自身的物质形态而得到进一步的提升，生命自身会不会去选择这种危险未知的抉择？因为在其他人眼里，这种提升以为着死亡。
假如生命需要混合其他杂乱的基因和造物去获得进一步的提升，这种杂交混合是否被伦理所接受？因为这样会被认为是对传统文化，生命意义的亵渎。
基于简单数学理论的机械结构，无法对他们的算法水平进行突破，就无法获得更高层次的提升。算法进行突破以为着过去的算法要重写，机械文明要重构。
基因是硬件 生命是软件 基因决定了生命的形态，是一种固定的客观的硬件框架。这个框架决定了生命的存在形式，发展方向，甚至基于硬件水平限制了生命的决定和功能。而生命是具有无限可能性的
生命或许在某种情况下突破基因的枷锁。
基因的需求是存在，生命的需求是探索。
空间的尺度 是否是因为跟其他文明过于遥远，就像广袤无垠海洋里一叶扁舟一样。是否没有受到其他猎人攻击是因为相隔过于遥远？实际上，我们认为的海洋的辽阔在人造卫星面前只是一段普通的空间。在太阳眼里就是一段尘埃。或许其他文明距离我们并非太远，而是太近了，人类太小了。</description>
    </item>
    
    <item>
      <title>记录</title>
      <link>https://pub.oribos.cn/web/note/2020/2020072111.html</link>
      <pubDate>Tue, 21 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020072111.html</guid>
      <description>日常文件记录 ssl证书 试用heroku,需要使用自定义域名的时候出现如下提示
.app域名必须使用ssl证书才能访问，而ssl证书在heroku只能付费账户使用
域名 我以为使用自己的域名，自己设置的地址，资源和名称掌握在自己手里，就能确保长期稳定使用。
但是，莫名其妙的感觉自己之前的域名太难听，直接放弃使用了，备案信息也主动注销了。或许属于一时冲动，但由于自己的心思变化，之前的域名确实无法使用了（为了减少因为变动导致的不确定影响，旧域名继续备用数年）。
这让我意识到，数据掌握在自己手里也不见得靠谱！
新增域名 由于使用新的资源管理方式和命名方式，ufs为管理的资源统一由ufs作为根命名，以hb fd 命名的内容由uns作为根命名
如下例：
旧命名： hb-ufs-static hb-kit-data
新命名 static.ufs data.kit.uns
命名方式 在命名文件夹和文件,项目,源代码变量等参数时,既可能不使用难以理解的词汇比如缩写,序号等.应使用易于识别的名词和结构.</description>
    </item>
    
    <item>
      <title>域名调整</title>
      <link>https://pub.oribos.cn/web/note/2020/2020072001.html</link>
      <pubDate>Mon, 20 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020072001.html</guid>
      <description>博客页面的域名调整 博客页面由http://b.hbn.pub 变更为 http://www.efs.app,但考虑到国内访问速度，由http://www.ufs.pub提供镜像。
即：博客页面以http://www.efs.app展示，但实际上可以通过http://www.ufs.pub在国内获得更快的访问速度。
造成这样的囧景要摆伟大的墙所赐。
.app的证书问题 .app域名需要使用ssl证书才能正常访问，在谷歌浏览器上访问http是无法正常访问的。
博客都更新分歧 博客需要的补充内容，一般引用 http://b.ufs.im
对不必要内容的放弃 减少对不必要内容的控制，某些低价值资源应果断放弃
问题点 尽管在名称上中意efs.app，efs.app也是打算作为主要域名使用。但其域名政策对ssl的强制要求，使得功能受到限制，在实际使用中很不方便。
ufs.pub作为国内专用域名，一般不解析海外内容，国内的服务器和存储服务一般使用此域名。
ufs.im作为海外专用内容，一般不在国内服务上使用，即所有在此域名上的信息都是受限的。
efs.app定位广泛，奈何功能受限。因为需要一个代替的域名korlys.com，</description>
    </item>
    
    <item>
      <title>内嵌页面</title>
      <link>https://pub.oribos.cn/web/note/2020/2020071717.html</link>
      <pubDate>Fri, 17 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020071717.html</guid>
      <description>内嵌页面 </description>
    </item>
    
    <item>
      <title>种植向日葵失败</title>
      <link>https://pub.oribos.cn/web/note/2020071731.html</link>
      <pubDate>Fri, 17 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020071731.html</guid>
      <description>辛苦种出来的向日葵被各种蛀虫啃食 从4月份开始一颗一颗种植向日葵，到了三个多月后向日葵长成。先是蜗牛蛀虫啃食茎秆，后来是鸟啄未成熟的瓜子。
个人观念 这些啃食的鸟类，本人不愿意故意捕捉野生鸟类，但是这种肆意来戳食未成熟瓜子的鸟真的让人厌恶。完全改变了鸟类在我心目中的形象，驱赶攻击野生鸟类是必要的。
蜗牛，玉米螟等害虫就是完全找人恨，之前不理解大量使用农药，经过自己种植农作物，可以理解农药使用的必要性。
起初，以为种植向日葵就只需要长出来花朵就可以了，结什么样的瓜子并没有多大区别。关键是在于向日葵花好看。事实上由于种植的时间有区别，大片的向日葵并不是一起开花的，花朵并不好看，反而用的种子是那种细小很难食用的品种，结果导致花不好看，瓜子不好吃。整体种植向日葵还是失败的。
引申 蛀虫 种植向日葵，施肥浇水的时候，鸟类蛀虫并没有为种植向日葵出力。这些蛀虫像极了封建社会的土豪劣绅，现代社会的资本家。
没有种植过庄稼的时候，以为种下种子，浇水施肥就可以收获很多。其实，种子，土壤，天气，雨水等等影响太多了。选种不好，根本收获不到理想的果实。同时还要应对蛀虫鸟类的啄食。
当你没有经历的时候，并不知道自己需要什么。没有种植过向日葵，起初自想看花，结果看花失望，而种子又不好吃。才知道自己原先如果种植食用的种子的话，情况会更好。</description>
    </item>
    
    <item>
      <title>认识和看法2</title>
      <link>https://pub.oribos.cn/web/value/2020/2020071513.html</link>
      <pubDate>Wed, 15 Jul 2020 19:09:38 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/value/2020/2020071513.html</guid>
      <description>政治 平民只所有感觉政治跟他们无关，就因为他们没有能力接触到对社会的控制力：政治。被隔绝出政治之外。
财富 古代交通不便，国家没有能力完全统治辽阔的疆域，比如汉代将偏远地区分封出去也是迫不得已。这些封地的实际统治者的后代在皇帝统治力强的时候，维护皇帝统治，当皇帝统治力弱化时候就会偏离。
皇帝培养的利益集团，掌握大量国家资源，从皇帝手里攫取大量财富，但是当皇帝困难时候，他们想到的不是知恩图报，维护皇帝统治，而是事不关己，甚至坐看王朝灭亡，明朝就是例子。这是资本的本性。
当今社会，面对2020年的突发疫情，许多企业门店经营受到影响。这个时候呼吁房东减免房租，看似普通的纠纷，确实涉及很大问题。房东们之所以获取富裕的房产就是依仗国家的发展，政策的实惠，房东们赚到钱应该为国家考虑，在疫情期间减免部分房租，缓和社会矛盾。因为租户经营受到损失，还让他们拿出本金让房东正常牟利，本质上很有问题。而不出意外，大多数房东是不会顾及社会矛盾，国家困难的，这些跟他们无关。疫情和困难不能影响他们赚钱，房租不能减免！这种行为本质上跟明朝时期极其类似。各类富甲一方的王侯贵族不愿意出钱给崇祯去剿灭李自成。
垄断的几种形式 托拉斯指的是在一个行业（商品领域）中，通过生产企业间的收购、合并以及托管等等形式，由一家公司兼并、包容、控股大量同行业企业来达到企业一体化目的的垄断形式。换言之，一个托拉斯是一个公司、一个法人，其组织形式是通过这个公司内部的行政渠道，达成共同策略。因为是内部行政渠道，不涉及公司之间的谈判，所以托拉斯是四种垄断方式中最稳定的之一。
卡特尔则是由一系列生产类似产品的企业组成的联盟，他们是不同的公司，所以有不同的决策目标，而这种目标由于反垄断法的要求，是不可能通过合同统一的，所以这些公司只能够通过某些协议或规定来控制该产品的产量和价格，而这些协议大部分属于“君子协议”，并没有约束力。只要卡特尔成员中出现决策分歧，卡特尔通常维持不下去。所以，卡特尔是四种垄断方式中最不稳定的。
辛迪加是四种垄断形式中最低级的垄断形式，因为它仅仅是通过少数处于同一行业的企业间相互签订协议，使得加入了辛迪加的企业都由辛迪加总部统一处理销售与采购事宜。生产资料通过成员间的协议进行二次分配。辛迪加的主要目的在于批量采购和销售可以节约资本，这对于每个企业来说，决策都是一致的，同时，一个企业退出辛迪加就意味着他不得不自己建立自己的销售网络——这往往是比较困难的，因此辛迪加的组织形式较为稳定。
康采恩是一种通过由母公司对独立企业进行持股而达到实际支配作用的垄断企业形态。一般情况下，基本是由集团中的银行以及其他金融企业来担当控股公司这一角色。从组织形式看，康采恩是通过经济和行政渠道对于子公司进行控制的，所以稳定性与托拉斯相当，优于卡特尔和辛迪加。从涉及方面来看，这种垄断形态与卡特尔以及托拉斯不同，它的直接目的不是支配市场。在资本集中方面上，所以往往超越单一市场领域，在这点上看，康采恩比卡特尔和托拉斯更加进步。顺带一提，康采恩是德语词的音译，东方一般把这种组织形式叫做“财阀”，例如三井、住友、现代什么的。
知识垄断 小学：小学的作用是认识基本的道德和世界的现象
知道礼义廉耻，知道好坏对错。
中学：世界的基本规则和基本原理，社会行为和基本原理
初中： 更全面的认识世界基本规则。
高中： 初步认识世界的规则和原理，初步研究原理。
更有效的社会劳动和基本的三观。
大学：探索基本原理和规则，建立和完善规则，初步研究原理。
本科：基础知识和专业知识的积累和完善，为特定领域的研究和扩展做准备。
专科：特定领域的实践和工作，初级的社会实践，
研究生：在特定领域和有限范围内扩展人类知识水平，制定原理本身。</description>
    </item>
    
    <item>
      <title>内容分离</title>
      <link>https://pub.oribos.cn/web/note/2020/2020071301.html</link>
      <pubDate>Mon, 13 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020071301.html</guid>
      <description>待完善
完全的内容分离 随着对于内容的管理越来越完善，是时候进行更复杂的内容分离。
1 内容A类
正常更新的内容，文章，索引，链接
这些内容是正常博客可以正常更新的，不会引起不必要的麻烦的内容。
这些放到主博客页面，源码放到正常仓库。
2 内容B类
具有版权争议，内容较敏感的内容，虽然不符合某些规定但不验证的
主要有博客的评论等不符合备案要求的功能，转发或引用的某些具有争议的内容
这些内容不会放到主博客页面，根据需要用主博客的链接或跳转方式跳转到中间页面，这种内容的源码不会放到正常仓库，会根据需要放到特定仓库。
3 内容C类
可能引起某些问题，涉及政治正确，道德伦理，法律法规的内容。
可能涉这些内容的，主博客 和中间页面都不会存放源代码和内容。
分离域名 根据A类，B类内容的差异，会影响的分离不同的域名，作为中间页面和存放B类内容的域名解析会使用中转功能，即：访问者访问固定域名ap，通过ap的跳转或链接访问到B站点，因为B站点的域名解析，内容位置并不会固定。
原则 绝对不在国内服务上使用海外服务
需要使用海外服务的，使用海外专用账户，同国内服务在域名，服务器，git托管上完全分离
使用海外服务时，hk服务应尽可能排除
服务商 使用github作为博客内容仓库，然后使用now.sh 和netlify作为扩展博客内容的网页托管
使用coding构建计划，构建自动部署，然后推送到国内cdn对资源仓库和博客
由于页面访问经常出现故障，取消使用github pages 和coding pages
由于计费不明，取消使用aws amplify</description>
    </item>
    
    <item>
      <title>控制力</title>
      <link>https://pub.oribos.cn/web/note/2020/2020071303.html</link>
      <pubDate>Mon, 13 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020071303.html</guid>
      <description>待完善
控制力 物种的控制力 植物是很难趋利避害，面对食草动物的啃食，植物在短时间内很难做出有效防御。动物则不同，动物可以通过奔跑，变色，攻击或喷毒来进行一定程度的防御和反击。
尽管病毒和细菌深刻影响着世界，作为微生物，病毒和细菌在个体上是相当脆弱的，它们的生存需要依靠数量级的作用力，即单个病毒和细菌的影响力控制力相当低。
通过以上信息，得出一个观点：物种的进化跟他们的控制力是有相关性的。即低等物种高等物种的区别是其作用力控制力。
控制力的差别 人类的控制力跟动植物是有区别的，人类是一个社会性动物。个体脱离社会孤立生存的能力很差，甚至不如一般动物。人类的作用力控制力的体现是群体的，社会性的。对于人类而言，地位高低是对社会资源的控制。
人类晋升的标准 简单概括，人类个体的价值判断就以其对社会资源的控制力作为高低标准。其他的方方面面只是对社会资源控制的体现。古代是以人口，土地，粮食。现在进入资本主义时代，这些都以资本作为唯一衡量，资本成为了人类对社会资源控制的统一体现。但资本并不单单以资金，金钱表现。</description>
    </item>
    
    <item>
      <title>各种设计2</title>
      <link>https://pub.oribos.cn/web/note/2020/2020071319.html</link>
      <pubDate>Mon, 13 Jul 2020 08:16:36 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020071319.html</guid>
      <description>统计各种奇葩设定和故障-2 第一期
git在windows客户端上的卡死，无响应
联通手机4G信号的网络阻塞（换电信卡瞬间打开）
VSC的ssh登录 由于更换了服务器的域名和ip,使用vsc ssh登录服务器的时候出现卡死, 卡死除了显示这个一直进行链接的显示外,没有任何提示,其实是需要进一步的操作,但vsc并没有响应出来.
出现这个的根本原因是ssh证书登录的时候证书验证出现问题,本地的证书缓存信息跟实际不符(修改了域名和地址),解决方法:删除ssh证书配置文件里的 known_hosts 文件
链接限制 QQ，微信对外部链接的限制 </description>
    </item>
    
    <item>
      <title>奇葩做法</title>
      <link>https://pub.oribos.cn/web/note/2020071111.html</link>
      <pubDate>Sat, 11 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020071111.html</guid>
      <description>数据必须大于之前数据 频繁停电,限电 </description>
    </item>
    
    <item>
      <title>标准化的url地址</title>
      <link>https://pub.oribos.cn/web/note/2020/2020071111.html</link>
      <pubDate>Sat, 11 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020071111.html</guid>
      <description>重新定义地址方式 第一段 资源组，域名，本地地址。
域名以 http://denalon.github.io http://www.hbn.pub/ 等形式构成，具有固定形式
第二段 目录
例如 web/note/2020/
第三段 最终位置
标识最终位置的目录，</description>
    </item>
    
    <item>
      <title>记录资本行为</title>
      <link>https://pub.oribos.cn/web/value/2020/2020071013.html</link>
      <pubDate>Fri, 10 Jul 2020 13:50:21 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/value/2020/2020071013.html</guid>
      <description>充值活动 平时充值贵,偶尔的充值活动打折促销,且固定时间打折
话费充值,会员充值,游戏道具充值
第一次购买优惠 包年服务第一次优惠,自动扣款优惠,学生价优惠</description>
    </item>
    
    <item>
      <title>新版本</title>
      <link>https://pub.oribos.cn/web/note/2020/2020070911.html</link>
      <pubDate>Thu, 09 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020070911.html</guid>
      <description>完全使用子模块管理内容目录 将content目录下的内容全部设置git submodule 子模块引用，且更新也是采用git submodule init git submodule update更新
当子模块内容更新后，使用git submodule foreach git pull origin master更新
子模块配置较难修改 之前在构建计划里使用git clone 添加子目录内容，当需要添加子目录时，只需要添加一条git clone命令就可以了。删除同理。而使用git submodule子模块之后，尽管同步文件不再需要一一添加git clone，但对于需要修改子目录的名称，路径和增删子模块等操作时，就需要将整个源码文件git clone到本地增减修改。相比之前只在构建代码配置文件上增减一两条记录来说较繁琐。
原有仓库存档 原来的仓库下载本地之后，归档。删除原仓库地址。此处测试子模块是完全使用新的仓库，当测试完成后，原测试仓库引入项目组之后，代码归档之后删除旧的源码仓库和测试仓库。
内容管理 对文件的重新调整，目录的调整是为了实现复杂的文件管理和项目管理而做的测试和试验。</description>
    </item>
    
    <item>
      <title>在coding构建计划里使用凭证</title>
      <link>https://pub.oribos.cn/web/note/2020/2020070711.html</link>
      <pubDate>Tue, 07 Jul 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020070711.html</guid>
      <description>代码如下： stage(&amp;#39;改写ssh&amp;#39;) { steps { sh &amp;#39;ls -a&amp;#39; sh &amp;#39;mkdir -p ~/.ssh&amp;#39; withCredentials([ sshUserPrivateKey(credentialsId:&amp;#39;8f0ccd51-1927-45f2-be05-3d8a600d725e&amp;#39;,keyFileVariable:&amp;#39;SSH&amp;#39;) ]) { sh &amp;#39;cat ${SSH} &amp;gt; ~/.ssh/id_rsa&amp;#39; } sh &amp;#39;chmod 600 ~/.ssh/id_rsa&amp;#39; } } 步骤演示 录入凭证 在构建计划里使用凭证</description>
    </item>
    
    <item>
      <title>004</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020070405.html</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020070405.html</guid>
      <description>规划 重新规划内容目录
fd额外内容 重新启用备用主题 单页info页面重新使用。</description>
    </item>
    
    <item>
      <title>预期</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020070411.html</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020070411.html</guid>
      <description>图片设计 假如结论跟你的预期不符
一 人类使用科学是有限的，因为科学是人类的工具和方法，而人本身的认知是有限的，导致以科学为依据的对世界的探索和方法是有限的。
二 有没有完善的，完美的方法？ 对目前人类来说，没有。因为人本身的认知是有限的，超越人类有限认知的东西是无法被接触和理解的。类似二维空间里的世界是无法理解“高度”这种概念的。追求超越人类有限认知的突破是没有意义的。
三 人类目前的认知中，科学是最有效的工具和方法，以一种求极限的形式，逐步逼近对无限世界的认知极限。
四 在由法律，道德，规范约束的人类社会，追求绝对的科学态度是极其奢侈的。人类的利益，社会意识形态，文化等多方面因素限制了绝对理性的科学理论发展。在特定条件下，某个模型如果只存在前进不存在阻力，那么这个模型会越来越大最终达到条件极限后崩溃。因为人类活动空间是有限的，人类社会的任何行为最终会禁锢在这个有限空间，发展过程里必然存在阻力以平衡各种矛盾。</description>
    </item>
    
    <item>
      <title>文件管理</title>
      <link>https://pub.oribos.cn/web/docs/2020/202070471.html</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/202070471.html</guid>
      <description>重新规划的资源分类 uns holz ufs pps 作为四个资源分类
uns 杂项，未区分内容，总分类内容等，
转载，引用的内容
holz 纯个人内容
ufs 纯公开内容，内容性质不做区分的内容
pps 跟自己无关的其他分类
重新规划了文章目录 ufs dms
lambda note code hb
diary archive fd
p1 z02 asset
code单独出来 code虽然按照文件排列处于dms之下，但当代码库较多是单独作为主代码库，跟dms并列。
ufs hb fd
是否私有？
私有 hb fd 共有 ufs
dms kor lambda note
mms music video app backup ufs ufs应独立出来，统一管理个人信息意外的所有资源 下属四个主要目录 dms mms app backup
hb 系统内容，固定的，私有的内容 系统文件夹。
diary code archive
fd 额外的内容 z02 p01
ufs
dms</description>
    </item>
    
    <item>
      <title>001</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020070301.html</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020070301.html</guid>
      <description>日记 ufs.im将作为独立的域名，仅解析外网访问内容
korlys.com
uns.pub的作用
函数计算专用域名
efs.app</description>
    </item>
    
    <item>
      <title>002</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020070302.html</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020070302.html</guid>
      <description>内容 技术 科学 价值观 艺术 配置 海外服务器 外网域名 国内域名 中转域名 </description>
    </item>
    
    <item>
      <title>003</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020070303.html</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020070303.html</guid>
      <description>文件归类 代码 code 项目 project
hb
diary
code
project
note
lambda
额外内容
fd
d1 个人内容归为个人
以hb为仓库
项目内容归位项目
仓库为 project asset kit
额外内容单独管理， 仓库以fd
由于之前的仓库以“测试“仓库里测试运行，部分测试的项目配置后作为正式内容使用。然而在正式使用时，并没有将文档从测试仓库里转移出来，而是直接引用了测试仓库。这种神奇操作还在多个项目里使用。导致源代码库使用了多个测试项目直接使用。测试仓库是由多个名称和位置。
修改内容：
源文件配置文件和同步代码
fd仓库的内容不应该在正式项目引用！</description>
    </item>
    
    <item>
      <title>中医</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020070229.html</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020070229.html</guid>
      <description>传统医学 华佗的著作和药方已佚，有据可查的事迹也只是三国志，华佗别传等。大部分人的印象依据杜撰的三国演义中为曹操开颅的事例。故事里的主角曹操都不信此套，却让后人如此坚信不移。尽管不能否认华佗的存在，但后人未能继承华佗成就也说明了传统医学的缺陷和不确定性，对传统医学的讨论更多的不是信与不信，而在于思维逻辑的方式，世界观的认知。
现代医学也不是完美无缺的，也有大量未探未治愈的疾病。同传统医学的区别在于科学分析，不断完善。科学容许所有人怀疑，只要你有理由，可以推倒巴斯德、孟德尔、沃森和克里克等泰山北斗级人物的理论。但这种颠覆和怀疑在中医领悟可以说离经叛道、欺师灭祖。
我们要不要弘扬历史悠久的印度阿育吠陀医学，非洲传统医学，古埃及医学
同样历史悠久，传承数千年，养育一方水土。现代医学大力发展之下，这些地区的传统医学依然蓬勃发展。
传统医学有局限性，现代医学有适用性。
对比传统医学和现代医学，首先明白，对比条件和标准问题，很多人以历史，文化的高度故意提高了传统的地位，导致两者对比并不公平公正。很多人看问题不是以马克思辩证唯物主义和科学的世界观方法论为出发点，总会不由自主的夹带自己的保守刻板的私心。在历史，文化，传统，伦理上存在偏执，无法以科学的态度看待问题。
西方医学研究生物的物质形态，细胞蛋白质等微观层面，而生命本身包括精神意识是复杂的无法被机械化物质化研究的。
那怎么办，细胞蛋白质随着人类的科学技术水平可以通过放大镜显微镜接触观察研究。你那精气神能观察研究吗？如果现在一个大神能让人学会研究这些理论上的东西，如果现在人人能悟道修法那没的说。但很可惜这些东西人看不到摸不到，历史上也没几个大神级人物接触到。扁鹊对于病入骨髓的病也无能为力，张仲景的家族也因为瘟疫死伤无数。
精气神，中医的道人类研究不到，看不到，也很难推而广之，从古至今病症和瘟疫依然肆虐，甚至技术顶尖的皇家御医也对皇子夭折皇帝盛年而亡束手无策，面对大范围的瘟疫也无能为力。张仲景研究瘟疫时，如果有人告诉他，有一种可观察可接触的办法可以看到致病菌，有一种手段可以杀死这些害人的东西，他会如何选择？
毒药为什么致人死亡，凭什么活蹦乱跳的人一小滴药水很快就能致死？重要的是这种毒药怎么解？更重要的是解药怎么重复制取？这种你不了解致病原理，不了解毒药的化学成分和化学性质是很难有所突破的。
天花为什么可以通过种痘形式预防，原理是什么？很多人没注意到，中国古代通过实践发展种人痘可以预防天花，但是由于理论本身的不了解，种人痘极度危险，失败率很高。就连清朝还出现皇家感染天花，可以说古代中国对天花的防治是失败的。没有理论支持的古代医术是存在极大问题的。
科学方式医学是近现代才发展壮大的，并不在于其理论和文化底蕴。而是随着人类生产力水平的发展，认知进步，技术爆炸。人类可以使用更高级的工具，接触更多的资源去研究探索世界，认识世界。并且并不会局限性某本典籍某位先贤的局限，西方医学发展的本质是人类技术爆炸在一个方向上的释放。
拜经济发展和技术进步，人类开始有能力研究现代医学又能支持部分人研究传统医学，这不是一个单选题，但真实的疗效开来前者成果更显著。人类的平均寿命显著提高就是一个体现。特别是皇帝或领导阶层的寿命。人类不是先贤仙人，理解不了高深莫测的玄学理论，有人理解就放任他们研究，奈何只听说过诺贝尔物理学，医学等奖，没有哪个国际形式的玄学奖，道学奖，仙学奖。
对待哪些道学，仙学，传统医学。社会是放任其研究的，有成果就会有资源来支持，没有成果就只能慢慢凋零，任何逆流而上的就不得不怀疑其目的。
现在医学对病毒，这种极其微小极其简单的生命形态很困惑。研究不透，这不是现代医学的问题，这是人类局限性问题，人类没能掌握且无从掌握生命的本质和万事万物。所以只能通过一点一滴的技术手段，用对病毒来说极其拙劣的手段研究它对付它。就像数学家求圆周率一样，圆周率是人类无法理解的超越数，人类就不应该着眼于探求圆周率的精确值最后一位，应该放眼于自己能力范围内的不断求值满足要求。就像现代医学来说，人类掌握不了万事万物的规律，人类身体的大智慧。现代医学无法让个个长命百岁，但可以让人平均寿命比古代多活三五十年，残疾先天疾病也能过的很长过的很好，这就是成功的。肝不好，切除一部分还能恢复，肾不好切除一个也能活十几年。甚至肺，心脏都能更换。这是现代医学对人类社会的伟大贡献。
传染病，对待传染病跟普通疾病是不同的，他首先不应该关心怎么治愈，而因为关心如何控制，如何防止大面积传播。针对长期无法治愈的传染病，不需要医生出手，直接隔离就能解决问题。这是一个很难接受但又很现实的选择。如果你某个组织染病，而且生命堪忧，你是坚持花更多时间研究治愈最终结果不一定成功，还是切除阻断来自保？如果医生是神仙那自然药到病除，但现在治不了的，医生只是凡夫俗子。坚持人体道法自然万物相生相克等等，还是切断自保？
知识体系 传统医学是以一套完整的理论构建的体系，跟科学（自然科学）体系是并行的。
何不食肉糜 那些说西医就是哪里痛治哪里，治不好就割掉的理论，颇有些当年说出“何不食肉糜”的晋惠帝的模样。遇到深度感染，严重疼痛一时找不到方法，还危机患者生命的症状，不切除保命还能怎么办？如果有其他方法有效，谁愿意一刀切除？三国华佗还给关羽刮骨疗伤了，给曹操提议开颅医治，如果有其他行之有效的方法，谁原因冒风险动刀子？
就连神医华佗都会在不得已的情况下动刀子，现代人有何理由对西医的手术嗤之以鼻？</description>
    </item>
    
    <item>
      <title>新的更新方法</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020070297.html</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020070297.html</guid>
      <description>git仓库多处推送 为了避免个人失误或者其他故障造成git仓库被删除，丢失。我总是将一个git仓库同时推送到github，gitlab，coding，阿里云code等地。之前的方式在是本地操作执行git remote set-url --add origin xxxx.git这主要是为了防止不经意间的错误删除和修改。
但是每次git clone 以后都需要增加几个备份用的git remote 显得太过繁琐，特别是部署持续集成之后，所有的代码都完全交给git代码托管，本地使用时对特定内容进行git clone即可。这种操作简化了操作步骤，但损失了同时推送到多个仓库的备份。
新的多仓库备份 在coding上创建一个空的仓库，上传代码如下： 注意：密钥内容不可见 为替换掉的私钥内容。
pipeline { agent any stages { stage(&amp;#39;检出&amp;#39;) { steps { checkout([ $class: &amp;#39;GitSCM&amp;#39;, branches: [[name: env.GIT_BUILD_REF]], userRemoteConfigs: [[ url: env.GIT_REPO_URL, credentialsId: env.CREDENTIALS_ID ]]]) } } stage(&amp;#39;并行阶段 1&amp;#39;) { parallel { stage(&amp;#39;拉取B仓库&amp;#39;) { steps { sh &amp;#39;git clone https://${B_USER}:${B_TOKEN}@e.coding.net/denalon/code/b.git&amp;#39; } } stage(&amp;#39;拉取lambda仓库&amp;#39;) { steps { sh &amp;#39;git clone https://${B_USER}:${B_TOKEN}@e.coding.net/denalon/dev/lambda.git&amp;#39; } } stage(&amp;#39;拉取note仓库&amp;#39;) { steps { sh &amp;#39;git clone https://${B_USER}:${B_TOKEN}@e.</description>
    </item>
    
    <item>
      <title>制度</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020070341.html</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020070341.html</guid>
      <description>欧美国家没有义务对其他国家推广民主
我们总有人认为，美国一些西方发达国家会借推广民主的名义对别国干涉。总认为欧美是文明和民主的播种者。这是大错特错的，民主不是靠外国播种移植的。现代民主的前提是资产阶级革命成功,资产阶级掌握政权并具有一定经济基础。只有符合这种条件，社会才会朝向民主社会过渡。
欧美国家并没有义务对其他国家推广民主制度，相反如果美国需要在一个国家摄取大量利益，这个国家是专制制度的话美国付出的成本会更低，因为仅需要收买少部分掌权者就行了。而民主制度的话他们的收买成本将大的多且具有不可控性。
另一方面，欧美同其他国家的政治博弈中，如果这个国家政局不稳，内部斗争不断。那么帝国主义会收买一个帮手稳定局势，以建立安全的贸易环境。贸易是资本主义摄取利益的基本。而当这个稳定的国家不断发展壮大，在相互贸易中威胁到了帝国主义的利益，那么帝国主义就需要寻找机会搅乱社会秩序，政治体制。以降低该国在相互贸易中的领先地位，保障自身利益。
我们总有人认为，美国一些西方发达国家会借推广民主的名义对别国干涉。总认为欧美是文明和民主的播种者。这是大错特错的，民主不是靠外国播种移植的。现代民主的前提是资产阶级革命成功,资产阶级掌握政权并具有一定经济基础。只有符合这种条件，社会才会朝向民主社会过渡。 反对集团中的坏分子不代表反对集团
每个人偶尔有疏忽的时候做错事，每个集体总有人不小心犯错。犯错，失误是无法避免的。承认错误，承认不足并不是在贬低自己而是期望进步。
集体，组织里也总会有某些人由于各种原因违反组织规定而犯错，组织对他们错误行为的处理态度会在组织内外产生影响。秉承公平正直的态度会给组织带来正面影响，而偏袒徇私就会组织带来负面影响。
有些人面对外人批评组织内的坏分子，恐惧，惊慌地无法摆正自己的位置，往往将自己同组织内的坏分子捆绑一起。</description>
    </item>
    
    <item>
      <title>文化</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020070361.html</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020070361.html</guid>
      <description>中国的传统文化其实外表是儒家内在是法家。​ 法的核心思想并不是我们传统认识的道理，规范。而是规，刑，制这类管理，要求的理论。什么理论可以为‘法’？人们的大多数认识那叫‘理’。理同法有关键但是还是有区别。
法是规则，这些规则有的是人民广泛认同的道理，有的是自然发展万物繁衍的规律，同样也有的是统治社会的伎俩。
传统文化中的儒表法里由于其历史和 阶级统治等诸多局限性制约，实质上是被曲解变异的理论，所依据的法是一个阶级统治的工具无法同现代文明的理念共存。
懂得中国式潜规则的人是学到了潜在的法家思想。而真把儒家思想奉为真理的人都成了被统治的对象。 ​​
穷人思维 「穷人思维」其实是一个成功学创造出来的概念，它本身是不存在的。
绝大多数回答提到的「穷人思维」，基本可以分为两种： 一是「因为他们的思维模式是这样的，所以他们只能是穷人」； 二是「因为他们是穷人，所以他们的思维模式只能是这样」。 其实，这两种说法，都有点似是而非。
是思维模式造就的贫穷吗？不是的。造就贫穷的，更多的情况是外界的影响和社会因素。比如城乡差异，比如交通不畅，比如家庭负担太重。绝大多数情况下，一个人如果贫穷，只是因为他走不出上一代人对他的束缚而已。这并不是他「思维模式」的错。
同理，如果说因为一个人是穷人，他的思维模式就是「穷人思维」，那就有点因果倒置了。比如，很多朋友说穷人不具备「用金钱换取时间」和「进行长期自我投资」的意识，可是，穷人的确就是缺少金钱而非时间，眼看着下个月就揭不开锅了，还能如何要求他进行长远的投资和规划？
那么，穷人和富人（不那么穷的人）相比之下，在思维层面上，最大的区别在哪里呢？
我觉得，是一种信息不对称。
作为穷人来说，他们的局限性，比如远离大城市、不懂互联网、不了解业界趋势，等等，导致他们的信息极其匮乏。而反过来，这种信息的极度匮乏，又让他们的思维变得僵化、狭隘、瞻前顾后，导致他们一辈子保持这样的生活状态，难以走出来，摆脱贫穷的状态。
很多时候，我们觉得穷人具备的一些共性，比如过于急功近利、迷信人际、盲目冲动，等等，其实本质上，都是出于两种心态的共同作用：一是对现状的「不安全感」，二是对于未来期望的「不确定感」。这两者共同作用，导致穷人过于重视当下的、可获得的收益，而对长远的、抽象的、需要付出一定代价的收益心怀警惕。
而本质上，这两种感觉来源于哪里呢？其实都来源于信息不对称。对于现状的不安全感，是你不满足于现状，却又不知道如何去改变；对于未来的不确定感，是你期望改变，却又不知道风险有多大，怎样才能成功。
我也经历过一段「穷」的阶段，现在回想起来，对于那段时光，最大的体会就是「不安定」，像一个被困在枯井中的孩子，惶惶不可终日。你不知道明天会怎么样，不知道该往哪个方向努力，拿着很低的工资也不敢跳槽，因为不了解其他行业，不知道会不会有坑，不知道该如何规划自己的未来。
而这一切，其实都源自于「无知」。正是因为无知，使你始终缺乏信心，无法向前迈步，只能困守在自己的舒适区里。
更可怕的是，因为无知，你不知道该如何脱离这种状态，甚至，你都不知道「你还有机会脱离这种状态」。
当然，这并不是说，你获取到了足够的信息，就能脱贫致富。不是的。这是一个必要条件，而不是充分条件。
但是至少，你可以避免P2P、传销、炒股、期货、诈骗、兼职……一系列的陷阱和障碍。你可以更好地规划自己的未来，开始树立起目标，开始对周围的一切建立信心。
然后，才是第一步的开始。
知乎 Lachel
我觉得贫穷不仅是个人问题，还有很大的社会问题，其中一点就是这个社会对穷人的一种歧视，我再这个答案下面就看到了各种歧视，这也是导致贫富进一步加大的重要原因。因为我们觉得穷人是自私，贪小便宜，无理想的，所以很多人会歧视穷人，这也符合很多人的优越感，但是 这会进一步加大这个社会的矛盾，其实各种仇富也会应运而生。
穷富有个人问题，但是很多人将穷人贴上了很多标签，穷富说到底无非是个赚钱的能力。这个社会究其根底就是一个以实力说话的社会，贫穷在很多人看来不是仅仅代表赚钱能力，在很多人看来就是一种比较合理的结果，很多人的逻辑就是：就是因为你不思进取才会贫穷，就是因为你的种种原因才会贫穷。但是忘记了一个条件，很多人的起点是不一样的，很多人的运气是不一样的，穷人有自身的因素，但是社会因素也会占据太大的部分(在我国大家也更深有体会)。给穷人贴上任何标签都是不合适的，这些标签适用于每一个人群，不仅是穷人，这就跟给富人贴各种标签是一样的。
屁股决定脑袋很正常，没有人能脱离阶层看问题，但是最起码要做到不能将一些偏见合理化，白人普遍歧视黑人，但是这并不意味着可以将这种偏见广而告之并合理化啊！这才是最恐怖的啊，这是将偏见作为主流并推广啊！还有有人说穷人思维只是说穷人中普遍存在的思维，我只想说，凡是穷人中普遍存在的思维就是人中普遍存在的思维，之所以穷人表现出那种特点，不是思维的缘故，是现实的缘故。这跟思维无关，举例来说。现在如果讨论什么是“中国人思维”，如果有人说：中国人都怕政府，做什么事情都要考虑领导的意见，这是中国人的思维特点。这能算思维特点吗？也算是吧，但是这只是一种赤裸裸的现实下面不得不采取的一种思考问题的方法，这根中国人无关，而是跟社会环境有关系。这种思维特点背后其实是“趋利避害”啊，这不是人人都会这样么。只是中美环境不同表现不同罢了。
区分思维的时候我们可以说有逻辑的思维，无逻辑的思维，超前思维，创新思维。但是不能说穷人思维，因为并没有所谓的固定的“穷人思维”。
当我们讨论上层人士的时候，我们总是认为他们是由于有各种见不得光的手段才能致富，我们总是会疾呼正义，当然更多的时候一些人天天疾呼的公平打着为穷人的旗号，其实也只是希望自己分到一杯羹，他们只是仇富，他们却不怜悯穷人。当我们讨论穷人的时候，我们就会认为他们是活该，我们认为这是理所当然的。其实细细的想一下，那些富人大概也是这么看待大家的吧！由此看来，每个阶级都在鄙视着次等阶级，并且将其合理化。
穷人处于鄙视链条的底端，当权者鄙视有钱人，有钱人鄙视中产，中产鄙视穷人，穷人，额，所以么看来只能选择极端的方式了。心态好的也罢，心态不好的，出现各类瓜子哥也是很正常的啊。
很多评论说穷人思维是使人导致贫穷的思维，我真不知道什么思维能使人导致贫穷。不负责任算不算？A不负责任，经济危机来了，然后赶紧转移财产，导致很多工人不能发工资，A没有破产，还是富人；B很负责，将所有财产都用来挽救公司，后来破产了。请问负责算是穷人思维还是富人思维。再说了，为什么将很多思维归为“穷人思维”呢？这本身就是对穷人的歧视。还有大家在印证的时候肯定会将穷人和思维联系起来。有人说穷人思维不一定导致贫穷，只是说一种思维，我现在一直在说没有这种思维，现在假如我出了一本书叫做“中彩票秘籍”，你买了按照方法实践结果没中，然后我告诉你，这本书只是告诉你一种秘籍，但是按照这种秘籍不一定会中彩票，你是不是想拍死我？还有人批判我其他的，我承认“敏感，时间廉价”这些思维是错误的，但是你可以说这些是错误的，是不是你将其归为“穷人思维”本身就是不对的呢，为什么敏感不能归为“富人思维”，不能归为“文学家思维”，我从没说这些思维是对的，但是我只是说这些思维跟贫富无关，所以反驳我之前要找好切入点。
信仰之路 探寻科学的世界观和方法论
出生到成长，我们的思想被控制着
谣言，谎言阻碍我们正确的认知
信息不对称
利益之下不存在真实
历史是被人有意控制的
周孝正】法媒调查: 越是底层越对中国的未来充满信心。
人是生活在不同信息圈子里的。越是社会上层人物，对社会的信息来源越广，对社会的了解就越全面，判断也越趋理性。越是生活在社会底层，越是信息来源单一，越容易偏执与激动。
有家法国杂志做了壹期中国专辑，主编告诉我说，他们来中国采访过不少人，生活条件很不错的学者、成功商人和官员，对中国的未来忧心忡忡。而生活条件不太好的底层民众，对中国的未来则反而充满信心。
他问这是为什么？ 我说，北京奥运会期间全场起立唱国歌时，我能感到贵宾座位上的人只是做做样子，完会是形式主义，而普通座位上的人们则唱得热血沸腾，斗志昂扬！为什么会这样？信息的严重不对等导致了判断力上的巨大差异！越是知道得多，就越是清楚问题的严重性；而越是知道得少，就越蒙昧，越乐观，越无畏。 所谓走“群众路线”，就是要经常做群盲的宣传工作，打鸡血！
得从中国极权文化传统说起。在这样的文化中，中国人把人作为工具来看待的，人与人之间的关系是主奴式的，强者是主人，弱者是奴才，社会道德则完全偏向于主人。在父母与孩子之间，父母自然更加强大，因此就像长子继承制那样剥夺了孩子的自由，出现父母单方面统治的局面，而孝道正是维护这类统治的意识形态工具。这样一来，父母们也就有恃无恐了，即使后来孩子长大之后力量强了，也有整个社会伦理压着，想造反恐怕是不那样容易的。 除了天然的力量差别外，孝道还是极权文化为了自保而给予父母一种武器，目的是消灭孩子的自我意识。极权文化的天然敌人就是自由发展的人性，为了把这样的自我扼杀在摇篮之中，社会要求父母对此加以严格控制。好像打仗要发给士兵武器一样，孝道就是极权文化发给父母的精神武器，它希望能够抹杀天然的舐犊之爱，而代之以社会教化的支配权，使得孩子通过支配式的家庭生活训练，顺从于社会中主奴逻辑与极权道德。 除了与父母的关系外，孝道还能在社会中起到回避问题和转移矛盾的作用。由于对孝道的过分强调，中国人评价某人的时候，总是把他与父母联系起来，而忽略其余的部分，这又维护了中国文化的极权逻辑。一个强盗尽管作恶多端，但只要他能尽心养活自己的老母亲，似乎也是可以得到原谅的。一个艺术家为了尊严不与世俗同流，只能过穷苦的生活，可是却会因为无力尽孝而遭到讥讽。看来在中国文化中，孝的魔力的无穷的，这里我只能套用莎士比亚的名言来说明了，“孝这东西，只这一点点，就可以使黑的变成白的，丑的变成美的，错的变成对的，卑贱变成高贵，老人变成少年，懦夫变成勇士。它可以使受诅咒的人得福，使害着灰白色癫病的人为众人所敬爱，它可以使窃贼得到高爵显位，和元老们分庭抗礼，它可以使鸡皮黄脸的寡妇重做新娘”。 中国文化中的孝道恰恰是利用并且玷污了这一点，把它改造为培养奴才的工具。而对于中国社会中的种种弊端，像孝道这样的扼杀</description>
    </item>
    
    <item>
      <title>记录</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020070317.html</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020070317.html</guid>
      <description>胡格诺 由于胡格诺派的不妥协的强硬态度，使该事件成为法国宗教战争的转折点。 1572年8月24日凌晨，巴黎数万名天主教民伙同警察士兵对城内的胡格诺教徒进行血腥的大屠杀，他们根据事先画在胡格诺教徒居所门前的白十字记号闯进屋去，把多数还浓睡未醒的人尽行杀戮，然后将尸体抛进塞纳河中。 包括科利尼上将在内的高官贵族都被处死，连查理九世的妹夫亨利及孔德亲王都被迫改宗天主教。继巴黎大屠杀之后，许多其他法国城镇也发生了屠杀胡格诺教徒的事件。由此又引发了一场旷日持久的宗教战争， 直到1598 年南特赦令颁布后才告停息。
古巴导弹危机 古巴危机是现代历史中的一个转折。两个超级大国都认识到，“强权政治”已经进入了死胡同：没有哪个国家敢于使用原子武器，如果它不想毁灭自己和整个人类的话。也就是说，双方都知道无法战胜对方的。所有参与者都清楚，必须在相当长的时间里和平共处。莫斯科和华盛顿之间建立了“热线”，以便有可能在危机时刻尽快达成谅解。同时也开始了犹豫的停止军备竞赛的尝试。两个超级大国的关系，从攻击性的对立变成了“和平共处”。
双枪老太婆 真实的被民间传颂的 抗日英雄 双枪老太婆 于1950年被解放军处决，现在的双枪老太婆形象是1957年写出来的，根据多个共产党员实际艺术加工，杜撰出来的形象。
中东 整个中东都是阿拉伯人的，人家满世界流浪的以色列人辛辛苦苦找到一块地，面积只有1.54万平方公里。阿拉伯人就不愿意了。叙利亚18万 约旦9万 伊拉克 沙特阿拉伯就更不用说了都是一个相比幅员辽阔的国家，怎么就容不得人家以色列人？归根究底就是阿拉伯人的贪婪和野蛮，从人肉炸弹就能看出来阿拉伯人的本性。 沙特阿拉伯富的流油，奢华程度是世界都不能比的，而坐视饱受战乱的同为阿拉伯人的巴勒斯坦人挣扎而坐视不管，黎巴嫩整天内乱不断，殃及以色列人，以色列进攻黎巴嫩。这个弹丸小国，中东因为这个整天自己打自己的国家，平白增添了多少冲突和战争。
历朝历代 历朝历代都一样 找一个合理的借口利用老百姓夺权 利用完以后给老百姓一点甜头 无知的老百姓就乖乖当顺民 当权者很舒服的统治天下 享受富贵 玩弄权力 爱民如子听的多了 也没见过哪个帝王将相真的像父母一样自己舍不得吃穿 把好东西都留给子女的
三国对峙 美国 俄罗斯 中国作为目前世界三大具有核武器打击能力的国家，目前的对峙属于动态平衡的三足鼎立态势。三个国家谁也无法完全击败对方，任意一国利益受损将严重影响这个平衡态势。三个国家很长一段时间不可能出现大规模的冲突。美国面对公开的对手俄罗斯，无意将中国进一步推向绝路。中国的实力无法对抗强大的工业国家，不可能主动挑起事端。俄罗斯同中国是公开的友邦，不希望美国一方做大，又不可能不提防中国超越自己。三国像三个共同扛着一颗巨石的巨人，这个巨石名为战争，三个巨人中谁离开都将给剩下的两人带来更重的负担，谁都不希望巨石砸到自己。 大规模冲突不会发生，但是小范围摩擦还是有的。南海问题，台湾问题，朝鲜半岛问题。这些地区摩擦是可以通过协商，缓和的。但是近期朝鲜的核武器行动已经在朝鲜半岛问题上太过激进，朝鲜本身没有参与三国竞争的理由，但是现在却脱离三个大国一意孤行的扰乱三国动态平衡的态势，将朝鲜半岛变成火药桶，中国方面对此面对选择是尽一切可能熄灭这个导火索还是放任不管让他点燃战争的火药桶。基于三国动态平衡的态势，中国出面禁止朝鲜核试验或者放弃对朝鲜的支持是为仅剩的解决方案。 谁是卖国贼，谁是碍国贼。 经常有人给评论社会问题的人贴上汉奸，卖国贼，美分的标签。其实这类现象是有计划的将国内社会矛盾转移到对外矛盾上，以此来转移人民群众对社会问题的注意力。对指出贪污腐败，钱权交易，舆论控制的不公的人员打击成国家敌人，外国间谍以国家的力量保障既得利益者，这种手段自古以来都习以为常，而且全世界统治阶级都会。
那些评价社会问题的人不见得就对美国一些西方国家抱有什么幻想，没有一个土生土长的中国人希望被鹰勾鼻高白脸的外国人统治，他们的民主自由理念不见得在中国大陆能水土适宜。中国就应该走中国自己的路。他们不是国家的敌人，只是有人出自自己私心，基于狭义的利益关系而被推向舆论的对立面。社会，历史，有识之士终究会给他们一个公道。
权力的集中 专制本质上是权力的集中，民主本质上是权力的分散。专制社会的主流思想是集体主义，强调集体，社会，国家的团结和服从。民主社会的主流思想是自由主义，强调个人的权益，自由竞争。我们不能简单的从表象看待这两种社会差异，任何一种制度它能出现而且稳定发展都有它历史，政治，社会的种种原因。任何一个制度统治社会都有它无法控制的成本问题。专制社会由于权力太过集中独断，其统治成本是腐败问题。腐败导致资源分配不公，社会矛盾。民主社会的统治成本是权力滞后，因为权力过于分散，在事情的处理繁琐，延迟。社会改革缓慢和资源分散。
其实，这两种制度都是人类发展历程产生的，专制制度在人类历史上已经有数千年，人类并非就在这种制度下会民不聊生。无论民主于专制，人民群众的生活状况都是基于对社会资源分配，只要这种分配还是讲究公正严明，人民生活就有保障。
意识形态决定于社会主流思想。我们在一个集体利益高于个人利益的社会里，不去改变观念，而盲目的引进西方民主思想，势必会带来冲突和矛盾。民主思想要在一个国家生根发芽，社会主流思想，舆论导向起到决定作用。</description>
    </item>
    
    <item>
      <title>设计</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020070331.html</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020070331.html</guid>
      <description>图片设计 PS AI
前端设计 htmi cs
文档设计 AI id
设计 logo ui
一位和零维 就是一个不可量的点，没有大小，尺寸，位置。不具有实数特性。
一维无数点构成了简单具有位置量的线，具有一个实数纬度，一个虚数纬度，无穷量
二维空间是两个实数纬度，一个虚数纬度
一个虚数纬度，比无数不同于一维的无穷量的虚数。
三维空间是三个实数纬度，两个虚数纬度，其中一个虚数是类似二维。另一个无数 可能是时间，
那么思维空间 应该有四个实数纬度，至少两个虚数纬度。四维空间不是三维空间再加时间。本质很复杂，很有可能多出来一个人类无法理解的虚数纬度。</description>
    </item>
    
    <item>
      <title>代码分散</title>
      <link>https://pub.oribos.cn/web/docs/2020/202070307.html</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/202070307.html</guid>
      <description>多个子模块 需要将大量内容同步到代码托管上，由于代码过多，一次clone并不适合整体下载。需要分散成子模块更新。
创建一个同步其他仓库的自动操作 一层包含二层，三层子模块，部署在托管服务器上，需要时再使用git submodule 同步
二层，三层。尽在需要修改，新增，删除时从托管中心下载和上传相应代码。
功能代码，通过代码运行，同步不同git仓库的代码更新
资源的合理备份 资源随便保存一下，如果无法搜索和找到就跟没有备份没区别，因为混乱的备份会让有价值的内容淹没在无用代码海洋里。</description>
    </item>
    
    <item>
      <title>2020 07 03继承</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020070313.html</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020070313.html</guid>
      <description>尧舜禹 尧舜禹时代的禅让并非基于血缘或亲情等甚至道德人品等人为因素判断，尽管有些认为是他们同属黄帝血脉，或者是前任考察继承人德行行为做出来的。远古时期，由于人的活动范围极度有限，一个地区随便找找都有血缘关系，而且生活条件有限，血缘关系并无法有效决定部族权力。最根本的原因是他们本身已经是某部族颇有权力的领袖，全部族的帝王是他们彼此竞争的结果，禅让只是由于前任实力衰退，被实力激增的继承者所威胁，缺乏更多政治手段而进行的政治妥协。
帝王是很难决定继承者的，秦始皇不能，汉武帝，唐高祖，宋太祖，明太祖都在继承者的选择上出现致命问题。帝位继承不是因为血缘亲情，而是因实力，政治，军事等权力因素。继承者只有具有这些，帝位继承才成功。</description>
    </item>
    
    <item>
      <title>树莓派 &#43; 延时摄影</title>
      <link>https://pub.oribos.cn/web/reprint/2020070206.html</link>
      <pubDate>Thu, 02 Jul 2020 19:31:55 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2020070206.html</guid>
      <description>引用自reuixiy
1
树莓派，还是将近四年前买的，当晚下单时就十分激动，到手后双眼看着精致的外盒，更是十分欣喜——这手中的小小「绿色卡片」竟然能运行 Linux！还有可以连接传感器可以控制外围电路的 GPIO！
当时急着将买的亚克力外壳、散热风扇装好后，安装配置好系统就折腾了一个 WordPress 博客，弄了弄内网穿透。后来，又购买了一些传感器，以及一个红外夜视摄像头，尝鲜物联网。再后来，除了用它偷窥了一只突如其来的小壁虎，除了去年临时用它赶制了用以应付学业的一辆 Wi-Fi 连接手机网页控制的遥控小车，就吃灰了。
尽管如此，前段时间来深圳时，还是将这个依旧十分精美的小玩具带上了，虽然我不知道它能否再次通电。到深圳后，有感于眼前壮美的天空，有感于这个城市紧张的快节奏生活，前几天傍晚就有了这样的一个想法：树莓派 + 延时摄影！
出于对 8GB 的 SD 卡的担忧，想着是否可以将图片存放在电脑上呢，于是便有了 raspi-timelapse——以树莓派为终端，数据全部「上传」到电脑。代码比较简单，操作也不复杂。如果你之前没有接触过树莓派，可以参考下方的教程。
教程 安装系统 下载最新的 Raspberry Pi OS Lite 系统：
1 wget https://downloads.raspberrypi.org/raspios_lite_armhf_latest -O raspios-buster-lite-armhf.zip 将 SD 卡接入电脑，并将系统写入（回车前..注意..检查 SD 卡的设备名）：
1 2 3 lsblk -p umount sdX1 unzip -p raspios-buster-lite-armhf.zip | sudo dd of=/dev/sdX bs=4M conv=fsync status=progress 结束后，将我提供的两个文件，ssh 和 wpa_supplicant.conf 文件复制到 SD 卡中的 boot 文件夹下。第一个文件的作用是开启 SSH，第二个文件的作用是连接 Wi-Fi，里面的内容如下：
1 2 3 4 5 6 7 8 9 country=CN ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1 network={ ssid=&amp;#34;&amp;#34; psk=&amp;#34;&amp;#34; scan_ssid=0 } 将你的 Wi-Fi 名填入 ssid，密码填入 psk 即可。如果你的 Wi-Fi 设置了隐藏，则将 scan_ssid 修改为 1。</description>
    </item>
    
    <item>
      <title>日记2</title>
      <link>https://pub.oribos.cn/web/blog/2020/202070203.html</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/blog/2020/202070203.html</guid>
      <description>程序员困境 程序员跟产品经理的矛盾
互联网技术，信息技术，计算机技术目前采用的基础是数学理论构建的一阶谓词逻辑。对信息进行了数学概念处理，而这种处理导致某些概念和设定在日常生活中是反人类的。
比如最简单的 密码复杂度，计算机应用上推荐复杂的密码，包含越多的密码被认为是“最优的”。然而，显示生活中，对于初次接触某个产品，自己并没有必要为此生成一个相当复杂的密码来保护数据，可能这个产品是测试，试用，用完即弃的。就比如新建一个银行账户，我没必要购买安全险，设置安全令，配置密钥。就为了存储2块钱。这个账户可能就用着一次。
可以看出，纯数学理论，数字化的世界跟人类本身是存在冲突和矛盾的。
可能会问，复杂的密码，严格的安全设置并没有问题呀，为什么会有矛盾？
程序员为了养成习惯，对于安全信息是要求较高的，重要的安全信息是不应该外传，泄露的。因为那样可能导致非常严重的后果。他们面临的是大量的信息，多重的设置，复杂的安全信息。而对于用户来说，安全信息是可选的，可以用完即弃的。这个密码输入一次，下次再想起来登陆可能是几年以后了。登陆不上？注册太麻烦？用户想到的不是满足条件，而是换一个家看看。。。
数字化不是最优解 尽管程序员所具备的数字理论可以为日常生活轻松解决许多问题，让各类复杂问题简单化，合理化。然而日常生活是无法完全转化成数字化处理，某些概念，设定并不是唯一的，确定的。比如，最新的手机系统，电脑系统并非是用户最喜欢的。高级的安全设定往往是用户厌恶的。
验证码对于互联网技术来说，是必要的。
但是，对于用户来说是否是必要的？使验证码只是为了将不方便从服务商转嫁给用户
强制使用github下载资料，必须使用github下载
这种仅使用一个下载方式的设计极其无脑，如果github访问故障应用就根本无法使用。而且最关键的，配置文件很难修改，很难使用备用下载源。
程序是否在下载，没有进度，没有下载速度，没有预计时间。甚至连程序本身是否在运行都不清楚：
使用github获取代码本身并没有问题，问题在于，这些无脑设计的应用仅使用github作为内置下载源，在github下载无法满足要求的情况下，可以通过中转，更改下载源以获取文件。比如npm使用的cnpm淘宝镜像。而go get没有提供合适的镜像源。而hexo 的初始化，非要去从github下载主题，如果提前下载好主题，又提示目录已存在。 一段代码 server { listen 80; server_name dev.ufs.im; # 改成你的域名 rewrite ^(.*) https://$server_name$1 permanent; } server { listen 443 ssl http2; server_name dev.ufs.im; charset utf-8; location /config { proxy_redirect off; proxy_pass http://127.0.0.1:3000; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection &amp;#34;upgrade&amp;#34;; proxy_set_header Host $host; # Show real IP in v2ray access.log proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } # ssl配置 ssl_protocols TLSv1.</description>
    </item>
    
    <item>
      <title>2020 07 02理念</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020070201.html</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020070201.html</guid>
      <description>理念 我是没有义务将自己的认识分享出来的，为什么？因为价值理论下，获得不了价值是没有动力去做这件事的。
为什么我要分享？因为分享是为了交流、探讨，辩证，不断完善。所以，正确的知识是天然需要分享出来的。
价值差 是人的认知的驱动力。人的认知以及很多行为只有在出现价值差的情况下才会变动。没有价值差，人的认知只能停滞到静态状态。
学习 潜在的高收益促进人类渴望未来的高价值，才有动力学习。没有潜在高收益是无法促进学习的
人的认知是有限，世界无限，
疫苗的原理， 通过小的接触，促进大的理论认识，从而提升认知</description>
    </item>
    
    <item>
      <title>进步是无法回头的</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020070283.html</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020070283.html</guid>
      <description>理念2 进步是无法回头的
远古时期，人类狩猎一点受伤就可能感染而死，被毒虫毒蛇攻击几乎必死无疑。冬天冻死夏天热死，天气太干就大旱，天气湿润水涝。
而这些问题现在都得到了很好解决。承认细菌病毒，带来了大瘟疫仍时有发生。人类不再跳大神，祈祷等死。而是发现，控制致病蔓延。
人类文明的进步，从来不会离开人类的本性，傲慢和偏见是人类本性，事实上偏见无处不在。歧视某有色人种，歧视外地人，歧视异性，歧视残疾人。无论是西方东方主流价值都在讲歧视不对。但歧视依然存在。
问题在于这些价值观都在要求，强迫，影响他人。我认为歧视不合适，所以就得要求你和其他人不要歧视（按我认为的价值观）。事实上，这本身就是一种歧视。因为行为人本身就把对象当成特殊对待。
某一个断了一个胳膊，所以，我们要处处照顾他，毕竟断了一个胳膊确实做不好事。但是！你怎么就认为别人缺一个胳膊就做不好事？他要不要因为缺少一个胳膊就被别人整天另眼相待？
这些本身属于个体的认知跟其他人不同，且行为争议很大。不迫害不攻击就是对这种行为很仁慈的态度，不要妄想得到社会公认。把这些东西合法化更是滑天下之大稽。一味的包容甚至纵容对社会无易，甚至有害。
伪科学，迷信，阴谋论等等，
用户在A家平台上不断宣传B家好，如果A认为这是广告，营销而A没兴趣接受对B的营销。那么A是有理由拒绝关于B的任何信息，这是A的自由。而用户在A平台也可以投诉A的问题，这是用户自由。同样B平台也有拒绝A的自由，这是B的自由。用户也有选择A或B的自由。</description>
    </item>
    
    <item>
      <title>奇妙的空间</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020063011.html</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020063011.html</guid>
      <description>奇异博士的时间旅行装置塔迪斯 伪装成20世纪50年代英国警亭的时间机器塔迪斯（TARDIS，即”Time And Relative Dimension(s) In Space“的缩写）拥有神奇的特质：从外边看是一个警亭。里面空间却非常大。
互联网模型 通过一个浏览器，一根网线或一个wifi信号就可以连接全世界网络信息。通过一个网站，一个app就可以浏览到无数图书，视频，音乐等等。
一个网址就成就一家跨国公司，无数商品，全球的信息连接。信息技术也想神秘博士的塔迪斯那样奇妙。
互联网应用的异类 本质上互联网的信息可以通过一个简单网址，应用，就可以轻松获取海量信息。然而，某些产品和设计将互联网信息复杂化，封闭化。广告，营销，限制，跟踪等等。
这些异类既不是为了信息的安全可靠，也不是为了效率和速度。仅仅是为了推广商业价值，在开放的互联网海洋里攫取利益。
为了有限投放广告，他们用大量技术触发，投放，验证防屏蔽。为了推广产品，要求用户验证，注册，下载应用。
为了自己的标准要求用户，验证登录，密码，安装验证应用。
差异 美国人研发产品，发表标准，靠规范和协议赚钱
日本人研发产品，封闭产品，自产自销，靠独一无二的技术标准赚钱
把任何产品当成资本工具，把用户当韭菜，利用各种手段压榨。
资本垄断 小到一个微信产品，大到一个公司。目前的互联网产品越来越展现出一种资本垄断的味道。百度一下，大量的广告迎面而来，打开个页面，广告之后，提示你下载app，app要各种权限，各种充值。问题不在于这些资本运作，问题在于用户没得选！
ios安装应用要到应用市场，而应用市场严格区分地区，自有政策等等。跟苹果公司的理念冲突？app下架，你就无法安装到手机上。纵然是持有开放精神的安卓，应用下载也要强制连接到应用市场，而安卓应用市场google palyer国内打不开？一个应用而已，如果时应用服务商服务无法链接也就罢了，怎么安装这个应用也要转到千里之外的谷歌服务器上下载？类似的还有开源应用，已经形成了一种莫名其妙的默契，开源应用只在github上发布。哪怕是几百M的release程序也要往github上放。</description>
    </item>
    
    <item>
      <title>日记</title>
      <link>https://pub.oribos.cn/web/note/2020/2020062901.html</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020062901.html</guid>
      <description>提前退订服务器 将免费试用的服务器退订，将非业务的服务器退订。仅留下一个服务器做后端应用。
子域名都重新定义 kit.hbn.pub app.hbn.pub
dev.ufs.pub api.ufs.pub
取消的个人站点 部署在crm服务器上用来展示部分信息的站点被取消，但iis的配置仍保留，使用siteserver cms +sql server
gatsby 安装出现这个问题：
跳转 对于不常用的域名做js跳转，代码如下：
async function handleRequest(request) { const init = { headers: { &amp;#39;content-type&amp;#39;: &amp;#39;text/html;charset=UTF-8&amp;#39;, }, } return new Response(someHTML, init) } addEventListener(&amp;#39;fetch&amp;#39;, event =&amp;gt; { return event.respondWith(handleRequest(event.request)) }) const someHTML = `&amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;referrer&amp;#34; content=&amp;#34;origin&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;refresh&amp;#34; content=&amp;#34;1;url=http://b.hbn.pub&amp;#34;&amp;gt; &amp;lt;title&amp;gt;doc&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; .loading{ width: 80px; height: 40px; margin: 0 auto; margin-top:100px; } .loading span{ display: inline-block; width: 8px; height: 100%; border-radius: 4px; background: lightgreen; -webkit-animation: load 1s ease infinite; } @-webkit-keyframes load{ 0%,100%{ height: 40px; background: lightgreen; } 50%{ height: 70px; margin: -15px 0; background: lightblue; } } .</description>
    </item>
    
    <item>
      <title>最后生还者2</title>
      <link>https://pub.oribos.cn/web/note/2020/2020062907.html</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020062907.html</guid>
      <description>游戏剧情 前作，主角在拯救世界和小女孩生命的选择中，选择了拯救小女孩生命。
这一作，制作主把小女孩描述成抽大麻，搞百合，
各类无语 上作主角莫名其妙被杀
还要操作凶手，经历她的生活经历
女主角莫名其妙放弃复仇
游戏严格保密，游戏评测机构给出评价离谱,对剧情争议只字不提
玩家差评如潮</description>
    </item>
    
    <item>
      <title>0627日记</title>
      <link>https://pub.oribos.cn/essay/essay/2020/2020-06-27-%E6%97%A5%E8%AE%B03/</link>
      <pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/essay/essay/2020/2020-06-27-%E6%97%A5%E8%AE%B03/</guid>
      <description>网站仅保留一个地址 将所有网站域名解析，全部跳转到b.hbn.pub。此站点将作为唯一博文更新页面。其他跟此网站同步更新的页面暂不做修整，未做同步更新的将逐步放弃。
放弃了服务器作为页面展示，取消了海外服务器和国内服务器的前端服务功能，转而提供后端服务。
放弃了github pages gitlab pages coding pages作为博文更新。
国内页面仍保持不变 www.hbn.pub 专门用来展示个人信息的页面，将仅提供一个从不更新的单页作为备案信息展示。不会在此页面上展示更新内容。www.ufs.pub 同样如此。
.ufs.pub将仅提供后端服务内容，供业务测试，后端服务，静态资源仓库等功能。
域名 korlys.com
hbn.pub
ufs.pub
efs.app
===
ufs.im pfs.pub 和uns.pub域名在考虑放弃
ufs.im域名处于一个尴尬的位置，对此域名将修改个人信息，主要使用在海外服务</description>
    </item>
    
    <item>
      <title>迅雷下载</title>
      <link>https://pub.oribos.cn/web/note/2020/2020062701.html</link>
      <pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020062701.html</guid>
      <description>下载服务做不好 一个简单的程序，无法下载
无法暂停，停止
广告服务少不了 付费会员？广告也跑不掉 </description>
    </item>
    
    <item>
      <title>日记</title>
      <link>https://pub.oribos.cn/web/note/2020/2020062413.html</link>
      <pubDate>Wed, 24 Jun 2020 08:16:36 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020062413.html</guid>
      <description>ip白名单？ 云效2020代码托管，使用部署令牌时 强制要求使用ip白名单？
后续 事实上，可以通过设置0.0.0.0/0允许所有人访问
但是，由于自己偷懒，填成了0.0.0.0 仅允许ip 0.0.0.0 访问。导致没有ip可以访问。(&amp;gt;_&amp;lt;)
谨小慎微 我的文章，日记，资料都放到coding的代码托管上。🤔但是由于几次的手误操作，导致数据丢失，误删等。希望将coding的内容及时备份一份。之前只需要在git上添加一个git remote set-url --add origin xxxx就可以了。但是现在所有的代码都全部托管到coding上，本地并没有保存完整数据。这就给备份代理问题。更何况，由于资料是按不同功能分散在不同的仓库里的，并不能简单的将文件git clone就可以了。
资料必须保持一个持续记录，太多的分支版本，数据分叉会导致有价值数据淹没在垃圾信息中。
需求 将资料同步到git托管中心，
本地资源：NAS Y 本地资源：PC X
云服务：云服务器 X 云服务：对象存储 Y 代码托管 Y</description>
    </item>
    
    <item>
      <title>日记</title>
      <link>https://pub.oribos.cn/web/note/2020/2020062307.html</link>
      <pubDate>Tue, 23 Jun 2020 08:16:36 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020062307.html</guid>
      <description>反智社会 种族平等 性取向和性别平等 环保 传统文化 自由主义
老师不能把数学成绩的答案作为判断学生对错的依据，不能容不得别人自由想法？？2+2=22？？
特朗普建议消毒液内服，居然真有人亲身实践？？
北京猿人头盖骨化石 出土的北京猿人化石，大约生活在60万年前。北京猿人属于直立人，跟现在人的祖先智人不是一个人&amp;quot;种&amp;quot;。他们的区别比黑人白人的差距大多了。
语言 母语或者本土语言是用来日常生活交流的，国际语言是用来工作和同更广泛的接触交流的。
我们不是英国人，用不着非要按照英国人，美国人那样说一门“纯正”的外语。只要能正常交流就可以。“够用”就行，不应该要求“纯正”。
控制力 人类的控制力是许多烦恼的原因</description>
    </item>
    
    <item>
      <title>RESTful</title>
      <link>https://pub.oribos.cn/web/note/2020/2020062217.html</link>
      <pubDate>Mon, 22 Jun 2020 16:16:36 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020062217.html</guid>
      <description>通俗的语言解释REST，以及RESTful 看Url就知道要什么 看http method就知道干什么 看http status code就知道结果如何
RESTful service是一种架构模式，近几年比较流行了，它的轻量级web服务，发挥HTTP协议的原生的GET，PUT，POST，DELETE。 REST模式的Web服务与复杂的SOAP和XML-RPC对比来讲明显的更加简洁，越来越多的web服务开始采用REST风格设计和实现。例如，Amazon.com提供接近REST风格的Web服务进行图书查找；雅虎提供的Web服务也是REST风格的。REST 并非始终是正确的选择。 它作为一种设计 Web 服务的方法而变得流行，这种方法对专有中间件（例如某个应用程序服务器）的依赖比基于 SOAP 和 WSDL 的方法更少。 在某种意义上，通过强调URI和HTTP等早期 Internet 标准，REST 是对大型应用程序服务器时代之前的 Web 方式的回归。 使用REST的关键是如何抽象资源，抽象得越精确，对REST的应用就越好。
REST服务关键原则：
1.给一切物体一个ID
2.连接物体在一起
3.使用标准方法
4.资源多重表述
5.无状态通信</description>
    </item>
    
    <item>
      <title> 2020 06 22 网站备案的疑惑</title>
      <link>https://pub.oribos.cn/web/note/2020/2020062203.html</link>
      <pubDate>Mon, 22 Jun 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020062203.html</guid>
      <description>ICP备案 《互联网信息服务管理办法》指出互联网信息服务分为经营性和非经营性两类。国家对经营性互联网信息服务实行许可制度；对非经营性互联网信息服务实行备案制度。未取得许可或者未履行备案手续的，不得从事互联网信息服务 。 《非经营性互联网信息服务备案管理办法》于2005年3月20日起施行。办法指出在中华人民共和国境内提供非经营性互联网信息服务，应当依法履行备案手续。未经国家机关单位许可备案，不得在中华人民共和国境内从事非经营性互联网信息服务。
问题点 CDN 内容
服务器拥有多个ip地址，经常变动。且完全不固定，随时扩充变动。
当网页的内容是多地分发，全国节点更新。备案地在A处，服务器资料在全国各地，甚至还有香港节点。备案地址怎么选？
网站由多种服务器构成，表现页面由前端服务器提供，数据是存放在其他服务器或数据库的后端服务器提供。后端服务器是否需要备案？但是后端服务器不提供前端页面内容，直接url get访问并不提供具体内容。
函数计算的页面，前端页面也是由全国节点更新的函数计算实时提供。没有具体的服务器保存具体文件。托管于云服务商函数计算服务器，提供一个简单的静态页面。
直接是用对象存储服务提供http页面，没有服务器。而对象存储服务不具备固定ip地址，</description>
    </item>
    
    <item>
      <title>日记</title>
      <link>https://pub.oribos.cn/web/note/2020/2020062201.html</link>
      <pubDate>Mon, 22 Jun 2020 08:16:36 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020062201.html</guid>
      <description>购物券的本质 优惠劵不是为了让用户买东西更便宜，资本家通过不断的价格试探，在尽可能少都成本下，按价格区间分发购物券，让更多的用户购买东西。
种族歧视 被美国人歧视的不是非洲黑人，而是美国黑人，同白人生活不同，价值观不同，文化水平低，治安混乱。
宗教 宗教是阶级统治的工具，是控制手段，封闭保守的思维方式束缚人的创造力。
怀疑主义 怀疑主义本质就是能力有限，如果其有能力去澳大利亚就不会认为澳大利亚是不存在的，如果有能力开飞机环绕地球一圈就不会再认为地球是平的。就因为没有能力办到，就坚信澳大利亚不存在，地球是平的等等。
人类局限性 尽管人类不断探索和发现，依然会存在某些无法被认识的东西。基于时间的复杂性，历史真相是几乎不可能得知的，人类对已知的历史本身就是基于自己价值观的描述，历史真相不可能被还原。某某历史人物的所作所为可能永远不可能知道。
相关 历史是复杂的，对于过往的事情本质上不存在相关性。某些事情发现存在必然性，历史悲剧很难被避免。</description>
    </item>
    
    <item>
      <title> 2020 06 20 日记</title>
      <link>https://pub.oribos.cn/web/note/2020/2020062013.html</link>
      <pubDate>Sat, 20 Jun 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020062013.html</guid>
      <description>测试展开 展开以浏览更多：</description>
    </item>
    
    <item>
      <title>失误</title>
      <link>https://pub.oribos.cn/web/note/2020/2020061917.html</link>
      <pubDate>Fri, 19 Jun 2020 10:16:36 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020061917.html</guid>
      <description>在cloudflare的workers上使用Post JSON workers上的代码如下 Sends a POST request with JSON data from the Workers script. 这样就可以不使用工具就能发送post请求
async function handleRequest(request) { const init = { body: JSON.stringify(body), method: &amp;#39;POST&amp;#39;, headers: { &amp;#39;content-type&amp;#39;: &amp;#39;application/json;charset=UTF-8&amp;#39;, }, } const response = await fetch(url, init) const results = await gatherResponse(response) return new Response(results, init) } addEventListener(&amp;#39;fetch&amp;#39;, event =&amp;gt; { return event.respondWith(handleRequest(event.request)) }) /** * gatherResponse awaits and returns a response body as a string. * Use await gatherResponse(.</description>
    </item>
    
    <item>
      <title>无服务器</title>
      <link>https://pub.oribos.cn/web/note/2020/2020061902.html</link>
      <pubDate>Fri, 19 Jun 2020 10:16:36 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020061902.html</guid>
      <description>网站使用反向代理或者cdn连接oss 将网站内容从服务器存储上转移到oss里，使用nginx的反向代理访问oss内容，或者直接使用cdn连接oss。
静态页面生成使用CI程序 使用git托管的CI自动程序生成静态页面，不再在本地服务器上运行上传。
使用函数计算 使用js或云服务器商的函数计算来处理一些资源请求，将内容从服务器上剥离。
数据库 仅在需要数据库和其他数据运算的情况下使用服务器，
无服务器函数生成二维码 QR 码生成器</description>
    </item>
    
    <item>
      <title>各种设计</title>
      <link>https://pub.oribos.cn/web/note/2020/2020061801.html</link>
      <pubDate>Thu, 18 Jun 2020 08:16:36 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020061801.html</guid>
      <description>各种奇葩设定和故障-1 密钥要求过分： 因为对这类不熟悉的服务，并不可能第一次就是用一个跟自己已有密码类似的强密码。这种直接要求用户提供强密码的行为相当让人怀疑其目的。
注册时候密码要求不严，第一次登陆就要重置密码。
明明usr/local目录下有次文件，直接是用却无法找不到文件。说白了：瞎。
使用了登陆验证，奈何登陆验证服务器无法访问。导致验证信息不可用，无法登陆。
hexo初始化时非要自己下载一个主题，而这个主题迟迟下载不下来，类似的hugo初始化就不需要可以做到快速初始化。hexo但用户操作的第一步就慢别人一步。 由于ssh证书权限不是600，就无法使用。这种要求太武断。
非要去要求用户的邮箱服务，属于强盗行为。这些被他们认为都qq 163成了他们服务的基本要求。类似的要求如果使用手机号注册，非要你用电信手机号或移动手机号，不知道用户心里会怎么想 此处，并不是说只支持国内手机号有什么不对，你入口处有其他手机号的选项，结果却不能用。放那里充门面的吗？
手机上选择文字是一种折磨：
密码要求过分： 因为对这类不熟悉的服务，并不可能第一次就是用一个跟自己已有密码类似的强密码。这种直接要求用户提供强密码的行为相当让人怀疑其目的。
注册时候密码要求不严，第一次登陆就要重置密码。
明明usr/local目录下有次文件，直接是用却无法找不到文件。说白了：瞎。
使用了登陆验证，奈何登陆验证服务器无法访问。导致验证信息不可用，无法登陆。
hexo初始化时非要自己下载一个主题，而这个主题迟迟下载不下来，类似的hugo初始化就不需要可以做到快速初始化。hexo但用户操作的第一步就慢别人一步。 由于ssh证书权限不是600，就无法使用。这种要求太武断。
非要去要求用户的邮箱服务，属于强盗行为。这些被他们认为都qq 163成了他们服务的基本要求。类似的要求如果使用手机号注册，非要你用电信手机号或移动手机号，不知道用户心里会怎么想 此处，并不是说只支持国内手机号有什么不对，你入口处有其他手机号的选项，结果却不能用。放那里充门面的吗？
手机上选择文字是一种折磨：
第二期</description>
    </item>
    
    <item>
      <title>2020061702</title>
      <link>https://pub.oribos.cn/web/note/2020/2020061702.html</link>
      <pubDate>Wed, 17 Jun 2020 10:18:59 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020061702.html</guid>
      <description>在coding构建计划里，将文件推送到服务里。 def remoteConfig = [:] remoteConfig.name = &amp;#34;my-remote-server&amp;#34; remoteConfig.host = &amp;#34;${env.REMOTE_HOST}&amp;#34; remoteConfig.allowAnyHosts = true // 使用 SCP 作为文件传输 remoteConfig.fileTransfer = &amp;#34;scp&amp;#34; pipeline { agent any stages { stage(&amp;#39;检出&amp;#39;) { steps { checkout([ $class: &amp;#39;GitSCM&amp;#39;, branches: [[name: env.GIT_BUILD_REF]], userRemoteConfigs: [[ url: env.GIT_REPO_URL, credentialsId: env.CREDENTIALS_ID ]]]) } } stage(&amp;#39;更新子模块&amp;#39;) { steps { dir(&amp;#39;./content/zh&amp;#39;) { sh &amp;#39;rm -rf ./note&amp;#39; sh &amp;#39;git clone https://${B_USER}:${B_TOKEN}@${NOTE_GIT}&amp;#39; } dir(&amp;#39;./content/zh&amp;#39;) { sh &amp;#39;rm -rf ./lambda&amp;#39; sh &amp;#39;git clone https://${B_USER}:${B_TOKEN}@${LAMBDA_GIT}&amp;#39; } } } } } node { withCredentials([sshUserPrivateKey( credentialsId: &amp;#34;${env.</description>
    </item>
    
    <item>
      <title>nodejs笔记</title>
      <link>https://pub.oribos.cn/web/note/2020/2020061613.html</link>
      <pubDate>Tue, 16 Jun 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020061613.html</guid>
      <description>nvm 版本切换 nodejs版本管理工具，切换多个nodejs版本
前端js和nodejs区别 ECMAScript 语法，规范 不能处理，操作等动作，没有实际动作。
js ES语法规范＋webAPI 完成浏览器端的实际操作
nodejs 使用ES语法规范+nodejs语法规范
完成服务器端的实际操作
先用原生代码，后用框架 nodejs后端 server开发和前端开发的区别
思维区别
server稳定性，对内存cpu要求，日志记录
server安全，集群和服务拆分
前端内容只是一个客户端运行，独占一个浏览器，设备内存CPU消耗。
stream写日志，使用redis pm2进程守候，
日志
安全</description>
    </item>
    
    <item>
      <title>操作逻辑</title>
      <link>https://pub.oribos.cn/web/note/2020/2020061607.html</link>
      <pubDate>Tue, 16 Jun 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020061607.html</guid>
      <description>上传之前先删除 sh &amp;#39;rm -rf ./note&amp;#39; sh &amp;#39;git clone https://${B_USER}:${B_TOKEN}@${NOTE_GIT} 学习方法 使用熟悉的，简单的方法构建出来简单成品 使用基础的知识分析成品中的片段 使用基础的知识重构简单成品 使用简单的知识构建组件 使用组件，框架，成熟方案构建复杂成品 构建阶段 先搭设框架 额外工程，其他框架外功能再构建其他框架 框架内组件，逐渐完善 存储跟服务器分开 为了防止服务器被攻击是导致故障，网络受限等情况影响页面访问。用于前端页面访问的http服务和网站内容存放分开。
当 http服务器受到攻击，损坏，故障时，页面仍然可以使用。
页面存放在oss，cos，或其他服务商的对象存储，数据存储等服务上。在http服务器上做反向代理以提供http服务。</description>
    </item>
    
    <item>
      <title>2020 06 15 子模块故障</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020061511.html</link>
      <pubDate>Mon, 15 Jun 2020 10:18:03 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020061511.html</guid>
      <description>子模块经常莫名其妙提示错误 改变使用方式 使用子模块，在不同的CI环境下会出现不确定的问题，所以，子模块的使用上做修改。
在CI里删除 子模块 的目录，重新git clone 文件到该目录。
github错误 </description>
    </item>
    
    <item>
      <title>2020 06 14 模板</title>
      <link>https://pub.oribos.cn/web/docs/2020/202006181.html</link>
      <pubDate>Sun, 14 Jun 2020 17:39:51 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/202006181.html</guid>
      <description>content模板 在content目录下，创建一个空的站点，仅使用archetypes模板生成文件，
由于content位于单独的仓库里。没有创建主题配置文件，每次生成文件都需要修改复制原有文档的模板，现在在其目录下创建空模板，直接采用hugo new 引用archetypes就可以创建新文件。
content 单个仓库被多个网站项目引用 通过子模块形式，content文件可以被不同网站引用相同的内容，而不用在每个网站里同时更新文档。</description>
    </item>
    
    <item>
      <title>2020 06 14 全面搬出github</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020061413.html</link>
      <pubDate>Sun, 14 Jun 2020 15:26:21 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020061413.html</guid>
      <description>github的下载和访问都极慢 github下载和访问页面都非常慢，严重影响了使用github的效率。将部分github上的仓库搬到国内托管中心。
之前第一次从github搬出 由于下载速度慢，之前进行过一次从github搬出，后来使用github的actions，就将部分执行的源代码试验性质的搬回github
第二次从github搬出 第一次由于使用acitons，将测试代码搬到github。运行。景观github在运行npm下载和部分actions市场的应用是速度很快，但git仓库本身的同步太慢。仍然不适合使用。
由于在coding和jenkins的持续集成使用，原本在github上运行的ci任务被取消。第二次搬出github</description>
    </item>
    
    <item>
      <title>2020 06 14 可笑的种族歧视</title>
      <link>https://pub.oribos.cn/web/docs/2020/20200614691.html</link>
      <pubDate>Sun, 14 Jun 2020 15:26:21 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/20200614691.html</guid>
      <description>种族平权运动加速 Github、Go 废除 Blacklist 命名 GitHub ：将 Master 改为 Trunk
我们团队希望将默认分支名称从「master」更改为「trunk」，因为「master」在某些情况下与奴隶制相关。
（虽然我们知道 git 中使用的「master」 并不一定具有该含义，但是我们不想在这里出现歧义。）
目前这个 issue 已经关闭。
Chrome 、Go：废除 Blacklist/Whitelist 自去年 10 月以来，Chrome（开源项目 Chromium）在其官方指南加入了如何编写「种族中立」的代码指导手册。
Redis ：18 年曾因 master/slave 引发争议 因为种族中立的原因修改命名，并不是第一次，早在 2018 年，Redis 就曾做过一次调整。
Redis 的主从模式 (master-slave)，源自 MySQL 中同名的一个概念，用于同步数据。
在具体场景中，master-slave 不带任何感情色彩，仅表示主从关系。然而有很多开发者却不这样认为，他们认为 Redis 发布 5.0 RC5 后，更新日志中 Redis 仍然在使用「master」和「slave」 并希望 Redis 作者能修改 Redis 中 master-slave 架构的描述。
按 Redis 作者 antirez 的说法，这已经不是开发者第一次提这种要求了，但这次反馈的人数居多。
antirez 在 Twitter 发起的匿名投票，希望收集大家的意见。</description>
    </item>
    
    <item>
      <title>2020 06 13 看法</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020061319.html</link>
      <pubDate>Sat, 13 Jun 2020 10:29:20 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020061319.html</guid>
      <description>不应该影响他人 无论是主流价值观还是法律法规，不应该刻意的去影响他人。
社会道德，公序良俗不应该去影响其他人。即只要此人并没有对别人做出伤害，做出影响，就不应该拿这些东西去影响该人。我们很多时候的问题就在于要求他人，影响他人。种族歧视，地域歧视，性别歧视，残疾人歧视。这些看上去在主流价值观里是厌恶的事，然而并不能拿来指责歧视者。因为，这些是人类的生存本能。
荒唐的“存天理灭人欲” “存天理灭人欲”是朱熹理学思想的重要观点之一，个人认为，所谓的“人欲”是人类生存和繁衍的本性，人类的行为应该基于对本性的正确认识，而不是脱离人类本性去追求其他东西。
歧视 歧视是人类的正常心理认知，因为人类本身对外界的接触有限，对陌生的不熟悉的事物都具有排斥反应。歧视本身并不应该被职责，而西方主流价值观已经走偏，不应该盲目认同。</description>
    </item>
    
    <item>
      <title>2020 06 13 资源集中</title>
      <link>https://pub.oribos.cn/web/docs/2020/202006132.html</link>
      <pubDate>Sat, 13 Jun 2020 10:25:20 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/202006132.html</guid>
      <description>专门用来规整文档的仓库 集中管理网站所需要的文档。
动态服务器里，使用数据库管理大量数据，文档更新。而在静态网站里，需要一个专门用来妥善保存文档的仓库。网站的配置文件的备份等级不高，而文档的备份等级要更高一些。应该专门建设一个文档仓库保存，备份。
文档的多项目调用 将文档从网站独有的资源库里抽离出来，单独放置。其他网站其他项目就可以快速，方便的调用文档。多个项目同时使用该文档而不用调用整个网站配置文件。
文档的管理也是独立于网站配置文件的，必要的情况下可以设置多个版本，以使用不同项目的使用。网站配置文件只影响自己调用的文件内容，无法修改和上传。
文档的备份和管理 尽管文档是单独放在一个仓库里的，由于备份要求较高，为了防止特定仓库收到攻击和破坏，对文档可以采用更复杂更多层次的备份和管理。避免出现网站安然无恙，文档全丢失的情况。而这些备份只需要对文档设置，而不用对整个网站文件设置，以降低系统使用。</description>
    </item>
    
    <item>
      <title>2020 06 12 随笔</title>
      <link>https://pub.oribos.cn/web/deploy/2020/202006127.html</link>
      <pubDate>Fri, 12 Jun 2020 20:25:20 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/202006127.html</guid>
      <description>部署于子模块里的内容 用来整理临时编辑的文档。位于githu子模块里。通过git submodule 命令引用
子模块在自动构建里的操作 不同于在服务器上多种操作，在自动构建中需要固定 git submodule foreach git pull 以确保子模块都得到更新。
较少代码复杂性 尽管随着程序功能越来越多，有限的使用各种技术，尽可能的减少单一项目的代码复杂程度。
编程语言里的术语：函数 许多编程语言的把function 翻译为函数，尽管这个英文单词的含义已经十分明确，程序员里对函数的作用和定义也已经深入理解。但function翻译为函数是有些许歧义的。
这个单词的可以翻译为 功能。在编程语言的定义就是执行功能或动作的代码。目的就是执行某些动作，某些功能。跟数学上的名词&amp;quot;基本初等函数&amp;quot;(包括幂函数、指数函数、对数函数、三角函数、反三角函数和常数函数)是不同的，尽管电子计算机科学依赖于数学理论，简单的将数学术语照搬到计算机理论上，是存在问题和歧义。
比如，某些函数根本不涉及什么数学上的运算，就是一个打印一段代码。本身的意义就是“实现输出代码的功能”。在这种情况下，function 翻译为功能更符合实际含义。</description>
    </item>
    
    <item>
      <title>2020 06 14 减少自定义</title>
      <link>https://pub.oribos.cn/web/docs/2020/20200614337.html</link>
      <pubDate>Fri, 12 Jun 2020 20:25:20 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/20200614337.html</guid>
      <description>使用主流框架 减少使用自己定义的内容，主流框架能实现的东西一般采用框架。尽可能遵循规范和更广范围的通用规则。</description>
    </item>
    
    <item>
      <title>2020 06 14 烦人的验证</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020061407.html</link>
      <pubDate>Fri, 12 Jun 2020 20:25:20 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020061407.html</guid>
      <description>cloudflare点击各类图片验证 图片乱七八糟，数量不定，各类奇葩的验证。cloudflare的奇葩的验证让人反感。
密码复杂程度要求不一 各类网站注册时对用户的密码复杂程度要求不一，有的必须有大小写，有的必须有符号，有的长度多少位。必要的复杂程度无可厚非，但是某些奇葩的跟大多数要求不一样的要求让让人反感。因为某些不熟悉的网站，不想让使用自己常用的密码，而这些网站还非要打肿脸充胖子要求高级别密码。导致，有的网站注册以后再登就很难记得密码。
安全验证 用户不关心你网站的安全验证，而且你网站的安全验证还不能让人反感。大部分情况网站为了验证安全，使用那种多次打扰用户使用的方法验证用户，或者各类限制用户。这属于一种极度不合理。
把关键操作藏起来 随便点击迅雷页面都要求续费，充值，开通会员。而迅雷把退订，终止服务藏的严严实实。新手不去搜索几乎不可能找到退订入口。</description>
    </item>
    
    <item>
      <title>名称也成了商品</title>
      <link>https://pub.oribos.cn/web/docs/2020/2020072801.html</link>
      <pubDate>Fri, 12 Jun 2020 20:25:20 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/2020072801.html</guid>
      <description>不卖水果的苹果公司 苹果作为普通的水果，被一家公司拿去注册商标。现在好了，苹果公司不是卖苹果的。
以中国文物命名的外国公司 甲骨文指中国商朝晚期王室用于占卜记事而在龟甲或兽骨上契刻的文字，结果被一家外国公司注册商标。</description>
    </item>
    
    <item>
      <title>2020 06 12 试验项目</title>
      <link>https://pub.oribos.cn/web/deploy/2020/202006122.html</link>
      <pubDate>Fri, 12 Jun 2020 10:24:03 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/202006122.html</guid>
      <description>目标 页面显示最近更新，内容引用资源页面，即时更新。
更新的内容以方框，类似微博的页面一样推送。
测试文档 </description>
    </item>
    
    <item>
      <title>2020 06 11 Coding构建计划</title>
      <link>https://pub.oribos.cn/web/deploy/2020/202006112.html</link>
      <pubDate>Thu, 11 Jun 2020 15:25:37 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/202006112.html</guid>
      <description>coding构建计划：初见 代码 本站点使用coding的构建计划自动部署，代码如下：
pipeline { agent any stages { stage(&amp;#39;检出&amp;#39;) { steps { checkout([ $class: &amp;#39;GitSCM&amp;#39;, branches: [[name: env.GIT_BUILD_REF]], userRemoteConfigs: [[ url: env.GIT_REPO_URL, credentialsId: env.CREDENTIALS_ID ]]]) } } stage(&amp;#39;npm&amp;#39;) { steps { sh &amp;#39;npm init -y&amp;#39; sh &amp;#39;npm install -D --save autoprefixer&amp;#39; sh &amp;#39;npm install -D --save postcss-cli&amp;#39; } } stage(&amp;#39;hugo&amp;#39;) { steps { sh &amp;#39;wget https://github.com/gohugoio/hugo/releases/download/v0.72.0/hugo_extended_0.72.0_Linux-64bit.tar.gz&amp;#39; sh &amp;#39;tar -zxvf hugo_extended_0.72.0_Linux-64bit.tar.gz&amp;#39; sh &amp;#39;./hugo&amp;#39; } } stage(&amp;#39;未命名阶段&amp;#39;) { steps { echo &amp;#39;构建中.</description>
    </item>
    
    <item>
      <title>2020 06 10 测试</title>
      <link>https://pub.oribos.cn/web/note/2020/2020061071.html</link>
      <pubDate>Wed, 10 Jun 2020 13:50:21 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020061071.html</guid>
      <description>完全由手机编辑和发布 由手机上的md编辑器编辑和保存，有Termux管理并git push
使用termux编辑和git termux 无法使用分支切换
index.html index.html是最著名的索引页，也往往被作为网站首页活着一个包含索引信息的完整内容页面，用来展示内容，链接不同位置的信息源。正常访问下，没有在索引页上链接的内容是很难访问的。
index.html 也可以作为次级目录的索引，最终内容可能放置在次级目录或者次级目录之下派生的目录。index.html作为内容的入口和索引
内容页 最终显示的内容
中间页 功能类似于索引页，通过index.html链接到的次级目录或其他功能页面，如：分类，标签，年份等。
跳转 可以将页面做成自动跳转的方式，自动跳转到其他页面，类似于超链接但是以文件形式存在。</description>
    </item>
    
    <item>
      <title>2020 06 10 又一次改变文件结构</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020061037.html</link>
      <pubDate>Wed, 10 Jun 2020 11:23:17 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020061037.html</guid>
      <description>质数表 本网站用于内容页面的url地址，并不是采用xxxx年xx月xx日xxx的顺序，尽管确实是20200610按照日期排序，结果的数字是按照以下的质数表来排序的：
规则1： 即某天第一篇文章或某类型的第一个序列为2，第二位是3，第三位是5</description>
    </item>
    
    <item>
      <title>2020 06 10 Git分支管理</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020061031.html</link>
      <pubDate>Wed, 10 Jun 2020 08:36:22 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020061031.html</guid>
      <description>git分支管理 查看电脑B本地仓库的分支
git branch
查看本地和远程仓库的所有分支
git branch -a
查看远程仓库的分支
git branch -r
同步远程分支
git fetch 将本地分支与远程保持同步
git checkout -b 本地分支名x origin/远程分支名x 拉取远程分支并同时创建对应的本地分支
将本地所有分支与远程保持同步 git fetch &amp;ndash;all
git merge master
git 的子模块更新 git submodule foreach &amp;lsquo;git pull origin master&amp;rsquo;</description>
    </item>
    
    <item>
      <title>2020 06 09 功利心</title>
      <link>https://pub.oribos.cn/web/value/2020/202006091.html</link>
      <pubDate>Tue, 09 Jun 2020 11:07:38 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/value/2020/202006091.html</guid>
      <description>在公司的空地里种了几株向日葵 闲来无事，4月份在公司空地种花的地方种下了几株向日葵。如今已经长出来花。
但是让人没想到的人，公司有人说这向日葵不能种这么密集，要分开才能长的壮，结的瓜子才好吃。
o_O，种向日葵就想着要吃瓜子？
还必须让它长的壮？要是吃瓜子自己直接买做好的，甚至直接剥了皮的不是更方便
更奇葩的是，有人看向日葵一株上面长了好几个花，就把底下的几个小花给掰了！！！！</description>
    </item>
    
    <item>
      <title>2020 06 19 kor</title>
      <link>https://pub.oribos.cn/web/docs/2020/note/2020061971.html</link>
      <pubDate>Tue, 09 Jun 2020 02:22:55 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/note/2020061971.html</guid>
      <description>将库尔里斯的故事公开 讲述一个遥远宇宙的故事
艾拉族和库尔族在宇宙的故事</description>
    </item>
    
    <item>
      <title>2020 06 08 改变的阻力</title>
      <link>https://pub.oribos.cn/web/value/2020/202006087.html</link>
      <pubDate>Mon, 08 Jun 2020 18:30:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/value/2020/202006087.html</guid>
      <description>力改变物体运动状态 保持物体运动状态不需要费力 改变是存在阻力的 高处没有危险，危险的是从高处落下 没有外力影响，物体状态不会改变 </description>
    </item>
    
    <item>
      <title>多个仓库链接</title>
      <link>https://pub.oribos.cn/web/deploy/2020/202006083.html</link>
      <pubDate>Mon, 08 Jun 2020 18:13:08 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/202006083.html</guid>
      <description>内容单独放一个仓库 之前在没有布置自动部署的时候，就是将content单独放到一个仓库，使用git submodule 命令引用和更新。后来需要配置自动部署，就把所有内容，均保存到仓库，一起推送到github。
包括主题和content内容，一共有 主题docsy文件夹，vendor目录下的bootstrap和Font-Awesome文件，均采用git子模块的形式链接到git仓库的。
随着自动部署完成，是时候恢复这些子模块单独更新了。
对于bootstrap和font-Awesome文件应该引用web地址 不清楚为什么docsy主题需要将这两个资源单独保存使用，主题使用了scss和postcss等配置，或许跟这些文件有联系。
事实上由于docsy主题的样式过于复杂，有时候真考虑换一个主题使用。
取消自建git wercker 和Azure DevOps </description>
    </item>
    
    <item>
      <title>2020 06 07 何为入侵者</title>
      <link>https://pub.oribos.cn/web/value/2020/2020060711.html</link>
      <pubDate>Sun, 07 Jun 2020 22:27:11 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/value/2020/2020060711.html</guid>
      <description> </description>
    </item>
    
    <item>
      <title>2020 06 07 命名规范</title>
      <link>https://pub.oribos.cn/web/deploy/2020/202006077.html</link>
      <pubDate>Sun, 07 Jun 2020 22:11:17 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/202006077.html</guid>
      <description>命名规范 仓库类 dev.XXX dev作为临时，开发，测试的仓库标识
-作为url使用时资源的连接符 .作为名称的连接符
app.xxx 正式使用的资源
sub.xxx 需要内容分发时，源内容的标识
kit.xxx 服务，工具，应用，附件资源标识，
git仓库 ra-gh-xx
由于命名修改导致的旧资源链接丢失 由于自己的频繁修改命名规范导致旧链接丢失，实属费力不讨好。但科技在进步，方法在更新，必要的革故鼎新是必要的。</description>
    </item>
    
    <item>
      <title>2020 06 07 Hugo持续集成</title>
      <link>https://pub.oribos.cn/web/deploy/2020/202006071.html</link>
      <pubDate>Sun, 07 Jun 2020 18:20:21 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/202006071.html</guid>
      <description>通过github actions 发布 使用代码：
name: Deploy to GitHub Pages on: push:	branches:	- master jobs: deploy: name: Deploy to GitHub Pages runs-on: ubuntu-latest steps: - name: 1. git checkout... uses: actions/checkout@v1 - name: 2. setup nodejs... uses: actions/setup-node@v1 - name: 3 run postcss run: | npm install -D --save autoprefixer npm install -D --save postcss-cli - name: Setup Hugo uses: peaceiris/actions-hugo@v2.2.2 with: hugo-version: &amp;#39;latest&amp;#39; extended: true - name: Build run: hugo --minify - name: deploy uses: s0/git-publish-subdir-action@master env: REPO: git@github.</description>
    </item>
    
    <item>
      <title>2020 06 05 认识和看法</title>
      <link>https://pub.oribos.cn/web/value/2020/2020060519.html</link>
      <pubDate>Fri, 05 Jun 2020 19:09:38 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/value/2020/2020060519.html</guid>
      <description>问题 动物园的动物和野外的动物哪个活的“幸福”？
如果白垩纪没有发生大灭绝恐龙是否会继续存活？
这些问题很难回答，或者很难判断对错。而且这些问题还涉及更复杂的世界观价值观的差异。有必要记录一下个人对世界观价值观的认识和看法。
当一个猛兽去扑食一个小动物时。 假如，一个猫狗（以常见没有濒危的物种为例）去扑食一个濒危物种，我们要不要干涉？毕竟动物间的扑食时生存的本能，大自然的选择。干涉就是破坏自然和谐，不干涉濒危的动物所剩无几，可能就因为过度扑食而灭绝。加入一个濒危的猛兽扑食一个猫狗。要不要干涉？这个时候，估计很少人会去干涉。美其名曰大自然的选择。
还是动物间扑食的例子，正常的思维应该都很清楚，被扑食者肯定希望有外界干涉，以挽救自己生命，因为生命都有求生本能。而扑食者肯定对外界干涉它正常的扑食会有进攻反馈。加入这不是动物界，这是一个受压迫受剥削的腐朽王朝，王朝内部被压迫者希望外国干涉吗？王朝内部统治者希望外国干涉吗？
哥伦布发现美洲新大陆时 当哥伦布发现美洲新大陆时，当地的原住民对这些外来者什么态度？要知道巨大的技术差距，文化差距。两个不同生产力的文明相遇，免不了发生碰撞，竞争。这不是人类能抗拒的。无论美洲的原住民是否愿意接触，隔绝的文明迟早会同外界接触，这是不可避免的。加入美洲晚几百年被发现，到哪个时候，进入这片土地的殖民者可能已经装备了机枪大炮飞机等等，原超十五世纪时代的武器水平，那个时候再发生冲突，屠杀那伤害必然更大。
再假设，美国再晚一千多年被发现，那个时候人类社会已经发现非常先进或者资源非常紧张。对新大陆的殖民需求比如更迫切，而相对于的美洲原住民的落后保守可能带来的影响时无法想象的。哪个时候可能原住民会被当做动物展示。
那么，为什么我们假设外面世界不断发展，美洲原住民就会继续落后保守？因为，生产力决定生产关系，生产关系对生产力具有反作用。美洲所处的自然环境，资源导致生产力发展水平偏低，单靠保守封闭的环境，美洲时何难发展出机械革命，信息科技的。5千年前欧亚古文明有祭祀活动，2千年前欧亚出现强大帝国，6百年前资产阶级革命。而同时期美洲还在进行祭祀，狩猎。</description>
    </item>
    
    <item>
      <title>2020 06 05 发布到阿里云oss</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020060517.html</link>
      <pubDate>Fri, 05 Jun 2020 17:06:53 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020060517.html</guid>
      <description>###通过以下代码将github内容发布到oss
位于.github/workflows/main.yml
name: MainWorkflow on: [push] jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v1 - uses: actions/setup-node@v1 with: node-version: &amp;#34;12.x&amp;#34; - uses: manyuanrong/setup-ossutil@v1.0 with: # endpoint 可以去oss控制台上查看 endpoint: &amp;#34;oss-cn-zhangjiakou.aliyuncs.com&amp;#34; # 使用我们之前配置在secrets里面的accesskeys来配置ossutil access-key-id: ${{ secrets.OSS_KEY_ID }} access-key-secret: ${{ secrets.OSS_KEY_SECRET }} - name: Deply To OSS run: ossutil cp ./public oss://hb-kit-t7/ -rf 在github上运行持续集成 自动使用hugo生成public
name: Deploy Hugo Site to Github Pages on Master Branch on: push: branches: - master jobs: build-deploy: runs-on: ubuntu-18.</description>
    </item>
    
    <item>
      <title>2020 06 05 Github</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020060513.html</link>
      <pubDate>Fri, 05 Jun 2020 00:37:14 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020060513.html</guid>
      <description>github不支持英文以外的语言 github本身希望看到结果肯定是越来越多的人将开源代码托管在github上，全世界9%的代码和注释就是用英文写的，对于程序员来说，尝试通过英语交流比其他行业更常见，另外这样才能打破语言限制，让更多的人能够享受到不同国家的开源代码。
看上去没问题 Github是国际化的社区，全世界的人都用英文交流。看上去似乎没问题，但是，是谁认定全世界必须使用英文交流？而且哪怕是英文，由于全球地区的差异，某些地区用词和组合还是有差异的。
另一方面，作为一个国际化的git托管中心，必然会存放语言，数学，工程技术，医疗，建筑等等多方面的文档和程序。哪怕是编程一类也有java，go，python等等多种编程语言，外行看了也很难看懂。也就是说阻碍全世界各行各业交流的因素的极多的，语言的差异只是一个方面。
关键不在于语言，而在于分享。如果一个复杂的专业的应用能有详细的技术文档，无论整个技术文档是什么语言，总会有人阅读，翻译，转载，传播。总会由英文变成法文，日文，中文等等。根本不缺本土语言。只有那些冷门，不完善，欠缺的，开发人员也极少维护，极少完善的项目，接触的人寥寥无几，才无法很好传播。
github的actions 一、GitHub Actions 是什么？ 持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。
很多操作在不同项目里面是类似的，完全可以共享。GitHub 注意到了这一点，想出了一个很妙的点子，允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。
如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。这就是 GitHub Actions 最特别的地方。
GitHub 做了一个官方市场，可以搜索到他人提交的 actions。
上面说了，每个 action 就是一个独立脚本，因此可以做成代码仓库，使用userName/repoName的语法引用 action。比如，actions/setup-node就表示github.com/actions/setup-node这个仓库，它代表一个 action，作用是安装 Node.js。事实上，GitHub 官方的 actions 都放在 github.com/actions 里面。
既然 actions 是代码仓库，当然就有版本的概念，用户可以引用某个具体版本的 action。下面都是合法的 action 引用，用的就是 Git 的指针概念，详见官方文档。
二、基本概念 GitHub Actions 有一些自己的术语。
（1）workflow （工作流程）：持续集成一次运行的过程，就是一个 workflow。
（2）job （任务）：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。
（3）step（步骤）：每个 job 由多个 step 构成，一步步完成。
（4）action （动作）：每个 step 可以依次执行一个或多个命令（action）。
三、workflow 文件 GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的.</description>
    </item>
    
    <item>
      <title>2020 06 05 对于不确定的厌恶</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020060511.html</link>
      <pubDate>Fri, 05 Jun 2020 00:02:04 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020060511.html</guid>
      <description>遇到的困惑 通过今天遇到的问题，而写的文章
修改网页主题出现的问题 无意间修改了一个配置文件，出现以下错误信息
跟着错误提示，选择文件，发现错误提示的地方并没有找到问题。
然后偶尔发现，是自己配置config.toml时，将 production 的配置文件config.toml的主题设置theme = [&amp;ldquo;docsy&amp;rdquo;]修改了，导致没有引用主题造成的错误。
但是 没有主题就说没有主题，怎么乱给一些代码，修改半天发现根本不是那回事，这错误提示有什么用！
就因为整个问题，我回想过去种种现象，发现不管是一个页面程序，还是使用linux，Windows的各种所见所闻，种种愤慨不吐不快。
日常遇到的各类错误提示 Error: error sending request for url (https://crates.io/api/v1/crates/wasm-pack): error trying to connect: operation timed out
Your site&amp;rsquo;s DNS settings are using a custom subdomain, b.hbn.pub, that&amp;rsquo;s not set up with a correct CNAME record.
如果将dns解析填到b.hbn.pub，那么github pages令人发指的访问速度实在无法正常使用，所以需要设置cdn，然后如果把cdn源站信息填b.hbn.pub，加速域名填t.hbn.pub，访问t.hbn.pub调用github pages的b.hbn.pub就会出错.或者是网络问题，或者是github对dns有检测到t.hbn.pub找不到文件。
Module not found: Error: Can&amp;rsquo;t resolve &amp;lsquo;bundle.js&amp;rsquo; in &#39;
在webpack 4.0 之前 ，打包命令为npm demo.js bundle.js 但是，如果安装的是最新的webpack，需要使用
webpack demo.js -o demo.bundle.js 进行打包</description>
    </item>
    
    <item>
      <title>安装和部署hugo</title>
      <link>https://pub.oribos.cn/web/deploy/2020/202006045.html</link>
      <pubDate>Thu, 04 Jun 2020 10:31:33 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/202006045.html</guid>
      <description>快速开始 按照以下步骤，可以快速运行一个简单的博客，但没有任何内容的。
# ubuntu sudo apt install hugo #安装hugo hugo new site blog #使用hugo创建一个博客站点，名称blog cd blog #进入博客站点blog hugo # 运行hugo构建blog站点 以上命令就是一个简单的hugo站点的基本操作，但是运行完成以后，你得不到任何页面，因为没有为博客创建主题、配置站点、和新建文章 。
如果你只想做一个简单的博客页面，可以通过上面链接到相应位置配置即可。而如果你需要使用特定的复杂的主题，就需要重新开始安装和配置hugo。
👇 下面的步骤需要你卸载快速安装的正式版hugo，因为下面例子所用的主题时扩展版hugo
安装hugo 安装扩展版hugo，需要提前安装go语言环境，同时推荐安装git，因为某些复杂的主题可能需要使用git子模块的形式引用配置文件。有些主题需要使用npm。
安装go 语言 安装git （可选） 安装npm （可选） 安装hugo 版本区别 hugo分为正式版和扩展版两种，后者支持scss postcss等CSS预处理器文件。
下载和安装 hugo_extended_0.72.0_Linux-64bit.tar.gz
下载文件 wget https://github.com/gohugoio/hugo/releases/download/v0.72.0/hugo_extended_0.72.0_Linux-64bit.tar.gz tar -zxvf hugo_extended_0.72.0_Linux-64bit.tar.gz # 解压缩文件包 cp ./hugo /usr/local/bin/ # 将hugo复制到系统目录下，以直接运行hugo命令 hugo verison # 查看版本，验证安装是否正确。 hugo releases
配置文件 运行
hugo new site blog 创建blog目录
下载主题 以安装hugo-meme主题为例
cd blog cd themes git clone https://github.</description>
    </item>
    
    <item>
      <title>2020 06 04 分栏显示</title>
      <link>https://pub.oribos.cn/web/deploy/2020/202006043.html</link>
      <pubDate>Thu, 04 Jun 2020 09:51:23 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/202006043.html</guid>
      <description> </description>
    </item>
    
    <item>
      <title>2020 06 04 网站前端内容</title>
      <link>https://pub.oribos.cn/web/deploy/2020/202006041.html</link>
      <pubDate>Thu, 04 Jun 2020 09:02:11 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/202006041.html</guid>
      <description>前端是技术大杂烩 在md文件里使用div做两边的分栏显示 前端产品属于消耗品 </description>
    </item>
    
    <item>
      <title>多个ssh证书</title>
      <link>https://pub.oribos.cn/web/deploy/2020/20200603%E5%A4%9A%E4%B8%AAssh%E8%AF%81%E4%B9%A6.html</link>
      <pubDate>Wed, 03 Jun 2020 09:09:55 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/20200603%E5%A4%9A%E4%B8%AAssh%E8%AF%81%E4%B9%A6.html</guid>
      <description>在linux上使用多个ssh证书 如果你已经有了一套名为 id_rsa 的公秘钥，将要生成另外一个公钥，比如 aysee ，你也可以使用任何你喜欢的名字。
步骤如下：
1、生成一个新的自定义名称的公钥：
ssh-keygen -t rsa -C &amp;#34;YOUR_EMAIL@YOUREMAIL.COM&amp;#34; -f ~/.ssh/aysee 执行命令后，生成命名的公钥和生成默认公钥的步骤一样。 执行完成后，会在 ~/.ssh/目录下生成一个 aysee 和 aysee.pub 文件。
2、在 SSH 用户配置文件 ~/.ssh/config 中指定对应服务所使用的公秘钥名称，如果没有 config 文件的话就新建一个，并输入以下内容：
Host github.com www.github.com IdentityFile ~/.ssh/aysee 3、添加 aysee.pub 到你的git服务器网站上。
4、测试配置文件是否正常工作
ssh -T git@gitcafe.com 如果，正常的话，会出现如下提示：
Hi USERNAME! You&amp;#39;ve successfully authenticated, but github does not provide shell access. 如果出现如下提示，则说明有权限问题：
Permission denied (publickey) 如果有权限问题的情况下，你对项目执行push操作的时候，会得到如下提示：
Warning: Permanently added the RSA host key for IP address &amp;#39;192.30.252.129&amp;#39; to the list of known hosts.</description>
    </item>
    
    <item>
      <title>Git子模块</title>
      <link>https://pub.oribos.cn/web/deploy/2020/202006023.html</link>
      <pubDate>Tue, 02 Jun 2020 17:16:53 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/202006023.html</guid>
      <description>将重要资料作为子模块 将网站的content,layout作为子模块单独同步到git仓库，这样在其他电脑上操作文章和配置文件时，就不需要同步所有文件。
对content内容修改删减以后，执行git push，然后再在发布的电脑上执行git pull
主题配置的子模块 docsy主题都bootstrap和font awesome是通过子模块，直接在github上更新的。</description>
    </item>
    
    <item>
      <title>2020 06 01 戳穿谎言</title>
      <link>https://pub.oribos.cn/web/value/2020/2020/202006013.html</link>
      <pubDate>Mon, 01 Jun 2020 15:16:36 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/value/2020/2020/202006013.html</guid>
      <description>迈克尔纽顿灵魂之旅 无意间在B站看到介绍迈克尔纽顿灵魂之旅的视频，对里面将的荒诞无稽的东西感觉可笑。
作者的信仰局限性 迈克尔纽顿灵魂之旅讲述的内容，很多都是跟西方的信仰贴合很紧密，灵魂分三六九等，轮混带有不同光环的导师，对自杀的惩罚等等。
倒不说这里面的真或假，就比如什么带有不同光环的灵魂。都到了灵魂世界了，谁规定某某颜色就高级，某某颜色就此等？灵魂有没有自己的喜好某个特定颜色，能不能自己改变自己喜好的颜色？如果不能？就意味着灵魂没有自己选择的自由，如果能，那颜色何以成为等级的象征？或者说自己光环颜色纯属自嗨，别的灵魂感觉不到？为什么要强调颜色差异？因为人类社会的痛苦就在于自我和其他的差异化。有些人容得下自己同别人的差异，有些人容不下差异，就区分了政治上的左于右，极端和保守。假如存在灵魂世界，依然存在差异化，那必然像人类社会一样复杂，矛盾，痛苦。更何况， 迈克尔纽顿灵魂之旅描述的内容确实存在等级不同的阶级的差异化。
奇怪的西方思维 欧洲最早的古文明两河文明、希腊罗马文明，悠久灿烂的文明成就，后来发展出来的欧洲民族有罗马人，日耳曼人凯尔特人、斯拉夫人都在自己的地区发展了自己的文明和历史。直到公元1世纪。接触到了莫名其妙的基督教，突然古老的北欧神话，希腊神话都消失不见。转而变成了诺亚方舟，亚当夏娃，天使撒旦。而现在信奉的宗教，拙劣的敛财工具“赎罪券”，愚昧无知的“地平论”等等，这个宗教从来不缺阻碍人类文明发展的手段。</description>
    </item>
    
    <item>
      <title>2020 06 01 Hugo的配置文件</title>
      <link>https://pub.oribos.cn/web/deploy/2020/202006011.html</link>
      <pubDate>Mon, 01 Jun 2020 10:43:07 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/202006011.html</guid>
      <description>遇到的问题 由于github pages经常访问慢，甚至无法访问，coding也是隔三差五出访问异常，我需要部署多个pages源站点做到多站点同步。而在gitlab上部署时遇到了问题：
这里以普通情况为主，github和coding可以将整个站点发布到pages上，Netlify同样可以直接使用github站点。唯独gitlab跟其他都不一样需要将站点内容放到public文件夹里，配置文件放根目录。
而问题在于，由于我没有使用持续集成的方式，而采用极其原始的直接将public 推到git上部署页面。使得网站配置文件同pages文件是不同的git仓库，而网站配置文件的git仓库是直接将public文件夹屏蔽掉的。所以，一个仓库里有配置文件但没有public，一个仓库里有所有页面但是不在public里。
为什么如此？ 如果采用持续集成的方式部署页面，就解决了很多问题，而由于自己强迫症的问题，一个页面是发布到多个平台，甚至有aws s3，阿里云oss等等。既要在不同的git仓库上配置持续集成，又希望所有站点内容一模一样，结果就很难实现，因为serverless cloudflare workers等等需要不同的配置文件和cname。加之某些部署时的技术问题一直没有解决。不得不将public在一个地方生成，然后统一发布出去。
对github pages和gitlab pages不同的解决 运行hugo 时，加上参数 -d xxxx
xxxx 为目录名 就可以代替public目录名
production生产版本 在hugo根目录下创建config文件夹，将原来的config.toml转到到这个目录下，作为hugo的配置文件目录
创建 _default 文件夹，config.toml文件
config.toml 存放hugo的默认配置文件，运行hugo时生成public文件夹（可以通过publishDir = &amp;quot;目录名&amp;quot;修改）
创建 production 文件夹，config.toml文件，增加publishDir = &amp;quot;目录名&amp;quot; 在运行hugo时生成public文件夹和另一个目录,
这个production就是hugo使用配置文件新建的生产版内容，可以通过配置production 文件夹的config.toml文件，设置某些正式发布的内容。
这个publishDir = &amp;quot;目录名&amp;quot; 的目录名可以是hugo根目录下的子目录目录/子目录
staging 试验版本 通过在config文件夹下，新建staging文件夹
通过运行hugo --environment staging生成临时测试版本。</description>
    </item>
    
    <item>
      <title>2020 05 28 Md单换行变双换行</title>
      <link>https://pub.oribos.cn/web/deploy/2020/202005281.html</link>
      <pubDate>Thu, 28 May 2020 20:24:12 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/202005281.html</guid>
      <description>md文档换行需要两个换行符 由于md文档识别文字换行需要两个换行符，当我们引用（或者抄袭）html，txt，doc等文档时，直接复制到md文档里并不会出现换行效果。
如何解决？
1 找到一个在线markdown生成工具，将需要复制的文件选中复制到源文件里
2 下载这个markdown生成工具所生成的html文档。（不要生成的md文件，只要html文档）
3 使用编辑器打开html文档，使用替换功能，选择&amp;lt;br&amp;gt; 替换为&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
4 将替换后的html文档保存为.md格式，在阅览md文档 的节目选中md文档。
这样你所使用的md源文件就从一个换行变成了2个换行，这样的文档经过hexo，hugo处理后就会显示正确的页面效果。
将小说分段， 搜索小说分节的关键字 第XX节或第XX章，你只需要搜索关键字 章 或 卷 即关键字后加一个空格，就可以自动搜索到每个章节的标题处。</description>
    </item>
    
    <item>
      <title>2020 05 26 新版本</title>
      <link>https://pub.oribos.cn/web/blog/2020/note/2020052601.html</link>
      <pubDate>Tue, 26 May 2020 17:36:49 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/blog/2020/note/2020052601.html</guid>
      <description>更换主题 尽管原来的主题hugo-meme 非常好用，但是某些样式和布局并不适合我的使用，再加上引用bootstrap时出现页面异常。将主题更换为hugo-docsy。并且此主题取代过去的单页专用模板Hugo-Primer,成为唯一使用的主题。
SCSS hugo-docsy使用了scss，PostCSS等技术，对主题的修改会遇到问题。
sudo npm install -D --save autoprefixer sudo npm install -D --save postcss-cli 测试 字体 此前一直坚信在手机屏幕和电脑屏幕上使用黑体字是最方便最实用的，然而看到别人文章介绍，宋体一直是正文印刷的标准字体，适合阅读。所以将网页字体全部改为思源宋体（试用）
由于宋体笔画要比黑体细，所以字体应稍微加粗或颜色加深。
更换版本 由于配置文件改动过大，原本以为已经够完美，然而无意间发现一直都走错路了，之前修改的那么多代码都是向错的方向发展。所以，我讲源地址作为旧版，重新配置了新的文件。 主要涉及到搜索，图标配置等内容。
简化操作导致基本操作都不会了 由于过多的使用精简和多次加工的指令，基本的代码和操作生疏了。
好用的主题难以驾驭 docsy主题给的模板Knative 和 Apache Airflow ，那怕是拿到了网站的源码，也不会配置。前者兼容bootstrap，配置简单。后者就相当复杂。
内容和配置文件单独存放 所更新的文章，博客等内容，均以git子模块的形式，单独保存在一个git仓库里。修改后的主题配置文件也以git子模块的形式保存在专门的git仓库里。
这样，当改变主题或其他配置的时候，只需要重新构建hugo目录，然后引用文章的git子模块仓库里的内容就可以了。
重要的无法重构的内容应该多方面保存。
实用为主,外观为辅 网页的设计和内容发布以实用,简便为主要目的.不以外观展示为目标.尽可能的少展示不必要的,对阅读有干扰的内容.
最终内容也需要带.html 为了规整文件,即所有生成的内容页均以文件名.html文件命名,并按目录保存.这样在归档和整理的时候可以很轻松的规整有价值内容.以目录为文件名命名时,尽管url好看,但内容存放混乱,不易整理.
功能性链接不带.html 链接,跳转,目录,分类等页面以目录命名,自动在目录下生成index.html.这类文件在归档时并不以内容保存.</description>
    </item>
    
    <item>
      <title>2020 05 25 Git忽略规则(.gitignore配置）不生效原因和解决</title>
      <link>https://pub.oribos.cn/web/blog/2020/note/202005251.html</link>
      <pubDate>Mon, 25 May 2020 08:54:43 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/blog/2020/note/202005251.html</guid>
      <description>Git忽略规则(.gitignore配置）不生效原因和解决 参考文章：kevingrace
第一种方法:
.gitignore中已经标明忽略的文件目录下的文件，git push的时候还会出现在push的目录中，或者用git status查看状态，想要忽略的文件还是显示被追踪状态。 原因是因为在git忽略目录中，新建的文件在git中会有缓存，如果某些文件已经被纳入了版本管理中，就算是在.gitignore中已经声明了忽略路径也是不起作用的， 这时候我们就应该先把本地缓存删除，然后再进行git的提交，这样就不会出现忽略的文件了。
解决方法: git清除本地缓存（改变成未track状态），然后再提交:
# git rm -r --cached .
# git add .
# git commit -m &#39;update .gitignore&#39;
# git push -u origin master
需要特别注意的是： 1）.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。 2）想要.gitignore起作用，必须要在这些文件不在暂存区中才可以，.gitignore文件只是忽略没有被staged(cached)文件， 对于已经被staged文件，加入ignore文件时一定要先从staged移除，才可以忽略。
第二种方法:（推荐） 在每个clone下来的仓库中手动设置不要检查特定文件的更改情况。 # git update-index --assume-unchanged PATH //在PATH处输入要忽略的文件
在使用.gitignore文件后如何删除远程仓库中以前上传的此类文件而保留本地文件 在使用git和github的时候，之前没有写.gitignore文件，就上传了一些没有必要的文件，在添加了.gitignore文件后，就想删除远程仓库中的文件却想保存本地的文件。这时候不可以直接使用&amp;quot;git rm directory&amp;quot;，这样会删除本地仓库的文件。可以使用&amp;quot;git rm -r –cached directory&amp;quot;来删除缓冲，然后进行&amp;quot;commit&amp;quot;和&amp;quot;push&amp;quot;，这样会发现远程仓库中的不必要文件就被删除了，以后可以直接使用&amp;quot;git add -A&amp;quot;来添加修改的内容，上传的文件就会受到.gitignore文件的内容约束。
额外说明：git库所在的文件夹中的文件大致有4种状态
Git 状态 untracked 和 not staged的区别 1）untrack 表示是新文件，没有被add过，是为跟踪的意思。 2）not staged 表示add过的文件，即跟踪文件，再次修改没有add，就是没有暂存的意思</description>
    </item>
    
    <item>
      <title>2020 05 20 效果测试</title>
      <link>https://pub.oribos.cn/web/lambda/test/2020/202005201.html</link>
      <pubDate>Wed, 20 May 2020 16:47:51 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/lambda/test/2020/202005201.html</guid>
      <description>
颜色渐变：
.td-navbar { background: linear-gradient(90deg, rgb(247, 149, 51) 0, rgb(243, 112, 85) 15%, rgb(239, 78, 123) 30%, rgb(161, 102, 171) 44%, rgb(80, 115, 184) 58%, rgb(16, 152, 173) 72%, rgb(7, 179, 155) 86%, rgb(109, 186, 130) 100%); } background: linear-gradient(33deg, #F0F8FF,#FFFFFF); 使用浮动的方式实现页面分栏 使用bootstrap的方式 浮动实现多列 </description>
    </item>
    
    <item>
      <title>2020 05 18 记录</title>
      <link>https://pub.oribos.cn/web/blog/2020/note/2020051801.html</link>
      <pubDate>Mon, 18 May 2020 16:35:48 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/blog/2020/note/2020051801.html</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;upstream xxx.xxx.xxx{ 
#XXX.COM更改为需要负载均衡的域名
#upstream参数配置主副服务器
      ip_hash; #IP哈希值算法
      server  xxx.xxx.xxx:80; #服务器1，IP替换为自己的服务器真实IP
    
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;服务器被攻击&#34;&gt;服务器被攻击&lt;/h3&gt;
&lt;p&gt;为了测试负载均衡的效果，将网址分享出去，结果服务器很快就收到大量攻击。之前还没有真正接触到服务器攻击，后续服务器的设置出现如下变动：&lt;/p&gt;
&lt;p&gt;取消所有主机记录在dns上的A解析&lt;/p&gt;
&lt;h3 id=&#34;服务器被攻击带来的心理阴影&#34;&gt;服务器被攻击带来的心理阴影&lt;/h3&gt;
&lt;p&gt;不再在公共渠道公布自己的ip地址，部署在服务器上的网站都需要连接cdn，dns不再直接解析a记录&lt;/p&gt;
&lt;h4 id=&#34;对博客页面增加服务&#34;&gt;对博客页面增加服务&lt;/h4&gt;
&lt;p&gt;经过多次测试，现在将博客文件增加serverless 和cloudflare workers。配置文件添加到博客项目目录里，每次发布进行serverless  wrangler publish 和git push操作&lt;/p&gt;
&lt;h4 id=&#34;测试页面cdn&#34;&gt;测试页面cdn&lt;/h4&gt;
&lt;p&gt;对网站内容，增加多处cdn&lt;/p&gt;
&lt;h3 id=&#34;bhbnpub是主要文章发布页面&#34;&gt;b.hbn.pub是主要文章发布页面&lt;/h3&gt;
&lt;p&gt;b.hbn.pub作为主要文章发布页面，由以下几个部分组成&lt;/p&gt;
&lt;p&gt;g. 部署在github pages和coding pages上，这些内容由cdn解析成g.hbn.pub网页&lt;/p&gt;
&lt;p&gt;t. 配置文件和生成的public文件，部署在云服务器上。这些页面内容解析到t.hbn.pub页面&lt;/p&gt;
&lt;p&gt;然后再以g.hbn.pub和t.hbn.pub作为源站配置cdn为b.hbn.pub加速。&lt;/p&gt;
&lt;p&gt;g.hbn.pub 和t.hbn.pub 页面即添加有g. 或t. dns解析，由有b.解析。也就是说，这些内容均可以直接通过b.hbn.pub访问。&lt;/p&gt;
&lt;p&gt;即  b=(g/t/b)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2020 05 17 代码</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020051701.html</link>
      <pubDate>Sun, 17 May 2020 09:50:33 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020051701.html</guid>
      <description>通过 Workers 在边缘运行 JavaScript、Rust、C 和 C++ 等。 一个测试代码段
async function handleRequest(request) { const init = { headers: { &amp;#39;content-type&amp;#39;: &amp;#39;text/html;charset=UTF-8&amp;#39;, }, } return new Response(someHTML, init) } addEventListener(&amp;#39;fetch&amp;#39;, event =&amp;gt; { return event.respondWith(handleRequest(event.request)) }) const someHTML = `&amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;referrer&amp;#34; content=&amp;#34;origin&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;refresh&amp;#34; content=&amp;#34;1;url=http://b.hbn.pub&amp;#34;&amp;gt; &amp;lt;title&amp;gt;doc&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; .loading{ width: 80px; height: 40px; margin: 0 auto; margin-top:100px; } .loading span{ display: inline-block; width: 8px; height: 100%; border-radius: 4px; background: lightgreen; -webkit-animation: load 1s ease infinite; } @-webkit-keyframes load{ 0%,100%{ height: 40px; background: lightgreen; } 50%{ height: 70px; margin: -15px 0; background: lightblue; } } .</description>
    </item>
    
    <item>
      <title>2020 05 16 日记</title>
      <link>https://pub.oribos.cn/web/blog/2020/2020051601.html</link>
      <pubDate>Sat, 16 May 2020 20:49:12 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/blog/2020/2020051601.html</guid>
      <description>试验 serverless 试验了腾讯云的serverless 和阿里云的函数计算，体验都没有cloudflare workers方便。serverless 纵然是国内服务，下载安装程序还会无法连接，出错。
腾讯云糟糕的使用体验 使用serverless，程序出错，配置出错无法删除。更烦的就是每次登录要么是需要微信扫码，要么是qq登录手机确认。总之在腾讯的世界离开手机就活不成。
阿里云的业务限制 同样是serverless应用，cloudflare workers 和腾讯云的Serverless Framework都可以部署简单的静态页面测试，而阿里云就没有静态网页的模板。只能自己写代码。而部署较多文件就相对困难。给的php模板，还需要数据库。而繁琐的设置使得数据库连接必须使用完全公开的连接。文件存储NAS还分的a区，b区，c区。而我用的云服务器是a区，文件存储只有c区。可能跨区也能使用。但是繁琐的配置导致一直无法配置成功。
高大上的AWS服务 AWS中国区申请账户，需要公司材料等等一大批材料。搞得跟政审一样。不是没有材料，但这样的公司咱高攀不起！
恶心的linux操作 观察这些提示，或者说法令。用户在电脑面前成了奴隶，不准用root用户，权限太宽，
Permissions 0644 for &amp;lsquo;/root/.ssh/id_rsa&amp;rsquo; are too open.
Running Homebrew as root is extremely dangerous and no longer supported.
我就喜欢用root权限，就喜欢把权限设置太宽。怎么到linux/unix里面成了罪人了？
用workers函数计算代替功能性链接 通过cloudflare workers的函数的html，重定向等功能，代替原本的重定向，临时链接等功能。逐步将这些功能实现无服务器化.
markdownlint插件 一个奇葩插件，唯一作用就是时刻提醒你markdown哪里不规范，那么代码多打一个空格。代码规范提示本身没错，但是我那go语言，java写严格的程序你严格规范一下没错，闲下来用markdown写个日记都要处处要求这么多？ 如果代码确实错误导致内容丢失，文字异常倒也无所谓，奈何多大一个空格，多换一个行都要用醒目的颜色标注起来，还不会自动修正提示，要它何用？处处给自己找不自在？
github pages cdn 假如用a.uns.pub做github pages域名，希望用b.uns.pub在cdn上加速a.uns.pub内容. github给你来个404. 加入直接把a.uns.pub做加速域名，dns解析填上自己的github id. 页面可能会显示，但github会是不是给你发邮件提示你域名绑定问题，有病吧？就它的那慢的掉渣的速度，用上cdn还各种毛病！
事实上，这种cdn加速都是各种问题，各类厂商各类监测，稍微走捷径都来个404. 这种对访问者一点好处都没有的限制不知道为什么！
阿里云oss serverless framework 可以直接调用对象存储cos里的文件进行修改，发布。同样是对象存储的服务，阿里云的oss仅仅发布了几个一直都不更新的应用和客户端，一直都没有开发类似的将oss配合服务器或者函数计算运行的业务。
cloudflare 的workers 的kv存储，奈何容量太小价格太贵，一点都不实用。</description>
    </item>
    
    <item>
      <title>2020 05 14 过于霸道的某些产品</title>
      <link>https://pub.oribos.cn/web/blog/2020/note/2020051405.html</link>
      <pubDate>Thu, 14 May 2020 16:46:09 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/blog/2020/note/2020051405.html</guid>
      <description>尽可能少使用腾讯业务 原则1 尽可能的少使用腾讯业务
由于腾讯云在产品设计，业务运营上过于霸道，过于追求对用户的控制（微信登录捆绑手机验证，腾讯云登录需要手机验证，需要微信等多次验证）所以应尽可能的少使用腾讯业务。
由于网站选择部署在腾讯云的serverless 上，需要在腾讯云上配置一个对象存储。
微信 众所周知，电脑版微信必须使用手机扫码验证，如果遇到急事需要登录pc，就必须拿到手机才能登录。这是对用户习惯的绑架。也就是说，想用微信，你手机必须有摄像头，必须联网，必须安装手机版微信。其中必须安装手机版微信才是腾讯的目的。无论你是打算用pc端传文件，发消息也好，必须保证腾讯的手机应用的地位你才能这么做。
微信公众号的内容是禁止其他平台索引，引用的。微信公众号的内容就是一个完全封闭的框架。
微信聊天工具里的表情，gif都是刻意禁止限制禁止导出的。</description>
    </item>
    
    <item>
      <title>将hugo页面部署到workers</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020051401.html</link>
      <pubDate>Thu, 14 May 2020 11:01:20 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020051401.html</guid>
      <description>使用cloudflare workers 原文官方文档： workers sites
推送hugo生成的public需要使用Workers KV存储，费用每个月5美元
将域名交给cloudflare解析 添加记录 名称 b.ufs.im 内容 随便填，后续使用路由这里不会不会生效。 代理状态 已代理 保存
获取编辑workers的api令牌 在菜单-api令牌，生成自己的api令牌，通过选择编辑 Cloudflare Workers 权限和账户，生成一个应用api令牌。 这个令牌和脚本代码需要在之后操作中使用。
在本地电脑操作 Wrangler 安装Wrangler
这里的安装命令
npm uninstall -g @cloudflare/wrangler &amp;amp;&amp;amp; npm install -g @cloudflare/wrangler 报错，建议先安装cargo
curl https://sh.rustup.rs -sSf | sh cargo安装完毕后，按照提示，将cargo加入path
使用cargo安装wrangler
cargo install wrangler
在hugo项目的根目录配置Wrangler 执行Wrangler初始化
wrangler init --site workers项目名 然后将hugo根目录下的文件转移到workers项目名 （这里是否可以直接在hugo根目录下执行wrangler init 还没有测试）
编辑wrangler.toml
name = &amp;#34;workers项目名&amp;#34; type = &amp;#34;webpack&amp;#34; account_id = &amp;#34;api 账户id&amp;#34; workers_dev = false route = &amp;#34;b.</description>
    </item>
    
    <item>
      <title>2020 05 13 在workers上部署博客</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020051305.html</link>
      <pubDate>Wed, 13 May 2020 20:05:49 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020051305.html</guid>
      <description>Cloudflare workers blog Cloudflare workers + Github 实现的动态博客系统，使用边缘计算，无需服务器
Workers 是 Cloudflare 提供的边缘计算服务，原本是收费的，现在免费了，每天有 10 万次请求的免费额度。
用户可以使用 JavaScript 编写自己的程序，然后可以直接通过域名访问运行。
演示博客地址：https://blog.16lab.io/
项目地址 ：cloudflare-worker-blog
如何部署 首先在 Cloudflare 控制面板创建一个新的 workers
将 workers.js（或者 workers-sakurafrp.js） 的内容根据自己情况修改，然后替换 Cloudflare 在线编辑器的默认代码。
点击 Save and deploy 保存。
如何编写文章 首先创建一个 Github 项目，名字随意，然后将这个项目 clone 到本地。
# 示例 git clone https://github.com/kasuganosoras/cloudflare-worker-blog cd cloudflare-worker-blog/ 进入项目文件夹，新建一个 posts 文件夹
mkdir posts/ 在里面编写文章，内容一般用 .md 后缀即可，例如 helloworld.md
写完之后回到项目根目录（就是上级目录），然后新建一个 list.json
touch list.json 编辑 list.json，在里面写入以下内容
1 2 3 4 5 6 7 [ { &amp;#34;title&amp;#34;:&amp;#34;文章名称&amp;#34;, &amp;#34;time&amp;#34;:&amp;#34;发布时间&amp;#34;, &amp;#34;file&amp;#34;:&amp;#34;posts/helloworld.</description>
    </item>
    
    <item>
      <title>2020 05 13 Cloudflare付款异常</title>
      <link>https://pub.oribos.cn/web/blog/2020/note/2020051301.html</link>
      <pubDate>Wed, 13 May 2020 19:51:20 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/blog/2020/note/2020051301.html</guid>
      <description>在cloudflare付款异常 绑定信用卡时出现多次跳转和404错误，
而且最可气的是明明是cloudflare的页面问题，出现多次跳转，cloudflare竟然将访问这的ip地址限制访问。
多次尝试出现如下提示
确实是cloudflare的付款后台问题，一家大公司居然在付款时掉链子也是奇葩，还有cloudflare居然限制访问者ip地址，着实可恶！
测试cloudflare的workers功能。 测试博客页面http://b.ufs.im 部署在workers上的页面
还可以搭建jsproxy，但是还没心情配置。</description>
    </item>
    
    <item>
      <title>2020 05 11 人工智能</title>
      <link>https://pub.oribos.cn/web/docs/2020/note/2020051105.html</link>
      <pubDate>Mon, 11 May 2020 20:39:13 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/note/2020051105.html</guid>
      <description>&lt;h4 id=&#34;当前信息时代的假人工智能&#34;&gt;当前信息时代的假人工智能&lt;/h4&gt;
&lt;p&gt;尽管以集成电路,无线通讯等技术产生的信息革命给人类的社会带来了翻天覆地的变化,甚至有人开始憧憬未来,高度发达的信息化和人工智能.然而信息化带来的只是人类对生产力和社会活动的方式上的变革,对智慧生命等探索远未达到具有翻天覆地的变化.&lt;/p&gt;
&lt;p&gt;人工智能遥不可及,仔细观察周围的电子产品,它们虽然通过网络和大规模计算,然而执行的还是简单的&amp;quot;是&amp;quot;&amp;ldquo;否&amp;quot;&amp;ldquo;因为,所以&amp;quot;&amp;ldquo;当,则&amp;quot;等简单的行为.是一种&amp;quot;一阶谓词逻辑&amp;rdquo;,行为也是基于&amp;quot;或&amp;quot;&amp;ldquo;且&amp;quot;&amp;ldquo;非&amp;quot;等简单逻辑运行产生的.&lt;/p&gt;
&lt;p&gt;因为目前的人工智能根本不算什么智能,智能算是一个复杂的计算器.加上无线网络就是一个可移动的计算器.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2020 05 11 日记</title>
      <link>https://pub.oribos.cn/web/blog/2020/2020051101.html</link>
      <pubDate>Mon, 11 May 2020 16:58:00 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/blog/2020/2020051101.html</guid>
      <description>重新分配了已有的域名解析 hbn.pub ufs.pub 是自己用的主要域名,hbn负责提供内容,ufs负责提供静态资源.均国内服务器,交由阿里云解析.
pfs.pub uns.pub备用交由阿里云解析,是备用域名(其实就是没有再进行备案的国内注册域名)
ufs.im efs.app 交由cloudflare解析.这两个域名是海外注册,域名后缀无法再国内无法备案,原本希望长期使用却无法使用国内服务器.而且.app域名必须使用ssl证书访问,导致使用不方便,交由cloudflare解析并使用其cdn服务可以减少繁琐的证书注册.
为什么需要这么多域名?
因为人的需求是会变的⊙▽⊙,当初注册的域名,随着时间变化,不喜欢了,而喜欢的域名无法备案,不能正常使用国内服务器.所以在数量上就无法有效控制.
不想选择,我都要了!
每个页面保留一个pages服务 静态页面保留一个pages服务,当云服务器出现问题时,可以轻松通过切换源地址,临时使用github pages或者coding pages服务确保访问不中断.
一个对方pages页面，其他页面作为资源源站。
因为自用服务器总会因为各种原因重置系统
重新分配了网站域名 主要站点 t.hbn.pub b.hbn.pub
备用pages站点 info.pfs.pub book.efs.app
域名配置 info.pfs.pub在github,在云服务器上的是info.hbn.pub,两个站点数据一致
book.efs.app在github,在云服务器上的是book.hbn.pub,两者数据一致
部分资源防盗链 网页引用的仅供个人网页使用的图片和静态文件会使用防盗链。使用jsdelivr的资料不会做限制。
新的文件命名方式 2020-05-12-文件名.md
2020-05-12-分类-文件名.md
2020-05-12-&amp;lt;分类&amp;gt;-&amp;lt;文件名&amp;gt;-&amp;lt;属性&amp;gt;.md
引用hugo的post生成文件格式，更好的整理文档
html 格式
20200512&amp;lt;序号&amp;gt;.html
序号至有质数 01 02 03 05 07 09 11 13 17 19 23
git 常用命令 </description>
    </item>
    
    <item>
      <title>2020 05 10 域名的整理</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020051001.html</link>
      <pubDate>Sun, 10 May 2020 09:37:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020051001.html</guid>
      <description>.app域名可以由cloudflare解析 由于cloudflare既有域名解析服务,又能提供cdn服务,交由cloudflare解析的域名可以自动使用ssl证书,那么注册的.app就可以使用cloudflare自动管理证书文件.之前.app由于证书注册和使用不方便一直没有正常使用,现在交由cloudflare解析相当方便轻松。
.app域名无法备案 .app域名仅在cloudflare上使用,解析海外服务,github pages等服务。
.ufs.im 作为workers 路由域名 由cloudflare解析的ufs.im暂时作为workers的路由域名，负责部署在workers上的内容和功能链接。
在github上运行持续集成 自动使用hugo生成public
name: Deploy Hugo Site to Github Pages on Master Branch on: push: branches: - master jobs: build-deploy: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v1 # v2 does not have submodules option now # with: # submodules: true - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: &amp;#39;0.62.2&amp;#39; # extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: deploy_key: ${{ secrets.</description>
    </item>
    
    <item>
      <title>2020-05-09 提问的智慧</title>
      <link>https://pub.oribos.cn/web/docs/2020/note/askquestion.html</link>
      <pubDate>Sat, 09 May 2020 17:09:39 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/note/askquestion.html</guid>
      <description>提问的智慧 How To Ask Questions The Smart Way
Copyright © 2001,2006,2014 Eric S. Raymond, Rick Moen
本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。
原文网址：http://www.catb.org/~esr/faqs/smart-questions.html
Copyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015 by Ryan Wu
本中文指南是基于原文 3.10 版以及 2010 年由 Gasolin 所翻译版本的最新翻译；
协助指出翻译问题，请发 Issue，或直接发 Pull Request 给我。
本文另有繁體中文版。
原文版本历史 目录 声明 简介 在提问之前 当你提问时 慎选提问的论坛 Stack Overflow 网站和 IRC 论坛 第二步，使用项目邮件列表 使用有意义且描述明确的标题 使问题容易回复 用清晰、正确、精准并合法语法的语句 使用易于读取且标准的文件格式发送问题 精确地描述问题并言之有物 话不在多而在精 别动辄声称找到 Bug 低声下气不能代替你的功课 描述问题症状而非你的猜测 按发生时间先后列出问题症状 描述目标而不是过程 别要求使用私人电邮回复 清楚明确的表达你的问题以及需求 询问有关代码的问题时 别把自己家庭作业的问题贴上来 去掉无意义的提问句 即使你很急也不要在标题写紧急 礼多人不怪，而且有时还很有帮助 问题解决后，加个简短的补充说明 如何解读答案 RTFM 和 STFW：如何知道你已完全搞砸了 如果还是搞不懂 处理无礼的回应 如何避免扮演失败者 不该问的问题 好问题与蠢问题 如果得不到回答 如何更好地回答问题 相关资源 鸣谢 声明 许多项目在他们的使用协助/说明网页中链接了本指南，这么做很好，我们也鼓励大家都这么做。但如果你是负责管理这个项目网页的人，请在超链接附近的显著位置上注明：</description>
    </item>
    
    <item>
      <title>2020 05 09 文件管理</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020050905.html</link>
      <pubDate>Sat, 09 May 2020 16:08:12 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020050905.html</guid>
      <description>关于文件命名和文件等级 内容 文件夹名称 等级 主目录 ufs 0 备份文件 backup 0 本地应用 app 0 下载文件 download 1 工作 work 1 文档 documents 1 媒体库 mms 1 关于文件备份位置 1 区分重要性和冗余类型
1类 本地电脑存储+nas+对象存储私有桶 必要情况下，需要在多个对象存储里备份。长期备份文件需要在对象存储里选 择归档存储。长期备份的文档进行更迭时，1类文件不可删除。 2类 nas或者对象存储私有桶 大容量文件需要在nas保留一份复制，保障在需要时候及时查阅，不用从对象存储上下载花费流量费用。 3类 本地电脑或web服务器存储+对象存储公有桶 4类 对象存储公有桶或web服务器目录 文件版本号以及持续性 已经归档的文件需要标注归档版本号和上一次备份时间。 应在目录下记录备份的时间，位置，版本号。 记录的备份位置不应做不必要的修改。 文件备份原则 并非所有的资料都需要备份，只有有价格的、重要的内容才需要备份 资料备份的同时还是注重索引和搜索。大量文件里找到自己需要的文件是极 其困难的，所以就需要必要的关键字、目录索引、搜索设置、文件分类等设置。 本地电脑的文件，在不备份的情况下属于不可靠的。 图片，视频等可以在windows文件管理器里预览的文件名可以不用严格命 名。不能预览的文件需要严格命名。 </description>
    </item>
    
    <item>
      <title>2020 05 09 git submodule</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020050903.html</link>
      <pubDate>Sat, 09 May 2020 16:04:46 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020050903.html</guid>
      <description>git submodule
文章来源 知乎-孤单彼岸
背景 面对比较复杂的项目，我们有可能会将代码根据功能拆解成不同的子模块。主项目对子模块有依赖关系，却又并不关心子模块的内部开发流程细节。
这种情况下，通常不会把所有源码都放在同一个 Git 仓库中。
有一种比较简单的方式，是在当前工作目录下，将子模块文件夹加入到 .gitignore 文件内容中，这样主项目就能够无视子项目的存在。这样做有一个弊端就是，使用主项目的人需要有一个先验知识：需要在当前目录下放置一份某版本的子模块代码。
还有另外一种方式可供借鉴，可以使用 Git 的 submodule 功能，也是这篇文章的主题。
实际上 Git 工具的 submodule 功能就是建立了当前项目与子模块之间的依赖关系：子模块路径、子模块的远程仓库、子模块的版本号。
使用流程 假定我们有两个项目：project-main 和 project-sub-1，其中 project-main 表示主项目，而 project-sub-1 表示子模块项目。
其中 project-main 的远程仓库地址为 https://github.com/username/project-main.git，而 project-sub-1 的远程仓库地址为 https://github.com/username/project-sub-1.git。
接下来，我们希望在 project-main 中添加 project-sub-1 ，而又保持 project-sub-1 自身独立的版本控制。
1.创建 submodule 使用 git submodule add &amp;lt;submodule_url&amp;gt; 命令可以在项目中创建一个子模块。
进入项目 project-main ，输入：
➜ project-main git:(master) git submodule add https://github.com/username/project-sub-1.git 正克隆到 &amp;lsquo;/path/to/project-main/project-sub-1&amp;rsquo;&amp;hellip; remote: Enumerating objects: 3, done. remote: Counting objects: 100% (3/3), done.</description>
    </item>
    
    <item>
      <title>2020 05 09 自动跳转测试</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020050901.html</link>
      <pubDate>Sat, 09 May 2020 11:13:44 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020050901.html</guid>
      <description>&amp;lt;meta http-equiv=&amp;#34;refresh&amp;#34; content=&amp;#34;1;url=http://info.hbn.pub&amp;#34;&amp;gt; &amp;lt;style&amp;gt; .loading{ width: 80px; height: 40px; margin: 0 auto; margin-top:100px; } .loading span{ display: inline-block; width: 8px; height: 100%; border-radius: 4px; background: lightgreen; -webkit-animation: load 1s ease infinite; } @-webkit-keyframes load{ 0%,100%{ height: 40px; background: lightgreen; } 50%{ height: 70px; margin: -15px 0; background: lightblue; } } .loading span:nth-child(2){ -webkit-animation-delay:0.2s; } .loading span:nth-child(3){ -webkit-animation-delay:0.4s; } .loading span:nth-child(4){ -webkit-animation-delay:0.6s; } .loading span:nth-child(5){ -webkit-animation-delay:0.8s; } &amp;lt;/style&amp;gt; &amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;loading&amp;#34;&amp;gt; &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; </description>
    </item>
    
    <item>
      <title>2020 05 08 对点击的应用</title>
      <link>https://pub.oribos.cn/web/blog/2020/note/2020050804.html</link>
      <pubDate>Fri, 08 May 2020 22:22:53 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/blog/2020/note/2020050804.html</guid>
      <description>重定向跳转 通过a标签的链接,点击进入下一页是最简单的链接.而如何在不改变原文件html编码的情况下修改链接? 就需要一个点击重定向.
对固定页面比如www首页,使用点击重定向.
莫名其妙的Homebrew hugo的页面推荐安装方式是brew install hugo ,需要使用Homebrew安装，但是这个homebrew是mac系统上常用的包管理器，linux上并不常用。偶尔有空试试用这个Homebrew安装一下应用，奈何太难用。
使用Homebrew 最莫名起来的是此程序不允许root用户运行，这种强迫着实让人反感。
然后是 推荐安装方式
/bin/bash -c &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&amp;quot;
经常性无法连接。
再接着是极慢的下载速度。
事实上使用github作为软件发放源的方式，下载都极慢。
更新：更换海外服务器同步后，速度起飞
换一种安装方式
sudo yum groupinstall &amp;#39;Development Tools&amp;#39; sudo yum install curl file git sudo yum install libxcrypt-compat # needed by Fedora 30 and up 最后一步无法安装。。。
结果 无论是主页推荐安装方式，yum安装方式，源代码安装方式，均由于极慢的下载速度，找不到文件等等原因无法安装这个Homebrew 。 体验失败。
极其糟糕的使用体验。
coding pages无法访问 5月5日晚上发现自己的博客网站访问异常,原本博客网站部署在coding pages,然后再用上阿里云cdn.出现异常原本以为是阿里云cdn缓存异常.结果长时间仍然无法访问.就将cdn停掉,直接使用源coding pages地址访问.发现无法访问.
换掉coding pages的服务 由于网站停止访问时间太长,已经对coding的服务产生担忧.刚开始的无法访问还以为是阿里云的问题,结果是持续服务的coding出现网络故障.
后续对所有之前使用的coding pages的页面全部改用云服务器,oss和jsdelivr.涉及到旧文档的链接都进行修改.删除coding上的仓库.停用部分coding上的项目.将博客网站从coding pages的解析换到云服务器上,
对coding 的信任程度下降 对coding 的迁移仅仅是处于不信任下的测试,因为国内github也不是很稳定,必须在两者这件找到平衡.
受此次故障影响,删除了几乎所有用来提供web访问的仓库,pages页面和静态资源内容全部迁出coding.
后续影响 突如其来的coding pages无法访问.导致对本地发布+coding pages浏览的方式的彻底否定.</description>
    </item>
    
    <item>
      <title>2020 05 08 网页整理</title>
      <link>https://pub.oribos.cn/web/blog/2020/note/2020050804.html</link>
      <pubDate>Fri, 08 May 2020 15:34:46 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/blog/2020/note/2020050804.html</guid>
      <description>&lt;h4 id=&#34;网页又一次重新整理&#34;&gt;网页又一次重新整理&lt;/h4&gt;
&lt;p&gt;之前遇到的情况是网页部署的位置coding pages和github pages不稳定.时常出现网页无法打开的情况.&lt;/p&gt;
&lt;p&gt;针对此问题,期望通过CDN同时缓存两个站点以备用.但是coding和github采用的不同的网页访问限制,导致CDN出现困难.暂时没有找到解决办法.&lt;/p&gt;
&lt;p&gt;现在采用的方法是首页www放置到固定位置,然后通过访问www页面的不同内容链接,链接到coding pages页面上.这样当coding pages访问异常时,只会影响coding pages页面上的内容,而影响不到首页.后续可能在这种链接上加入跳转中间页跳转功能.链接到多个内容源.&lt;/p&gt;
&lt;h4 id=&#34;内容分散&#34;&gt;内容分散&lt;/h4&gt;
&lt;p&gt;由于采用的首页和内容页分离的方法,不同的内容页就导致文档更新分散.有时候可能出现把文件归错类,多个页面内容重复的情况.&lt;/p&gt;
&lt;h4 id=&#34;中间页跳转&#34;&gt;中间页跳转&lt;/h4&gt;
&lt;p&gt;首页的某个&lt;strong&gt;链接&lt;/strong&gt;,连接到&lt;strong&gt;链接1&lt;/strong&gt;,链接1可以设置一个跳转到&lt;strong&gt;页面2&lt;/strong&gt;,也可以在某个情况下设置跳转到&lt;strong&gt;页面3&lt;/strong&gt;,首页链接和页面2,页面3都是固定的内容页,但是用来跳转的的链接1是可变的.&lt;/p&gt;
&lt;p&gt;目前这个链接地址为 &lt;a href=&#34;http://i.ufs.pub/kit/&#34;&gt;http://i.ufs.pub/kit/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;url地址&#34;&gt;url地址&lt;/h4&gt;
&lt;p&gt;有些人认为页面带&lt;code&gt;.html&lt;/code&gt;很丑,但我已经坚持将页面跟图片视频一样带有必要的后缀.即:显示最终内容的页面坚持传统的带.html,跳转链接等功能性的页面不带html.&lt;/p&gt;
&lt;h3 id=&#34;对linux系统及其应用的吐槽&#34;&gt;对linux系统及其应用的吐槽&lt;/h3&gt;
&lt;h4 id=&#34;各类问题点&#34;&gt;各类问题点&lt;/h4&gt;
&lt;p&gt;操作基于代码,或者说是最低端操作体验.需要记单词,需要区分大小写,需要区分字符类型.本身就是算法的操作思想却被&lt;strong&gt;照搬&lt;/strong&gt;给用户使用.&lt;/p&gt;
&lt;p&gt;使用代码操作并不是因为多高大上,&lt;strong&gt;成品素质差&lt;/strong&gt;,没有适合的,专业的,稳定的操作界面.随之而来的就是各类gui操作界面,网页操作界面.总之,产品总是不完善.&lt;/p&gt;
&lt;p&gt;过于散乱的包管理器ubuntu的 apt,centos的yum ,nodejs的npm,还有Homebrew,RubyGems等等,linux系统已经够多了,包管理器,一个应用级的程序居然也有如此之多,充分体现了&lt;strong&gt;linux用户互相容不下别人的思想&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;这些系统和包管理器,如果真的跟随系统对应,或者类似npm的应用广泛还能易用就没什么问题,奈何各类软件总是遇到各类神奇问题,&lt;strong&gt;网络不畅下载极慢&lt;/strong&gt;,&lt;strong&gt;版本不兼容&lt;/strong&gt;,对中文支持不佳.&lt;/p&gt;
&lt;p&gt;版本众多,更新保守导致&lt;strong&gt;产品碎片化严重&lt;/strong&gt;.&lt;/p&gt;
&lt;h4 id=&#34;事例&#34;&gt;事例&lt;/h4&gt;
&lt;p&gt;一个在Windows linux macOS上广泛使用的静态网站生成器,他推荐的安装方式是:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;brew install hugo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是什么鬼东西,你把macOS上的工具照抄下来?为了安装这个静态网站生成器,需要安装golang git 这是运行基础,这个brew不就是一个macOS包管理器吗,&lt;/p&gt;
&lt;p&gt;为啥推到linux默认安装?  至于这么麻烦吗?  嫌用户入门太低?&lt;/p&gt;
&lt;p&gt;而且这个brew安装极慢,使用极不方便!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;hugo里面的主题,&lt;strong&gt;各类安装方式都有&lt;/strong&gt;,各类toml,yaml甚至json配置文件.各类css,scss,PostCSS乱七八糟的东西.&lt;/p&gt;
&lt;p&gt;你感觉使用一个合格的主题就行了,没必要琢磨这么多,然而,几百个主题,没几个适合的.也就是说&lt;strong&gt;大部分都是残次品&lt;/strong&gt;.要么不能自定义很多东西,要么各类不兼容,大部分都需要深度加工.当然&lt;strong&gt;下载极慢是家常便饭&lt;/strong&gt;.另外还有花样繁多的安装方式,配置文件,扩展程序.私有文件.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;复杂的操作,使用zip分卷压缩和解压缩文件,代码如下&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cat a* &amp;gt; a.tar.gz   // 将该目录下的a.z01  a.z02  a.z03 全部集合到一个压缩包a.tar.gz
tar xzvf a.tar.gz   // 解压缩a.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;关于文件命名和文件等级&#34;&gt;关于文件命名和文件等级&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;内容&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;文件夹名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;等级&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;主目录&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;ufs&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;备份文件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;backup&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;本地应用&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;app&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;下载文件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;download&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;工作&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;work&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;文档&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;documents&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;媒体库&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;mms&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;对资源的命名&#34;&gt;对资源的命名&lt;/h3&gt;
&lt;h4 id=&#34;文件格式&#34;&gt;文件格式&lt;/h4&gt;
&lt;p&gt;2020-05-12-文件名.md&lt;/p&gt;
&lt;p&gt;2020-05-12-分类-文件名.md&lt;/p&gt;
&lt;p&gt;2020-05-12-&amp;lt;分类&amp;gt;-&amp;lt;文件名&amp;gt;-&amp;lt;属性&amp;gt;.md&lt;/p&gt;
&lt;p&gt;新文件格式&lt;/p&gt;
&lt;p&gt;引用hugo的post生成文件格式，更好的整理文档&lt;/p&gt;
&lt;p&gt;html 格式&lt;/p&gt;
&lt;p&gt;20200512&amp;lt;序号&amp;gt;.html&lt;/p&gt;
&lt;p&gt;序号至有质数 01 02 03 05 07 09 11 13 17 19 23&lt;/p&gt;
&lt;h4 id=&#34;目录名&#34;&gt;目录名&lt;/h4&gt;
&lt;p&gt;根目录 所有文件总和                UFS   denalon&lt;/p&gt;
&lt;p&gt;次级目录  公开的分享的资源&lt;/p&gt;
&lt;p&gt;kit   工具
site  服务器配置文件
web  服务器共享文件
ufs   资源文件&lt;/p&gt;
&lt;p&gt;backup app mms&lt;/p&gt;
&lt;p&gt;重新规定了目录，UFS和denalon是主目录（在一个设备中只有一个主目录）&lt;/p&gt;
&lt;p&gt;site 是配置文件目录，存放配置文件，系统临时文件目录&lt;/p&gt;
&lt;p&gt;kit 重要 是工具文件  子目录   app  key ssh  hb个人记事本&lt;/p&gt;
&lt;p&gt;ufs  重要  公开共享的文件  web文件  子目录 web  其他文件&lt;/p&gt;
&lt;p&gt;download  下载文件 临时目录&lt;/p&gt;
&lt;p&gt;mms 重要  多媒体文件&lt;/p&gt;
&lt;p&gt;backup 备份文件&lt;/p&gt;
&lt;h4 id=&#34;对服务的命名&#34;&gt;对服务的命名&lt;/h4&gt;
&lt;p&gt;hb-XXXX-123&lt;/p&gt;
&lt;p&gt;hb 或fn  zb 是服务类型&lt;/p&gt;
&lt;p&gt;XXXX  服务分类&lt;/p&gt;
&lt;p&gt;公共资源 web
功能  kit&lt;/p&gt;
&lt;p&gt;123 编号，序列&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2020 05 08 效果测试页面</title>
      <link>https://pub.oribos.cn/web/lambda/test/2020/2020050809.html</link>
      <pubDate>Fri, 08 May 2020 11:38:06 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/lambda/test/2020/2020050809.html</guid>
      <description>&lt;h3 id=&#34;在md文件里使用div做两边的分栏显示&#34;&gt;在md文件里使用div做两边的分栏显示&lt;/h3&gt;
&lt;hr&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;其他页面&lt;/p&gt;
&lt;p&gt;用来测试效果&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2020 05 08 部署记录01</title>
      <link>https://pub.oribos.cn/web/blog/2020/note/2020050802.html</link>
      <pubDate>Fri, 08 May 2020 11:38:06 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/blog/2020/note/2020050802.html</guid>
      <description>服务器部署记录 个人项目取消oss 由于oss的存储和访问都需要计费。最经济的情况下，使用coding pages和 jsdelivr代替之前的oss文件。原oss里文件，整天搬迁到coding pages上，域名和访问地址不变。
后续的静态资源引用使用jsdelivr或者coding pages 的url地址。 考虑到coding pages访问速度不稳定。可以使用国内cdn加速。
由于计费问题，取消所有oss服务。外部访问的文件全部下载下来单独保存。backup文件暂时保留。
对服务器和git仓库全面使用秘钥登录 对coding仓库，github仓库，云服务器全面使用私钥登录。
不再使用php 个人的网站和网页设计不再使用php项目。
页面发布步骤 WWw页面是一个归纳页面,首先访问www页面,建立单独仓库和发布源.
然后通过选择不同的内容,跳转到文章更新和随笔网页. 跟www页面属于不同的发布源.
关于页面均在www页面
精简仓库数量 简化coding上的仓库数量,保留一个备份和一个pages仓库.
hugo站点的发布过程 原先对hugo的编辑是直接在主题文件夹里的源代码进行修改,这样主题更新以后,要么源代码被覆盖,要么重新设置.
而现在,将部分文件转移到根目录下的data,assets,layouts等目录里,配置信息同主题分离.以方便以后更换主题或主题更新.
css,font,js文件均有根目录下的文件夹提供(统一归为custom文件).
修改文件直接在git仓库目录下编辑,将git仓库文件同本地临时配置文件夹合为一个,对于测试代码,可以新建分支或仓库,避免主目录太多太乱.
进一步整理git仓库 对主文件目录base,同时链接两个远程库a和b,两个远程库分别放置最近更新和稳定更新的内容.
后续,进一步差异化两个远程库的文件.对应的,pages也分成最近更新和稳定更新的内容.
一个base文件夹同时对应远程库a的base,和远程库b的base
取消本地电脑的本地仓库 一般情况下使用vsc在电脑上直接编辑远程服务器上的本地库,然后同步到远程库,尽可能的减少放到本地电脑的版本.
github上的仓库仅仅用作jsdelivr 的cdn源,本地一般不直接向github的仓库推送,只有在服务器端向github推送
gitee和阿里云等其他git代码托管的仓库全部取消.
用于web访问的域名为 页面: hbn.pub 资源:ufs.pub 备用 :ufs.im
为什么要频繁整理 随着采用的理论和技术越来越细致,过去的方法越来越不合适.有必要增加新的管理方法,采用新的技术.这就会导致旧的东西跟新东西发生冲突.
体现在网站内容上,由于采用了新的文件管理方法.新的页面将统一采用新的文件结构,新的UFS结构重新命名了主文件夹和次级文件夹,重新规范了命名规则.一直运行的旧的b.hbn.pub仍然使用旧的结构不变.新更新的内容将采用新结构.
对于归档.可以考虑在某个时间对整个b.hbn.pub做归档,启用一个专用的归档域名.
本地仓库同步到多个远程库 通过以下命令将远程库加入 origin 列表里 git remote set-url --add origin **自己的仓库名**
再通过git remote -v 查看远程版本库信息，显示如下
这样可以,将一个本地文件同步到多个远程仓库里,以起到冗余备份的功能.
魔改主题 hugo的主目录下的 主目录/layouts/partials 是可以替代 主题目录/layouts/partials 文件的.
由于hugo-meme主题不支持某些bootstrap4代码,魔改主题需要修改对应的html代码,
在这个主目录/layouts/partials里的修改不影响后续主题更新</description>
    </item>
    
    <item>
      <title>2020 05 08 部署记录02</title>
      <link>https://pub.oribos.cn/web/lambda/test/2020/2020050801.html</link>
      <pubDate>Fri, 08 May 2020 11:38:06 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/lambda/test/2020/2020050801.html</guid>
      <description>文件整合 对某些类型,某些特定功能的文件的整合.以减少文件数量和页面. 1. 将某一段时间的日志文件整合到一个文件夹. 2. 对某些类型的文件归入一个&amp;quot;标签&amp;quot;,增加关键字和分类 3. 文件的链接和引入. 4. 减少文件数量,减少目录的数量.即保证功能分目录增加又减少繁杂的新文件.
例子:新的功能 文件目录结构: /总目录/功能目录/类别/2020-05-01-名称-附加.文件名
总目录:用于整合所有有用文件.排除测试,临时,大文件等. 总目录:
kit 所有app,大文件,存档,backup等 site 服务器的日常文件, project 主要工作文件,项目 project的文件夹的所有内容都是要随时备份的,site可以根据需要备份或同步.kit内的文件是交给内部存档.不用于同步和重要备份
功能目录: web 发布的文档 olf 私有文件 文件名 2020-05-01-名称-附加.文件名 文件更新均在当年使用,之前的文档全部转入归档文件夹,文件夹的分类主要根据日期和附加类型区分,即附加名称为日记的均放到hb的类别目录下.
前端即网站前台部分，运行在PC端，移动端等浏览器上展现给用户浏览的网页。随着互联网技术的发展，HTML5，CSS3，前端框架的应用，跨平台响应式网页设计能够适应各种屏幕分辨率，完美的动效设计，给用户带来极高的用户体验。
如下图: 核心技术 HTML、CSS、JavaScript
这三个是前端开发中最基本也是最必须的三个技能。前端的开发中，在页面的布局时， HTML将元素进行定义，CSS对展示的元素进行定位，再通过JavaScript实现相应的效果和交互。虽然表面看起来很简单，但这里面需要掌握的东西绝对不会少。在进行开发前，需要对这些概念弄清楚、弄明白，这样在开发的过程中才会得心应手。
HTML 指的是超文本标记语言 (Hyper Text Markup Language)，这个也是我们网页最常用普通的语言了，经历了多个版本的发展，已经发展到5.0版了，得力于W3C建立的标准和规范，已普遍升级到了XHTML，XHTML 指可扩展超文本标签语言（EXtensible HyperText Markup Language）， XHTML 于2000年的1月26日成为 W3C 标准，是更严格更纯净的 HTML 代码，XHTML 的目标是取代 HTML。XHTML 与 HTML 4.01 几乎是相同的，XHTML 是作为一种 XML 应用被重新定义的 HTML，是一个 W3C 标准。W3C 将 XHTML 定义为最新的HTML版本。所有新的浏览器都支持 XHTML。
CSS 级联样式表（Cascading Style Sheet）简称“CSS”，通常又称为“风格样式表（Style Sheet）”，它是用来进行网页风格设计的。比如，如果想让链接字未点击时是蓝色的，当鼠标移上去后字变成红色的且有下划线，这就是一种风格。通过设立样式表，可以统一地控制HTML中各标志的显示属性。级联样式表可以使人更能有效地控制网页外观。使用级联样式表，可以扩充精确指定网页元素位置，外观以及创建特殊效果的能力。</description>
    </item>
    
    <item>
      <title>2020 05 08 文章</title>
      <link>https://pub.oribos.cn/web/lambda/test/2020/2020050803.html</link>
      <pubDate>Fri, 08 May 2020 11:37:57 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/lambda/test/2020/2020050803.html</guid>
      <description>微信在电脑上登录必须使用手机验证? 为什么在电脑上登录必须使用手机验证?表面上看是为了安全.实际上
任何以安全名义迫使用户做的事情实则是一种商业行为
比如 登录会员需要验证短信,其实是为了减少会员的转借. 每次登录需要验证其实是对用户的绑架.
以安全名义迫使用户必须安装手机版微信才能正常使用微信pc端功能.就是一种强迫和绑架.通过这件小事,仔细回想一下腾讯的产品,腾讯游戏?名声烂透了. 腾讯QQ,各种红黄蓝绿黑钻,qq会员等等捞钱工具.而对用户提供帮助和支持的功能很少.再一个腾讯文档.导入文件容易,向导出来就难了,要一个个打开,另存.
的出来一个结论
腾讯产品往往是低质量的应用
腾讯封闭的生态圈 微信公众号禁止外部搜索,微信gif图片无法导出,qq的外链安全检查等等许许多多大大小小的问题,说明腾讯的产品往往是背离互联网的开放共享精神,而极度封闭,禁锢. 而他们专门生产封闭内容,然后推广自己的产品赚钱.真正开放的腾讯微博,朋友网等等.都被其放弃了.
这还不是全部 这些只是个人根据所接触的东西分析的,而考虑到腾讯的企业精神在更多的方面必然存在各种问题,我总结的并不全面,但足以使我对其产品和企业没有任何好感.相应的以后选购产品尽可能规避腾讯产品.尽可能少的向腾讯产品付费.
我所做的微不足道,但是自己会坚持.
金融知识-做空 做空步骤(先卖出再买入） 假设情况下
第一步 向银行缴纳保证金30万，获得1公斤黄金
第二步 卖出这一公斤黄金，获得30万(有部分手续费)
第三步 假设黄金下跌到20万，此时购买一公斤黄金。
第四步 拿一公斤黄金归还银行，获得30万保证金。
1 保证金可以是100万,也可能是一个白条.只是一个风险控制方法.
2 黄金卖出价和买入价是不同的,中间有少许手续费
3 做空步骤肯定等价格下跌才能购入,如果价格一直上涨则赔钱
负油价 近来，由于新冠肺炎疫情和价格战的影响，国际油价开始大幅度下跌。在2020年4月21日夜间的几个小时里，更是令人瞠目结舌地达到了-37.63美元。虽然之后很快恢复到正数，但是这也创下了1861年BP开始统计油价以来的最低值。
负油价到底是什么意思？意味着什么？我们再用三分钟时间加以讲解。
油价变成负的，是不是表示我去加油站加油，加油站还得付我钱？ 注意，这里变成负数的，是美国西得州轻质原油（WTI）五月期货结算价。你在加油站买的，叫做“现货”，而国际石油市场上交易的，是“期货”。期货再便宜，到加油站还需要加上炼油成本、运输成本、人工成本，就变成了你在加油站看到的价格。
特别是对于我国消费者来说，按照2016年出台的《石油价格管理办法》规定，我国成品油价格机制设有上下限：上限为每桶130美元，下限为40美元，即当国际市场原油价格高于每桶130美元时，汽、柴油最高零售价格不提或少提；低于40美元时，最高零售价格不再下调。
也就是说，国际油价就算跌成负值，国内油价到了40美元就不会下调了。
到底什么是期货，为啥五月原油期货跌这么多？六月份期货就没怎么跌？ 期货的特点是平时正常购买、交易(还可以提供保证金加杠杆)，但是到了某一天就需要“交割”，就是要把石油真得交给你。
因为五月期货4月21日截止，那么你面临三个选择：要不就是找个仓库、邮轮，把这些油储存起来。（原油是化工原料，可不像牛奶，不能一倒了事）但是，要知道原油交易一个交易单位（一手）就是四万加仑，而现在全世界的油库、邮轮都已经装满，存储成本极高。
目前停泊在海上的邮轮密密麻麻，无法卸载，这还只是东亚
要不，就赶紧“移仓”，就是把手里的合约换成下个月的。对于第一个选项，移仓的话，从五月移到六月，价格差了不少，至少要亏27%以上。
那怎么办？第三个选项，就是拼命卖掉，不管价格，白送、倒贴，怎么也要在油真正交到自己手里之前，把这些仓位清空。
实际上，五月期货卖完，现在就轮到六月份了，就今天一天，六月期货的价格已经下跌了20%以上。
油价这么便宜，我想要抄底的话，应该怎么办？ 目前可供选择的原油相关资产投资渠道，包括国内上海原油期货市场、香港的部分原油ETF，和国内股市上的石油公司和相关企业的股票。但是正如昨晚暴跌所揭示的，这个时候抄底，风险是非常非常大的。
油价为什么会下跌这么厉害？ 简单来说，新冠肺炎疫情导致需求继续降低（飞机、汽车这些耗油大户都不走了），而前期沙特发起的价格战又使得产量没有迅速减少，供过于求，自然价格一路下滑。
当然，期货市场实际上是一个对手盘，有多方和空方互博，这样的恶性下跌有炒作的成本在里面，不展开说了。
既然油价下跌这么多，为什么北美这些油井不一关了事，还要做赔钱生意？ 因为井下的情况一直是在动态变化的，油井关闭再重开，需要做一段时间的压力测试，而且人员又要重新安置，这笔账算下来，有些生产商宁可赔钱，也希望保持正常生产。但是，因为油价最近低迷不振，北美已经有很多生产商的确关闭了油井。
不断下跌的油价对经济、民生有什么影响？ 正面影响：
2019年，我国原油进口量50572万吨，石油对外依存度达70.8%。国际油价下跌，意味着进口成本大幅降低，有助于各行各业降低成本，特别是交通运输行业。快递费、机票会更便宜了！（虽然现在坐飞机的人已经很少了） 负面影响：
倾巢之下，岂有完卵。原油价格的下跌只是当前全球活动经济萎缩的一个表现，在这场影响到所有人的“大考”面前，没有哪个行业能够独善其身。
原油期货首次跌成负数
在4月15日之前，油价之前是不允许变成负数的。
4月15号，芝加哥商品交易所（CME）发布修改程序支持负油价，当时，所有的原油期货合约价格还在20美元上方。
当天，CME把允许负油价的消息在官网上进行了公布，但中行没有通知散户。
买了中行原油宝的散户中，不乏投资小白，对风险的意识不足，加上并不知道油价会跌成负数这件事，他们之后在不断下降的油价中，基本上是稀里糊涂地坐以待毙。
如果提前知道油价会跌成负数，散户们至少还能提前赎回，在油价跌成负数之前挽回一部分损失。
4月21日（美国当地时间4月20日），是美国WTI原油5月合约的最后交易日。收盘时，美国WTI 原油5月期货价格下跌55.90美元，结算价收于每桶-37.63美元，跌幅为305.97％。这是自石油期货从1983年在纽约商品交易所开始交易后的首次负值交易。
负油价意味着，在这次原油市场历史上绝无仅有的一次波动中，卖方必须向买方支付购买原油期货费用。
据说，这次原油期货负值，涉及77000手原油期货交易，总计亏损300多亿。
散户倒欠中行钱</description>
    </item>
    
    <item>
      <title>2020 05 08 Cdn加速</title>
      <link>https://pub.oribos.cn/web/deploy/2020050801.html</link>
      <pubDate>Fri, 08 May 2020 10:25:49 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020050801.html</guid>
      <description>通过cdn加速 由于github pages 和coding pages,Netlify等服务在国内访问速度堪忧,甚至会故障.就需要一种访问同时缓存这三家服务以及本地云服务器.</description>
    </item>
    
    <item>
      <title>2020 05 07 Hugo的目录</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020050701.html</link>
      <pubDate>Thu, 07 May 2020 20:55:14 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020050701.html</guid>
      <description>重新整理的目录 重新将网站的目录区分开,因为hugo使用默认的posts,archives等标签会被默认设置修改效果.所以修改成其他标签名称.使用categoryBy = &amp;quot;sections&amp;quot;
重新整理的目录使得public根目录下来又多出来许多标签文件夹.导致目录混乱,不易归档.
按照上一年文档归档 每年一次将上一年文件归档存放到archive文件夹下</description>
    </item>
    
    <item>
      <title>2020 05 06 Postcss问题</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020050608.html</link>
      <pubDate>Wed, 06 May 2020 22:22:55 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020050608.html</guid>
      <description>使用hugo docsy主题出现如下问题 Replace Autoprefixer browsers option to Browserslist config. Use browserslist key in package.json or .browserslistrc file. Using browsers option cause some error. Browserslist config can be used for Babel, Autoprefixer, postcss-normalize and other tools. If you really need to use option, rename it to overrideBrowserslist. Learn more at: https://github.com/browserslist/browserslist#readme https://twitter.com/browserslist 这个提醒应该是某个插件不再使用,提示修改配置,网上搜很多方法,都是含糊其词,
我搜索关键词到 ~/hugo根目录/themes/docsy/postcss.config.js 文件
然后把以下代码
module.exports = { plugins: { autoprefixer: { browsers: [ &amp;#34;Android 2.3&amp;#34;, &amp;#34;Android &amp;gt;= 4&amp;#34;, &amp;#34;Chrome &amp;gt;= 20&amp;#34;, &amp;#34;Firefox &amp;gt;= 24&amp;#34;, &amp;#34;Explorer &amp;gt;= 8&amp;#34;, &amp;#34;iOS &amp;gt;= 6&amp;#34;, &amp;#34;Opera &amp;gt;= 12&amp;#34;, &amp;#34;Safari &amp;gt;= 6&amp;#34; ] } }, } 改成以下代码,就不再报错</description>
    </item>
    
    <item>
      <title>2020 05 06 价值观</title>
      <link>https://pub.oribos.cn/web/idea/2020050603.html</link>
      <pubDate>Wed, 06 May 2020 16:27:39 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/idea/2020050603.html</guid>
      <description>丑小鸭的故事 丑小鸭是丹麦作家安徒生创作的童话，描写了一只天鹅蛋在鸭群中破壳，历经重重磨难之后长成白天鹅的故事
从前，有一枚天鹅蛋在鸭巢里被母鸭孵出，可是它却因为长相与众不同而被大家嘲笑称为“丑小鸭”。丑小鸭自破壳后便受到种种排挤、讥笑，大家都要赶走这个可怜的小鸭子，于是他只好伤心的连夜飞过篱笆逃走了。孤独的丑小鸭经常被欺负，他为自己的丑陋感到自卑，直到在湖边遇到了一群天鹅，丑小鸭想：被美丽的天鹅杀死，也要比现在这样受苦好得多。他来到天鹅湖，低着头向天鹅游去，当它在清撤的水面看到自已的倒影时，发现自己长大后原来是一只白天鹅
1 一个天鹅在鸭群里属于异类,被大家嘲笑甚至攻击都是很正常的.母鸭同样也不应该就是自己孵化的就天生具有特殊感情,本质上天鹅就是异类甚至入侵者.
2 丑小鸭以为自己丑陋而自卑,是出于对其他鸭类的外貌,标准评定的.也就是说自己是活在别人的眼光下的,根本没有自我的认识.
3 丑小鸭是否变成天鹅甚至凤凰,都对鸭群来说没有区别.以鸭群来看无论丑小鸭后来变成丑鸭子还是白天鹅,他都是异类都是怪物.
###　南辕北辙
魏王想攻打赵国，季梁劝他说：&amp;ldquo;我在大路上遇到一个赶着车向北走的人，告诉我说：‘我要去楚国。&amp;lsquo;我问他：‘你要去楚国，为什么要向北呢?&amp;lsquo;他说：&amp;lsquo;我的马跑得快。&amp;lsquo;我说：&amp;lsquo;您的马虽然跑得快，但这不是去楚国的路啊!&amp;lsquo;他又说：&amp;lsquo;我的盘缠很充足。&amp;lsquo;我说：‘你的盘缠虽然多，但这不是去楚国的路啊!&amp;lsquo;他又说：&amp;lsquo;给我驾车的人本领很高。&amp;lsquo;他不知道方向错了，赶路的条件越好，离楚国的距离就会越远。
现代人都知道地球的圆的,可以说南辕北辙在理论上是正确的,只要你向北走几十年,总有一天会到达目的地!这看上去很荒谬,但是理论上是没有问题的.</description>
    </item>
    
    <item>
      <title>2020 05 06 科幻小说情节</title>
      <link>https://pub.oribos.cn/web/blog/2020/note/2020050601.html</link>
      <pubDate>Wed, 06 May 2020 11:37:57 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/blog/2020/note/2020050601.html</guid>
      <description>一个科幻设定,伪装成正常人的秘密同化者 一种极其微小的生命形态,它们需要寄生在生物体内才能生存.但是可怕的是寄生以后,它们可以控制宿主活动.
这种寄生虫,通过不断传播和寄生,控制动物甚至智慧生物.不断发展壮大.它们取代了宿主的意志.
它们控制人类,然后学着人类那样行动,说话,工作.外表甚至医学观察根本发现不了它们的存在,
它们寄生人类以后,它们从生命本身就已经同宿主合二为一,代替人类的心智.然后在人类社会里创造自己的秘密的情报网络.逐渐扩大自己的数量,甚至发展科技,飞往太空.
这种寄生生命一直不被人察觉,很多人只是以为是其他人的价值观差异,寄生的人类逐渐掌握大量资源,发展了秘密组织,控制经济,发动战争.
某一个天生多重人格的种族,他们的一些人在被寄生以后,在偶尔情况下,总会歇斯底里的呼救.某一个治疗这种奇怪疾病的医生面对多重病例,注意到这种现象.随后逐渐抽丝剥茧,发现了这个可怕的事实.
很多人把他当做疯子.对于这种秘密同化各类种群的寄生虫,一直无法被人重视.
某外星集体思维意识的种族,接收到中枢的指令,对一些特定生命体征的人类进行灭杀.这被人类视为邪恶的毁灭者.这些人类被寄生者并不多,但是事实不被人重视.由于这种误会,两个种族开始进行战争.
集体思维者免疫寄生,他们的思维被中枢共享.独立人格的人类成为寄生的主要人群.人类被迫在接受集体思维意识和被消灭之间选择.
对这种秘密同化者的战争一直在进行,知道一种外星种群的到来.外星种群可以在目视中就能发现秘密的寄生者,对寄生者的战争才出现转机.尽管许多人类表示,这是外星人灭绝人类的诡计.但由于外星人能有效消灭寄生者并且不干涉人类生活.很快人类的生活逐渐恢复.
集体智慧种族 某一个种族天生拥有集体思维能力,他们可以共享自己的想法,知识,见闻.
这个种族在漫长的进化中逐渐失去了集体思维连接能力.个人意识的出现,使得种族内部出现矛盾.尽管种族矛盾不断,但并不足以摧毁种族文明.一种受黑暗力量影响的外星种族的入侵,几乎毁灭了世界.
某些受到外星种族影响的个体,出现思维连接能力,他们通过这种能力甚至可以强行控制外星种族.很快,抵抗外星种族的战争出现转机,受污染者思维连接,控制其他种族打败了外星种族,然而这些拥有特异功能的一群人却受到了族人的歧视甚至敌对.
这些拥有思维连接能力的人被流放.
一个科幻设定,将恒星压缩到项链形状 艾拉米尔之心是一个项链,它的内核是一个经过多重空间压缩技术包裹的恒星.
它的创造者通过技术将数个恒星压缩进微小的装置内,然后再在装置外设置一个中枢控制机器ai,这个ai即具有自我意识,又受创造者影响.
项链自身透过时间选择一个命中之人,保护佩戴者,并逐步提供给佩戴者强大的力量.
第一位项链佩戴者,使用项链的能量为族人抵抗了外敌入侵.然而佩戴者不幸牺牲.从此项链的佩戴者就成为艾拉米尔人的首领,项链也被命名为艾拉米尔之心.
项链的创造者将项链交给第二位佩戴者,然而新的佩戴者在职责和自我的认识中迷失,怀疑项链强大的力量到底给族人带来了幸福还是苦难.项链在普通人类的影响下,能量释放存在争议.最终,项链被创造者收回,配置其他力量,释放重塑了世界.
项链的最外层由于重塑的能量而出现损坏,被星际掠夺者获得,辗转到一个跟项链创造者同族的高智慧生命.项链被破坏,释放了压缩在里面的黑色恒星.</description>
    </item>
    
    <item>
      <title>2020 05 06 个性化格式</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020050602.html</link>
      <pubDate>Wed, 06 May 2020 08:06:22 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020050602.html</guid>
      <description>标点符号 中文使用的标点符号采用英文半角形式
无论是否有明确的规定.所有设计符号和标点的地方均使用半角形式.
字体 字体坚持使用黑体字
无衬线体（Sans-serif）专指西文中没有衬线的字体,与汉字字体中的黑体相对应.与衬线字体相反，该类字体通常是机械的和统一线条的,它们往往拥有相同的曲率,笔直的线条,锐利的转角.在整文阅读的情况下,适合使用衬线字体进行排版,易于换行阅读的识别性,避免发生行间的阅读错误.
而页面坚持使用黑体的原因是:在电脑屏幕,手机,平板等数码设备上.无衬线体相较于其他衬线的字体,单位面积上用色更多,字体更清晰,更易于识别.
页面 简单化的页面布局,减少不必要的装饰和控件.
为了应对现今社会的信息焦虑,一个良好页面应该尽可能少的展示给读者内容,尽可能快速简单的将重要的信息展示给读者.避免不必要的干扰和信息泛滥.</description>
    </item>
    
    <item>
      <title>2020 05 06 Coding pages故障</title>
      <link>https://pub.oribos.cn/web/deploy/2020050601.html</link>
      <pubDate>Wed, 06 May 2020 08:01:30 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020050601.html</guid>
      <description>coding pages无法访问 5月5日晚上发现自己的博客网站访问异常,原本博客网站部署在coding pages,然后再用上阿里云cdn.出现异常原本以为是阿里云cdn缓存异常.结果长时间仍然无法访问.就将cdn停掉,直接使用源coding pages地址访问.发现无法访问.
换掉coding pages的服务 由于网站停止访问时间太长,已经对coding的服务产生担忧.刚开始的无法访问还以为是阿里云的问题,结果是持续服务的coding出现网络故障.
后续对所有之前使用的coding pages的页面全部改用云服务器,oss和jsdelivr.涉及到旧文档的链接都进行修改.删除coding上的仓库.停用部分coding上的项目.将博客网站从coding pages的解析换到云服务器上,
对coding 的信任程度下降 对coding 的迁移仅仅是处于不信任下的测试,因为国内github也不是很稳定,必须在两者这件找到平衡.
受此次故障影响,删除了几乎所有用来提供web访问的仓库,pages页面和静态资源内容全部迁出coding.
后续影响 突如其来的coding pages无法访问.导致对本地发布+coding pages浏览的方式的彻底否定.尽管是短时间的故障,却让我认识到无论是github还是gitlab coding等等服务都无法持续可靠提供web浏览.特别是放置所有静态资源,图片的网址,负责较多的静态资源甚至还部署有CDN依然无法维持可靠运行.</description>
    </item>
    
    <item>
      <title>2020 05 02 单页模板</title>
      <link>https://pub.oribos.cn/web/note/2020/2020050202.html</link>
      <pubDate>Sat, 02 May 2020 11:04:39 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020/2020050202.html</guid>
      <description>专用的单页模板 info.hbn.pub 是专门设计的单页模板,此页面内容仅限分享出来的链接,
特定地址,对应的页面,仅提供基本的内容,不提供搜索,只提供有限的索引目录链接功能.效果为 只能通过提供的url地址访问页面,点击页面的上链接将退出访问页面,且无法索引回访问页面.只能通过url地址访问.
单页功能 提供特定页面,部署一个单页面以供某些特定情况使用.比如微博微信分享.
将url地址短域名缩减.</description>
    </item>
    
    <item>
      <title>2020 05 02 单页模板</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020050202.html</link>
      <pubDate>Sat, 02 May 2020 11:04:39 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020050202.html</guid>
      <description>专用的单页模板 info.hbn.pub 是专门设计的单页模板,此页面内容仅限分享出来的链接,
如: http://info.ufs.im/hb/2020042101.html
的特定地址,对应的页面,仅提供基本的内容,不提供搜索,只提供有限的索引目录链接功能.效果为 只能通过提供的url地址访问页面,点击页面的上链接将退出访问页面,且无法索引回访问页面.只能通过url地址访问.
单页功能 提供特定页面,部署一个单页面以供某些特定情况使用.比如微博微信分享.
将url地址短域名缩减.</description>
    </item>
    
    <item>
      <title>2020 05 01 Github的下载速度令人发指</title>
      <link>https://pub.oribos.cn/web/deploy/2020050103.html</link>
      <pubDate>Fri, 01 May 2020 22:54:24 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020050103.html</guid>
      <description>偶然发现下载github上的项目速度是如此之差 由于使用homebrew时需要在github上下载代码,结果发现,每次到github下载的时候速度极慢,然后回顾几天前github无法访问.导致代码更新延迟.
发现问题 经过反复尝试,发现国内的网络下载github相当糟糕,换做其他地区的连路就异常的高速,甚至达到带宽极限.可以看出是糟糕的网络环境造成的.
由于github的不可或缺 由于github上有大量的代码库,许多应用,程序都在github上部署.github无法访问会对应用造成极大的不便.而大量应用也不顾糟糕的网络环境不断的向github上部署,又形成不可调节的冲突.
需要找到代替github的方法,或者找到正常访问github的解决方案.矛盾总要得到解决.对糟糕的网络环境的不满也不可避免.无论github是否能用jsdelivr的cdn资源是必须长期使用的,github的项目也就必须保持,github目前不可代替.</description>
    </item>
    
    <item>
      <title>2020 05 01 Homebrew</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020050101.html</link>
      <pubDate>Fri, 01 May 2020 19:45:18 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020050101.html</guid>
      <description>莫名其妙的Homebrew hugo的页面推荐安装方式是brew install hugo ,需要使用Homebrew安装，但是这个homebrew是mac系统上常用的包管理器，linux上并不常用。偶尔有空试试用这个Homebrew安装一下应用，奈何太难用。
使用Homebrew 最莫名起来的是此程序不允许root用户运行，这种强迫着实让人反感。
然后是 推荐安装方式
/bin/bash -c &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&amp;quot;
经常性无法连接。
再接着是极慢的下载速度。
事实上使用github作为软件发放源的方式，下载都极慢。
更新：更换海外服务器同步后，速度起飞
换一种安装方式
sudo yum groupinstall &amp;#39;Development Tools&amp;#39; sudo yum install curl file git sudo yum install libxcrypt-compat # needed by Fedora 30 and up 最后一步无法安装。。。
结果 无论是主页推荐安装方式，yum安装方式，源代码安装方式，均由于极慢的下载速度，找不到文件等等原因无法安装这个Homebrew 。 体验失败。
极其糟糕的使用体验。</description>
    </item>
    
    <item>
      <title>2020 04 30 重回旧版本</title>
      <link>https://pub.oribos.cn/web/deploy2020043003.html</link>
      <pubDate>Thu, 30 Apr 2020 18:48:43 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy2020043003.html</guid>
      <description>提交出错 由于运用新的文件格式,对g.hbn.pub的所有文件目录进行调整,包括旧文件.依符合新的文件格式的规范.然而由于之前必须确保网页URL地址长期不变,这些修改后的文件不应该发布到b.hbn.pub.又因为资源整个,g的仓库其实是跟b仓库放在一起,只是一个发布次序的问题.
以上的情况导致在发布b网页更新是,将g仓库文件原封不动的发布到b网页.导致所有的旧文件URL地区全部改变.这必然导致已经发布的url地址出现无法访问的故障,不应该发生.
针对这种异常,寻找一种办法解决.目前的措施是,撤销最近的提交,重新使用上一次文档.
页面地址长期有效 页面URL地址必须长期有效,无论服务在云服务器上还是oss,还是git仓库里.对外访问地址必须保持较长时间的可用.
针对旧地址的重定向. 后续,将调整旧地址的重定向,自动跳转到新的地址.既要保证资源整合,又需要兼顾旧文件的可用性.事实上,整个网页可以存档保持.不再更新?已经更在启用代替b地址的新的网页地址.
对文件的存档 文件均通过云服务器编辑和保存，然后通过内网oss进行备份。
更新:基于成本和管理方面的限制,已经不再要求url长期不变.
新的页面将按照新的文件格式规整排序,旧的文档将归档放入归档文件夹.</description>
    </item>
    
    <item>
      <title>2020 04 29 控制欲</title>
      <link>https://pub.oribos.cn/web/docs/2020/note/2020042901.html</link>
      <pubDate>Wed, 29 Apr 2020 13:50:21 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2020/note/2020042901.html</guid>
      <description>生活中的控制欲 什么是控制欲?大到国际关系国家冲突小到油盐酱醋,人类生活方方面面都存在不同程度的控制欲体现.
比如&amp;quot;这小孩真皮,这么早了怎么还不起床&amp;quot;,我给倒酒,你为什么不喝,这件东西真好看,买买买.可以看出,其实生活处处细节都是对控制欲的不同体现. 为什么会有控制欲是一个很复杂的心理学问题.针对这些复杂的心理学问题,普通人不建议去理解,其实也是一种控制欲的体现.我们要理解的就是控制控制欲而不是被其控制.
举另一个例子,西游记里唐僧对取经的坚定不移,这种对事业的执着就是一种控制欲,他在取经途中历经磨难和痛苦就是因为这份执着.然而假如他没有这份执着,他就不会经历这份痛苦磨难,但也不会成为得道高僧. 因此控制欲本身并不是负面影响,他的种种体现只是会在不同程度上影响和改变人自身的生活,怎么对待他就是价值观方面的考虑.
许多烦恼都是控制欲得不到满足 没有得到好看的包包,没有买到好看的家具,今天吃的饭味道差,今天谁谁对你说话难听,今天电视剧没正常更新.每天总有许多烦恼,而这些烦恼仔细回味就因为自己太执着,在苛求自己和别人.种种烦恼就是因为万事万物没有尽心尽意,每时每刻都不知道满足.
那怎么办,难道无欲无求?
不,应该明白,自己是人,不是佛,不是仙,不是神.不能主宰万事也不要试图去追求超脱世间.做自己喜欢的,如果达不到自己目标,就调整行为,重新规划.
那是不是就放纵不羁,无所畏惧?
不,应该明白,人的局限性,人的行为是受条件,环境,社会关系种种制约的.无所畏惧就像乐曲里杂乱的音符一样是有害的.
有所求而有所不求，有所为而有所不为
道家&amp;quot;无为而治&amp;quot; “无为而治”出自《道德经》，是道家的治国理念。无为而治本意并不是不为，是不过多的干预、充分发挥民众自我能动性，适于统治者。而儒家思想核心是道德规范，倾向于不妄为，适于每一个人。
社会中的控制力 日常生活，工作，处处都是控制力的表现。</description>
    </item>
    
    <item>
      <title>Git中submodule的使用</title>
      <link>https://pub.oribos.cn/web/deploy/2020/2020042801.html</link>
      <pubDate>Tue, 28 Apr 2020 16:32:00 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020/2020042801.html</guid>
      <description>文章来源 知乎-孤单彼岸
背景 面对比较复杂的项目，我们有可能会将代码根据功能拆解成不同的子模块。主项目对子模块有依赖关系，却又并不关心子模块的内部开发流程细节。
这种情况下，通常不会把所有源码都放在同一个 Git 仓库中。
有一种比较简单的方式，是在当前工作目录下，将子模块文件夹加入到 .gitignore 文件内容中，这样主项目就能够无视子项目的存在。这样做有一个弊端就是，使用主项目的人需要有一个先验知识：需要在当前目录下放置一份某版本的子模块代码。
还有另外一种方式可供借鉴，可以使用 Git 的 submodule 功能，也是这篇文章的主题。
实际上 Git 工具的 submodule 功能就是建立了当前项目与子模块之间的依赖关系：子模块路径、子模块的远程仓库、子模块的版本号。
使用流程 假定我们有两个项目：project-main 和 project-sub-1，其中 project-main 表示主项目，而 project-sub-1 表示子模块项目。
其中 project-main 的远程仓库地址为 https://github.com/username/project-main.git，而 project-sub-1 的远程仓库地址为 https://github.com/username/project-sub-1.git。
接下来，我们希望在 project-main 中添加 project-sub-1 ，而又保持 project-sub-1 自身独立的版本控制。
1.创建 submodule 使用 git submodule add &amp;lt;submodule_url&amp;gt; 命令可以在项目中创建一个子模块。
进入项目 project-main ，输入：
➜ project-main git:(master) git submodule add https://github.com/username/project-sub-1.git 正克隆到 &amp;lsquo;/path/to/project-main/project-sub-1&amp;rsquo;&amp;hellip; remote: Enumerating objects: 3, done. remote: Counting objects: 100% (3/3), done.</description>
    </item>
    
    <item>
      <title>对各类应用的吐槽</title>
      <link>https://pub.oribos.cn/web/deploy/2020042502.html</link>
      <pubDate>Sat, 25 Apr 2020 18:57:04 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020042502.html</guid>
      <description>对linux系统及其应用的吐槽 各类问题点 操作基于代码,或者说是最低端操作体验.需要记单词,需要区分大小写,需要区分字符类型.本身就是算法的操作思想却被照搬给用户使用.
使用代码操作并不是因为多高大上,成品素质差,没有适合的,专业的,稳定的操作界面.随之而来的就是各类gui操作界面,网页操作界面.总之,产品总是不完善.
过于散乱的包管理器ubuntu的 apt,centos的yum ,nodejs的npm,还有Homebrew,RubyGems等等,linux系统已经够多了,包管理器,一个应用级的程序居然也有如此之多,充分体现了linux用户互相容不下别人的思想.
这些系统和包管理器,如果真的跟随系统对应,或者类似npm的应用广泛还能易用就没什么问题,奈何各类软件总是遇到各类神奇问题,网络不畅下载极慢,版本不兼容,对中文支持不佳.
版本众多,更新保守导致产品碎片化严重.
事例 一个在Windows linux macOS上广泛使用的静态网站生成器,他推荐的安装方式是:
brew install hugo
这是什么鬼东西,你把macOS上的工具照抄下来?为了安装这个静态网站生成器,需要安装golang git 这是运行基础,这个brew不就是一个macOS包管理器吗,
为啥推到linux默认安装? 至于这么麻烦吗? 嫌用户入门太低?
而且这个brew安装极慢,使用极不方便!
hugo里面的主题,各类安装方式都有,各类toml,yaml甚至json配置文件.各类css,scss,PostCSS乱七八糟的东西.
你感觉使用一个合格的主题就行了,没必要琢磨这么多,然而,几百个主题,没几个适合的.也就是说大部分都是残次品.要么不能自定义很多东西,要么各类不兼容,大部分都需要深度加工.当然下载极慢是家常便饭.另外还有花样繁多的安装方式,配置文件,扩展程序.私有文件.
复杂的操作,使用zip分卷压缩和解压缩文件,代码如下
cat a* &amp;gt; a.tar.gz // 将该目录下的a.z01 a.z02 a.z03 全部集合到一个压缩包a.tar.gz tar xzvf a.tar.gz // 解压缩a.tar.gz 对windows系统及其应用的吐槽 登录时候先欢迎5分钟
开机应用各种弹窗,各种确认,各种关闭
各种自动更新</description>
    </item>
    
    <item>
      <title>内容列表</title>
      <link>https://pub.oribos.cn/web/deploy/2020042117.html</link>
      <pubDate>Tue, 21 Apr 2020 17:36:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020042117.html</guid>
      <description> </description>
    </item>
    
    <item>
      <title>编程的一些基本理论</title>
      <link>https://pub.oribos.cn/web/deploy/2020042113.html</link>
      <pubDate>Tue, 21 Apr 2020 17:36:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020042113.html</guid>
      <description>编程的一些基本理论 属性 = &amp;#34;属性值&amp;#34; 函数(参数){ 函数体 } &amp;lt;元素&amp;gt;我的第一段 JavaScript&amp;lt;/元素&amp;gt; &amp;lt;元素 属性=&amp;#34;属性值&amp;#34;&amp;gt; &amp;lt;h1 class=&amp;#34;center&amp;#34;&amp;gt;标题居中&amp;lt;/h1&amp;gt; 元素的class &amp;lt;p id=&amp;#34;para1&amp;#34;&amp;gt;Hello World!&amp;lt;/p&amp;gt; 问题 就想编程语言里的function其实本意是“动作”。由于翻译的问题，对词汇的作用理解出现歧义
在html里，CSS Id 和 Class 选择器。翻译为id选择器和类选择器就出现了歧义，其实class就是html元素的一个普通属性，尽管作用很大。不翻译为类选择器而直接使用class选择器更能理解和使用。</description>
    </item>
    
    <item>
      <title>一个git仓库不同分支</title>
      <link>https://pub.oribos.cn/web/deploy/2020041701.html</link>
      <pubDate>Fri, 17 Apr 2020 11:14:51 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020041701.html</guid>
      <description>一个git仓库生成不同的分支 master分支显示正式的，整理过的文件。
b分支是测试，临时文件。
源文件存放在base仓库 源文件也由于生成的public不同分为master分支和b分支
区别 使用同一个仓库不同分支和不同仓库的区别。</description>
    </item>
    
    <item>
      <title>白嫖github</title>
      <link>https://pub.oribos.cn/web/2020040301.html</link>
      <pubDate>Fri, 03 Apr 2020 08:57:58 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2020040301.html</guid>
      <description>github作用 github是一个面向开源及私有软件项目的托管平台,类似的平台还有gitlab,coding.但是github的功能丰富,除了专业的git代码托管以外,还有其他用法
图床 使用picgo,然后填写相应的代码可以实现图床功能.
静态网站 github 自带的pages功能,支持自定义域名. pages
应用仓库 各类windows linux Android 应用都可以在github上搜索.</description>
    </item>
    
    <item>
      <title>ENS 尝鲜</title>
      <link>https://pub.oribos.cn/web/reprint/006.html</link>
      <pubDate>Wed, 01 Apr 2020 18:51:47 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/006.html</guid>
      <description>引用自reuixiy
Opera 浏览器昨天宣布其最新 Android 版已经支持 IPFS——你现在可以通过 ipfs://io-oi.eth 来访问本博客了！
.eth 是什么域名呢？.eth 是 ENS（Ethereum Name Service）即以太坊域名服务的顶级域名，更多信息及注册流程见 ens.domains。
接下来，本文将主要介绍一下这个博客是如何持续集成部署到 IPFS，并自动更新 ENS 记录，以实现 io-oi.me 与 io-oi.eth 的「同步」。
如何持续集成部署到 IPFS？请参见我之前写的文章《将博客部署到星际文件系统（IPFS）》。
成功部署后，购买域名后，我们编辑一下 package.json 文件，利用 ens-updater 这个工具实现 ENS 记录的自动更新，如下：
1 2 3 4 5 6 7 8 &amp;#34;scripts&amp;#34;: { - &amp;#34;ipfs-deploy&amp;#34;: &amp;#34;./node_modules/ipfs-deploy/bin/ipfs-deploy.js -p pinata public -u pinata -d cloudflare -C -O&amp;#34; + &amp;#34;ipfs-deploy&amp;#34;: &amp;#34;./node_modules/ipfs-deploy/bin/ipfs-deploy.js -p pinata public -u pinata -d cloudflare -C -O | ./node_modules/@triplespeeder/ens-updater/bin/ens-updater.js setContenthash ${ENS_NAME} ipfs-ns stdin --web3 https://mainnet.</description>
    </item>
    
    <item>
      <title>前端需要的工具</title>
      <link>https://pub.oribos.cn/web/deploy/2020033001.html</link>
      <pubDate>Mon, 30 Mar 2020 15:12:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020033001.html</guid>
      <description>前端即网站前台部分，运行在PC端，移动端等浏览器上展现给用户浏览的网页。随着互联网技术的发展，HTML5，CSS3，前端框架的应用，跨平台响应式网页设计能够适应各种屏幕分辨率，完美的动效设计，给用户带来极高的用户体验。
如下图: 核心技术 HTML、CSS、JavaScript
这三个是前端开发中最基本也是最必须的三个技能。前端的开发中，在页面的布局时， HTML将元素进行定义，CSS对展示的元素进行定位，再通过JavaScript实现相应的效果和交互。虽然表面看起来很简单，但这里面需要掌握的东西绝对不会少。在进行开发前，需要对这些概念弄清楚、弄明白，这样在开发的过程中才会得心应手。
HTML 指的是超文本标记语言 (Hyper Text Markup Language)，这个也是我们网页最常用普通的语言了，经历了多个版本的发展，已经发展到5.0版了，得力于W3C建立的标准和规范，已普遍升级到了XHTML，XHTML 指可扩展超文本标签语言（EXtensible HyperText Markup Language）， XHTML 于2000年的1月26日成为 W3C 标准，是更严格更纯净的 HTML 代码，XHTML 的目标是取代 HTML。XHTML 与 HTML 4.01 几乎是相同的，XHTML 是作为一种 XML 应用被重新定义的 HTML，是一个 W3C 标准。W3C 将 XHTML 定义为最新的HTML版本。所有新的浏览器都支持 XHTML。
CSS 级联样式表（Cascading Style Sheet）简称“CSS”，通常又称为“风格样式表（Style Sheet）”，它是用来进行网页风格设计的。比如，如果想让链接字未点击时是蓝色的，当鼠标移上去后字变成红色的且有下划线，这就是一种风格。通过设立样式表，可以统一地控制HTML中各标志的显示属性。级联样式表可以使人更能有效地控制网页外观。使用级联样式表，可以扩充精确指定网页元素位置，外观以及创建特殊效果的能力。
JavaScript 是一种由Netscape的LiveScript发展而来的原型化继承的面向对象的动态类型的区分大小写的客户端脚本语言，主要目的是为了解决服务器端语言，比如Perl，遗留的速度问题，为客户提供更流畅的浏览效果。当时服务端需要对数据进行验证，由于网络速度相当缓慢，只有28.8kbps，验证步骤浪费的时间太多。于是Netscape的浏览器Navigator加入了Javascript，提供了数据验证的基本功能。</description>
    </item>
    
    <item>
      <title>欧美游戏群魔乱舞</title>
      <link>https://pub.oribos.cn/web/fun/2020031101.html</link>
      <pubDate>Wed, 11 Mar 2020 09:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/fun/2020031101.html</guid>
      <description>最后生还者2 崩坏的剧情
匪夷所思的设定
非人类的逻辑
赛博朋克2077 依靠脏话吸引人
漏洞百出的设定
诡异的故事线</description>
    </item>
    
    <item>
      <title>新git仓库</title>
      <link>https://pub.oribos.cn/web/deploy/2020031102.html</link>
      <pubDate>Wed, 11 Mar 2020 08:55:02 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/deploy/2020031102.html</guid>
      <description>通过建立资源仓库和public仓库,实现源文件和网站文件同时备份,保存. 新的仓库管理方法确定了以下文件:
名称 作用 ufs 公共资源 data 私有资源 web pages 减少git仓库里的项目和仓库数量
精简仓库内文件的结构,功能融合
公共资源和私有资源的资源分离
pages 和github jsdelivr 可以代替过去的oss,网盘等功能(仅限少量内容)
特殊pages服务需要配置CDN使用.</description>
    </item>
    
    <item>
      <title>测试001</title>
      <link>https://pub.oribos.cn/web/hb/2020031001.html</link>
      <pubDate>Tue, 10 Mar 2020 08:53:38 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/hb/2020031001.html</guid>
      <description>其他页面
用来测试效果
icon
iconfont 用来给页面icon提供彩色图标.</description>
    </item>
    
    <item>
      <title>2020随笔</title>
      <link>https://pub.oribos.cn/web/note/2020030901.html</link>
      <pubDate>Mon, 09 Mar 2020 09:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2020030901.html</guid>
      <description>碎片 </description>
    </item>
    
    <item>
      <title>Ecs</title>
      <link>https://pub.oribos.cn/web/2020030901.html</link>
      <pubDate>Mon, 09 Mar 2020 09:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2020030901.html</guid>
      <description>测试在ECS服务器上部署 由于github和coding出现访问故障，安排将部分文档转移到ecs服务器上部署和访问。
部署在服务器和github上的区别 coding和github 上空间有限,服务持久.但是网络不稳定,访问困难.
部署到云服务器上,云服务器的成本和服务持久问题不好解决.</description>
    </item>
    
    <item>
      <title>魔兽世界的衰落</title>
      <link>https://pub.oribos.cn/web/fun/202012230301.html</link>
      <pubDate>Mon, 09 Mar 2020 09:55:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/fun/202012230301.html</guid>
      <description>限制和控制 推倒重来 资本运作 </description>
    </item>
    
    <item>
      <title>一个更自然原生的渐变顶栏</title>
      <link>https://pub.oribos.cn/web/reprint/2020030601.html</link>
      <pubDate>Fri, 06 Mar 2020 13:10:54 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2020030601.html</guid>
      <description>引用自reuixiy
本博客的顶栏应该是两年多没动过了，一直都是上图中那闪眼的渐变彩带。这个渐变色的来源应该是..当年..的 GitHub Universe 网站1。当时年轻觉得新颖酷炫，现在老了只觉刺眼无味🤢。
刚好，前几天折腾可变字体的时候，Google 结果中无意浏览到这个简洁却细节的博客，被它顶栏的简洁和毛玻璃效果吸引了，又在它的「致谢」中发现了 3type，而其顶栏也使用了毛玻璃……想起之前在 Twitter 中常常刷到的毛玻璃，想起之前浏览过的其它博客中的毛玻璃，想起之前浏览过的 Apple 官网的毛玻璃……终于的终于，我决心要将毛玻璃应用到我的博客🤪！
正文 首先，渐变可以通过 CSS 的 linear-gradient() 函数实现，比如本博客之前的渐变，其 CSS 代码和效果如下：
1 background: linear-gradient(90deg, rgb(247, 149, 51) 0, rgb(243, 112, 85) 15%, rgb(239, 78, 123) 30%, rgb(161, 102, 171) 44%, rgb(80, 115, 184) 58%, rgb(16, 152, 173) 72%, rgb(7, 179, 155) 86%, rgb(109, 186, 130) 100%); 你会发现，这样的渐变其实是非常..不自然..的。以大自然中的彩虹为例，我们雨后看到的彩虹肯定不长上面那样，自然中的彩虹颜色肯定没有这么饱和，而且也应该要通透一点。
2
要实现这种更自然的渐变，我们在 CSS 中可以简单地通过设置颜色的 Alpha 值即透明度来实现，其 CSS 代码和效果如下：
1 background: linear-gradient(90deg, rgba(247, 149, 51, 0.</description>
    </item>
    
    <item>
      <title>新文件</title>
      <link>https://pub.oribos.cn/web/2020030601.html</link>
      <pubDate>Fri, 06 Mar 2020 09:25:56 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2020030601.html</guid>
      <description>由于启用https，顶级域名的ssl证书还没有确定，网站的域名从hbn.pub变更成b.hbn.pub
由于网站由http 变更成https，之前的未加密的文件图片就会被阻塞。
之前的图片都是经过阿里云oss保存的，需要将oss的访问地址也设置成https协议。</description>
    </item>
    
    <item>
      <title>简单实现 Google Fonts 的异步加载</title>
      <link>https://pub.oribos.cn/web/reprint/2020030501.html</link>
      <pubDate>Thu, 05 Mar 2020 21:22:26 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2020030501.html</guid>
      <description>引用自reuixiy
在 Web 中，中文一般是不推荐使用网络字体的——因为汉字庞大的字符数让中文网络字体的体积异常庞大。但是，如果你经常浏览国外的英文网站，你会发现——使用了网络字体的网页是真的很美！所以，为何中文网页不能一样美呢？
技术进步带来的字体子集化和用户网络带宽的普遍提升，中文网页其实已经可以开始尝试网络字体了。不知你是否注意到，苹果的中文官网其实就已经在使用中文网络字体了。就在昨天1，Google Fonts 推出了全新的设计，以庆祝其 10 岁的生日，而其中一个重要的新亮点，就是添加了可变字体（Variable Fonts）的支持。
所以，中文网络字体的普及是刻不容缓的。这需要字体设计师的努力，也需要网页开发者的努力。作为开发者，尝试使用网络字体其实也是我们的一个职责——Making the Web Beautiful!
2
1 2 - &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;style.css&amp;#34;&amp;gt; + &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;style.css&amp;#34; media=&amp;#34;print&amp;#34; onload=&amp;#34;this.media=&amp;#39;all&amp;#39;&amp;#34;&amp;gt; 参考：
Defer non-critical CSS | web.dev Can I use &amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;? loadCSS | GitHub How to load CSS Asynchronously | Stack Overflow The Simplest Way to Load CSS Asynchronously | Filament Group, Inc. https://twitter.com/googlefonts/status/1234967000193150978&amp;#160;&amp;#x21a9;&amp;#xfe0e;
测试前需要前往 Network 将 Disable cache 勾选。&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>大乐章</title>
      <link>https://pub.oribos.cn/web/2020030501.html</link>
      <pubDate>Thu, 05 Mar 2020 13:57:31 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2020030501.html</guid>
      <description>世界 大乐章 光,声音都表现波的特性.生物的生老病死都是物质的不同形态变化.整个世界都呈现集体大合唱的形态.
生命的繁衍生息,物种大灭绝都是生命乐曲在一个足够长时间内的乐章.
微观的运动并不受控制.
生命在一个有限的区间内是自由发挥的,在足够长时间内是受大乐章限制的.
单独的人,乐章是微乎其微的,人是自由的,只有达到集体乐章才能突破乐章限制,但人的天性释然无法突破乐章限制.
生命存在 生命的存在是为了抑制世界的无序和混乱，生命有生存意识。</description>
    </item>
    
    <item>
      <title>可变字体（Variable Fonts）尝鲜</title>
      <link>https://pub.oribos.cn/web/reprint/2020022901.html</link>
      <pubDate>Sat, 29 Feb 2020 22:00:19 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2020022901.html</guid>
      <description>引用自reuixiy
最近在系统地学习 Web，在 MDN 的 CSS 学习区的 Web fonts 一节底部，看到 Variable Fonts 即「可变字体」一词，瞌睡之中突然来了点兴趣——因为之前间断地见过这个术语，前不久还在 Twitter 上刷到过好几次——于是我点开 Variable fonts guide，并马上被这个示例的字体和视觉效果吸引了，决定马上尝试一下。二话不说，CTRL + U 发现 Amstelvar VF 然后 Google 到 Amstelvar，先 Star 然后开始尝鲜可变字体！
前言 不过，可变字体其实已经不新鲜了，Google 结果中浏览到这篇 Get started with variable fonts，而此文的发布日期是 2017 年的 2 月份。但无论如何，可变字体对我来说还是新鲜的，而..尝试..一下也发现这是值得的——可变字体让人耳目一新。
⌛经过一番尝试，我已经将上文提到的 Amstelvar 这个开源的可变字体应用到了我的博客——你现在所见的本博客正文中的英文即是。下面，就来说说可变字体在 Web 上的食用方法😺。
正文 首先，我们去 GitHub 上下载 Amstelvar 字体，将 Amstelvar-Roman-VF.ttf 和其斜体 Amstelvar-Italic-VF.ttf 下载到本地。
然后，我们将 .ttf 压缩成既现代又节约的 .woff2，可以使用 ttf2woff2，或者你也可以尝试其它方法。
接下来，我们添加 CSS 代码，使用 @font-face 指定一下我们要使用的字体：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 /* https://github.</description>
    </item>
    
    <item>
      <title>三类优秀的程序员</title>
      <link>https://pub.oribos.cn/web/reprint/2020022701/</link>
      <pubDate>Thu, 27 Feb 2020 23:23:21 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2020022701/</guid>
      <description>引用自reuixiy
通常，科学家、发明家、企业家、工程师都是职业的并列对象，这里，我们把这四者跃迁到属性，把属于工程师的程序员跃迁为对象，来看看程序员的类型。
第一类：程序员［科学家］·形而上学
这类比较专一，通常是一领域的精通者，通常是拿显微镜在看针尖，熟知其领域的每一细节，优化每一常人不知道的细节到极致。这类的新发现能让常人耳目一新，下两类的新发明则能让人眼前一亮。还有，这类与以下两类不同，这类不像以下两类一样「产量」高。
第二类：程序员［发明家］·哲学
这类比较广博，通常是多领域的通识者，这类有两个对象：一、纵向为主的，拓扑是链式的；二、横向为主的，拓扑是网状的。
第三类：程序员［企业家］·政治伦理
这类与以上两类又不同，以上两类求理论之美，这类则是求应用之美。与上一类不同，上一类的发明可能会比较生棱极客，这类的发明则可以称为产品，更能博得常人喜欢，所以总是能够成就很大的商业价值。
其他的，就回退到程序员的默认属性——工程师，使用重复的模板，建造同样的重复的建筑（当然，这里是对整体而言，而对其中的每一个体而言，体验的都是新鲜的「创造」）。最后，以上三类的共同之处，生活中都有好像永不褪色的热情和好奇心，这是以上三类能够成就优秀的凭借。
至于我，目前只是一个正步入程序员世界中的工程师的入门学徒，一个正入局的局外人。</description>
    </item>
    
    <item>
      <title>日志</title>
      <link>https://pub.oribos.cn/web/2020020113.html</link>
      <pubDate>Mon, 10 Feb 2020 09:01:40 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2020020113.html</guid>
      <description>日志 </description>
    </item>
    
    <item>
      <title>引号的逻辑的哲学</title>
      <link>https://pub.oribos.cn/web/reprint/002.html</link>
      <pubDate>Fri, 31 Jan 2020 08:56:33 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/002.html</guid>
      <description>引用自reuixiy
我们知道，对于引号，在小学的时候老师教我们要先使用「双引号」（“”），然后如果双引号里面还要使用引号，则要使用「单引号」（‘’）。举例来说：1
他站起来问：“老师，‘什么是哲学’的‘哲学’是什么意思？”
这种用法，可能我们从小学用到现在，自己也从来没有问过一个..为什么..，直到当我们接触到直角引号的时候。什么是直角引号呢？举例来说：
他站起来问：「老师，『什么是哲学』的『哲学』是什么意思？」
当我们看到这个例子的第一眼，一定会..肯定..：双引号与单引号用反了。可这个例子其实是正确的。2
终于，我们不得不问：为什么会有这样的差异呢？为什么对于直角引号，要先使用 「」 再使用 『』 呢？为什么要先使用双引号 “” 再使用单引号 ‘’ 呢？第三个问题暂时不答，但我们可以通过回答第二个问题来回答第一个问题——因为当引用内再进行引用时，这个引用就是「第二引用」，也就自然应该用「双层」的引号，即双引号。3
但其实，我写这篇文章的最初推动是为了鼓吹哲学的作用。也就是说，为什么我们会肯定地说「双引号与单引号用反了」呢？因为我们已将「先使用双引号再使用单引号」这句话深深刻入了自己的脊髓，故对于引号的使用，我们都是直接本能地机械执行这句话，而非通过大脑去质问其定义——为什么要先使用双引号再使用单引号。4而哲学的作用就是——通过对「定义」的定义的不断探求，来纠正错误的机械执行。
说明：改自维基百科引号词条的例子，下同。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
参见：https://ja.wikipedia.org/wiki/引用符#一覧&amp;#160;&amp;#x21a9;&amp;#xfe0e;
说明：当然，博主既非专业人士，也没有进行相应的考据。故博主的这个回答只是逻辑世界中的单纯分析，历史事实中的胡言乱语。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
说明：这也是一个「概念之困」。&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>三星手机混合密码</title>
      <link>https://pub.oribos.cn/web/raw/2019122001.html</link>
      <pubDate>Fri, 20 Dec 2019 10:25:02 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019122001.html</guid>
      <description>新买手机被锁 开机设置好以后,正常使用.为了添加指纹解锁需要一个混合密码或者屏幕图像.密码设置好以后可以正常使用,成功添加指纹. 然而再次添加指纹时提示输入混合密码.怎么输都不对.
此密码可能是设置错了或者忘记了,总之完全不能用,需要重置.
尝试使用网络服务解锁 登录 https://findmymobile.samsung.cn/ 网络解锁手机,
但是 网络解锁功能并不是默认开启的 1 强制关键 使用 电源键和音量- 一起按10秒钟
2 然后手机在关机的状态下同时按住手机的（电源键 + 音量增加键 + Bixby键） 手机屏幕有反应时震动一下的时候仅松开 电源键 即可（其它两键不要松，直至手机进入recovery界面）如下图:
3 在recovery界面中，接音量上下键选择 【wipe data/factory reset】，然后按电源键确认，接着按音量键选择Yes，按电源键确认(清空数据，相当于出厂设置)
4 在recovery界面中，按音量上下键选择 【wipe cache partition】，然后按电源键确认，接着再选择Yes，按电源键确认(清空缓存)</description>
    </item>
    
    <item>
      <title>形象比喻前后端分离</title>
      <link>https://pub.oribos.cn/web/raw/2019120601.html</link>
      <pubDate>Fri, 06 Dec 2019 10:52:02 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019120601.html</guid>
      <description>假如网站是一个公司 旧时代 我们进去公司前台找人,前台有工作人员接待,工作人员让我们稍等,自己去寻找公司内部的相应人员,搜索,并将相应人员带到前台.
前台就是网站,进入前台找人就是一个访问,相应人员就是我们访问网站的内容.一次访问就需要安排一个工作人员寻找,带回要找的人.只要当访客的要求完成,工作人员的工作才完成.
后来,公司部署了电话机.
新时代,当我们进入公司前台找人的时候,前台工作人员接待,工作人员将一个通讯录交给我们,我们输入自己要找的人,然后拨通相应人员的电话.
前台就是网站,前台和工作人员以及提供的通讯录就是 前端内容 .而通讯录里面的内容,以及通讯录电话的维护和更新,电话线路属于 后端内容 .前台工作人员只需要提供给我们一个通讯录的拷贝,我们自己通过通讯录和电话机直接同相应人员沟通.这样前台人员就可以接待下一位访客.</description>
    </item>
    
    <item>
      <title>使用 GitHub Issues 持续写作</title>
      <link>https://pub.oribos.cn/web/reprint/2019120306.html</link>
      <pubDate>Tue, 03 Dec 2019 22:36:48 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2019120306.html</guid>
      <description>引用自reuixiy
不知你是否会为写作而发愁？当你突然闪出一个好想法时，却没有写作的时间；当你坐在书桌前准备写作时，却只有空空的无奈。在此，我激动地向你介绍一种现代的写作方式——使用 GitHub Issues ..持续写作..！1
什么是 GitHub Issues 呢？GitHub 是全球著名的通过 Git 进行版本控制的软件源代码托管服务平台2，而 GitHub Issues 则是一种用来管理 GitHub 上的工作项目中的各种想法、改进、任务或漏洞的追踪方式，目前的官方中文译名为「议题」。
什么是持续写作呢？持续写作是一种通过对想法的持续追踪、持续构建来协助写作的写作方式，英文为 Continuous Writing，简写为 CW。这是一个我自创的术语，由现代软件开发中的 CI/CD 概念所激发。
因此，文题「使用 GitHub Issues 持续写作」可以理解为使用 GitHub 的议题来对你的想法进行持续追踪、持续构建，从而促进你的写作。这种方式的巧妙之处就在于将现代的软件开发模式直接借用于写作，从而成就现代的写作模式。
听起来可能会有点摸不着头脑，下面就以采用持续集成方式部署的博客为例，简单描述下这种现代的写作模式的具体流程：
Eureka！闪出新想法！ 去 GitHub 新建一个议题，标题为文章名，描述为想法内容或文章纲要3； 时间匆忙，暂时搁置； Eureka！闪现这个想法的另一方面！ 打开 GitHub 上的该议题，在底部添加一条评论补充； 重复 3、4、5； 整理成一篇文章并自动发布；自动关闭议题。 更棒的是，由于 GitHub 是一个网站，因此可以随时随地用手机编辑！这将会极大地促进并优质化写作，因为这利用了每一零碎时间，抓住了每一突发奇想，完善了文章的每一细节，进而解决了创作难的问题！以后我们出去溜达无聊时，就可以拿起手机，看看自己在 GitHub 上的议题列表，随时随地写作！相比于博客部署上的持续集成，这可以称为文章创作上的持续写作！现代的写作，也是持续化的！当你有了个想法，发个推特，可能就石沉大海了；但你新建个议题，就可以持续构建这个想法。这就避免了碎片化的知识，解决了现在流行的各种知识平台的弊端，深度化了知识，也许这可以称为 GitIdea。
而且，GitHub Issues 是完全支持再编辑的，并能看到每个历史版本，这就日志化了文章的写作全过程。还有，GitHub Issues 还支持标签，这意味着你可以分类组织你的所有想法；GitHub Issues 还支持固定，这意味着你可以置顶重要的想法；GitHub Issues 还支持引用，这意味着你可以联系不同想法；GitHub Issues 还支持任务列表，这意味着你可以管理文章的完成进度；GitHub Issues 还支持项目板，这意味着你可以制定你的写作计划；GitHub Issues 还支持里程碑，这意味着你可以监督自己的写作进度。因此，这难道不是一个现代且完善的写作管理系统吗？
还有，GitHub Issues 还是一个现代的笔记系统！除了支持手机方便编辑，除了上面所说的各种现代特点，它还支持 Markdown！读书笔记、课堂笔记、电影感悟……直接新建一个仓库，然后开始 Issue 即可！相比一条说说或一条朋友圈，这能够持续追踪你的各种记录，不仅避免了碎片化知识，甚至还可能汇聚成一个属于自己的体系！更重要的是，GitHub Issues 是基于网页的，这非常利于传播！想法的价值在于传播，使用 GitHub Issues，轻松方便地分享和传播你的想法！GitHub 的仓库还支持关注，且有邮件通知！此外，还可以使用 RSSHub 通过 RSS 来订阅 Issues！这意味着你完全可以新建一个仓库，然后将 GitHub Issues 当 Microblog 来用，什么朋友圈、空间、微博、推特、TG 频道都弱爆了！这是一种全新的记录方式！这是一种现代的记录方式！</description>
    </item>
    
    <item>
      <title>flash助手推荐广告</title>
      <link>https://pub.oribos.cn/web/2019112901.html</link>
      <pubDate>Fri, 29 Nov 2019 21:06:29 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2019112901.html</guid>
      <description>莫名其妙的广告 电脑里经常会弹出一个叫做FF新推荐的广告弹窗，是由Flash插件弹出的
不得不说Flash中国版正是流氓透了！现在就教大家怎么彻底解决掉这个弹窗~ 解决方法： 首先，等弹窗弹出，别关掉它！关了也没关系，直接跳到第4步就行啦
打开任务管理器，找到FlashHelperService.exe这个进程
右键单击，有个打开文件的位置，点开，就会自动定位到那个位置啦！
上面已经关掉的看这里，文件的位置是：C:\Windows\SysWOW64\Macromed\Flash （这是64位的，32位的把里面的SysWOW64换成System32即可~~~）
现在把弹窗关掉，然后直接删除FlashHelperService.exe这个文件即可，以后就不会有这个弹窗啦！
触目惊心的真相 那么问题是，这个广告软件是怎么进入用户电脑的？
Flash技术即将会淘汰,然后Adobe flash想要赚最后一波，被国内2144代理，如果不从代理那装,最近更新会一直提示‘此Flash Player 与您的地区不相容，请重新安装Flash’。（Flash Helper Service服务是国内版特有且不可禁用的，）
然后翻阅这个用户协议，这份协议厚颜无耻的将所有责任强加给用户 </description>
    </item>
    
    <item>
      <title>日志</title>
      <link>https://pub.oribos.cn/web/2019112801.html</link>
      <pubDate>Thu, 28 Nov 2019 15:39:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2019112801.html</guid>
      <description>github pages功能 github pages的功能原本是用来展示在github上的项目里的文档说明。描述仓库里各个项目的用途，方法的说明文档，是用户文档性质的网页。
有些人研究出一套生成静态文件，部署在github pages作为全静态的博客网站。甚至用上js开发各类接口，实现前后端分离的项目。一个简单的网页服务编程的媲美云服务器的web服务。
同样，gitlab、coding、gitee都有类似的功能。通过hexo、hugo、vuepress等静态网页生成工具，可以轻松发布全静态网页做成网站。这样的网站不用繁琐的后台编程语言和各类数据库。甚至不用担心后台被破解和网站攻击。
使用node.js vue.js等各类框架，工具、api等可以使用评论、搜素、存储等各类功能。
网站备案 因为gitlab github coding等业务都可以在国外服务器，国内的gitee 的pages 使用的是gitee.io域名居然是已经备案的，虽然不用考虑备案问题，但是需要收费。相比而言。还是coding方便。
由于不少git托管中心都推出pages功能。作为简单的个人博客，就没必要购买服务器，更不用考虑备案问题。（事实上个人网站备案有些地方居然不能带“博客”关键词）
使用海外的对象存储和空间，使用海外的git托管的pages功能。不用考虑数据库和动态网站技术，只需要写简单易读的markdown文档就可以发布博客。
新入手域名 ufs.im 暂时使用占位符网站ufs.im。后续再为其设定内容，用来代替域名不易读的某些域名。比如临时域名 ofs.pub 备用域名 paas.pub
尝试使用hexo，但是由于某些内容需要修改的代码繁多，个人对网页的要求过于极端，还是使用简洁的hugo pure发布文章好用。</description>
    </item>
    
    <item>
      <title>Gitlab</title>
      <link>https://pub.oribos.cn/web/2019112702.html</link>
      <pubDate>Wed, 27 Nov 2019 18:07:08 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2019112702.html</guid>
      <description>gitlab的pages功能 在gitlab的仓库里，写入一个文件 .gitlab-ci.yml 自动执行对推送的文档的静态网站部署。你可以在pages 里找到各种应用的模板。
此种部署方式跟github，coding略有不同。不过可以将hexo的源文件同时备份到静态网站的仓库里，起到备份作用。
模板 以下是使用 plain-html 原生html 的 .gitlab-ci.yml 代码。
image: alpine:latest pages: stage: deploy script: - echo &amp;#39;Nothing to do...&amp;#39; artifacts: paths: - public only: - master pages 在pages-设置里填写自定义域名，并在dns里添加解析。用户名.gitlab.io 提醒： 首次发布以后，需要等大约30分钟才能使自定义域名生效。</description>
    </item>
    
    <item>
      <title>centos上运行hexo</title>
      <link>https://pub.oribos.cn/web/2019112701.html</link>
      <pubDate>Wed, 27 Nov 2019 12:23:20 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2019112701.html</guid>
      <description>centos安装git centos 使用yum安装的版本过低，甚至有文章介绍先卸载自带的低版本git，然后使用yum -y install git，结果还是安装的旧版本的笑话。
只能使用其他安装源：
yum install http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm 安装git yum install git 更新git yum update git centos 安装node.js 在centos上安装node.js，只有源码安装，从node.js 下载。
centos 安装hexo 在hexo下载，或通过以下代码安装
$ npm install -g hexo-cli</description>
    </item>
    
    <item>
      <title>Hexo的固定链接</title>
      <link>https://pub.oribos.cn/web/2019112602.html</link>
      <pubDate>Tue, 26 Nov 2019 19:07:46 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2019112602.html</guid>
      <description>hexo页面的固定链接 如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 SEO，且 gitment 评论对中文链接也不支持。
解决方法：
在写每篇md文章的时候，在 Front-matter 里加上:url： 比如：
在 Hexo 根目录下的 _config.yml 文件中，修改以下的配置项：
注意： url 前面需要有:
说明：因为我即使用hugo又使用hexo，使用url字段里带.html就可以在两个程序之间完美适用。如果使用url值不带.html
比如 url: /web/2019112602,而permalink: url.html
就只适用于hexo，在hugo里还需要修改代码。</description>
    </item>
    
    <item>
      <title>文档类型</title>
      <link>https://pub.oribos.cn/web/2019112601.html</link>
      <pubDate>Tue, 26 Nov 2019 09:13:37 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2019112601.html</guid>
      <description>txt md html三种文件类型 txt是一种纯文本的格式，txt的内容不影响功能，最基础的代码。
md是使用部分样式的标记语言。简洁明了，易于使用。
html使用复杂样式，是分散的Internet资源整合在一块的组织形式。
扁平化 为什么流行md，跟扁平化设计趋势一样。突出数据本身，描述简单格式又方便设计。 扁平化概念的核心意义是：去除冗余、厚重和繁杂的装饰效果。而具体表现在去掉了多余的透视、纹理、渐变以及能做出3D效果的元素，这样可以让“信息”本身重新作为核心被凸显出来。同时在设计元素上，则强调了抽象、极简和符号化</description>
    </item>
    
    <item>
      <title>更换主题</title>
      <link>https://pub.oribos.cn/web/raw/2019112503.html</link>
      <pubDate>Mon, 25 Nov 2019 15:12:02 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019112503.html</guid>
      <description>更换主题 尽管之前的主题已经使用了bootstrap的css和js，但是字体、样式等文件还是差强人意。考虑到需要修改的代码过多，还是换一个主题合适。
新的主题同样存在多少不足，很多地方的自定义代码发生变化。一直找不到完美点的主题。可能hugo本身就是不够漂亮。
新主题 新主题默认支持bootstrap，</description>
    </item>
    
    <item>
      <title>文档管理</title>
      <link>https://pub.oribos.cn/web/raw/2019112501.html</link>
      <pubDate>Mon, 25 Nov 2019 09:39:23 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019112501.html</guid>
      <description>关于文件命名和文件等级 内容 文件夹名称 等级 主目录 ufs 0 备份文件 backup 0 本地应用 app 0 下载文件 download 1 工作 work 1 文档 documents 1 媒体库 mms 1 关于文件备份位置 1 区分重要性和冗余类型
1类 本地电脑存储+nas+对象存储私有桶 必要情况下，需要在多个对象存储里备份。长期备份文件需要在对象存储里选 择归档存储。长期备份的文档进行更迭时，1类文件不可删除。 2类 nas或者对象存储私有桶 大容量文件需要在nas保留一份复制，保障在需要时候及时查阅，不用从对象存储上下载花费流量费用。 3类 本地电脑或web服务器存储+对象存储公有桶 4类 对象存储公有桶或web服务器目录 文件版本号以及持续性 已经归档的文件需要标注归档版本号和上一次备份时间。 应在目录下记录备份的时间，位置，版本号。 记录的备份位置不应做不必要的修改。 文件备份原则 并非所有的资料都需要备份，只有有价格的、重要的内容才需要备份 资料备份的同时还是注重索引和搜索。大量文件里找到自己需要的文件是极 其困难的，所以就需要必要的关键字、目录索引、搜索设置、文件分类等设置。 本地电脑的文件，在不备份的情况下属于不可靠的。 图片，视频等可以在windows文件管理器里预览的文件名可以不用严格命 名。不能预览的文件需要严格命名。 </description>
    </item>
    
    <item>
      <title>华为云cdn差评</title>
      <link>https://pub.oribos.cn/web/raw/2019112203.html</link>
      <pubDate>Fri, 22 Nov 2019 17:28:42 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019112203.html</guid>
      <description>华为云cdn 问题 华为云cdn的配置时间太长，一次配置需要十几分钟。如果配置出错或者其他原因需要调整参数，那就是连续不断的十几分钟。还真遇到过华为云cdn设置时候莫名其妙的问题，obs存储设置完毕，自定义域名，静态网站开启。使用自定义域名test.ufs.pub可以正常访问。 然后，设置cdn，开启cdn，等待十几分钟。然后访问test.ufs.pub居然无法访问。刚开始以为是配置问题，但是无意间使用test.ufs.pub/index.html 是完全可以访问的。也就是说obs的静态网站是开启的，cdn的域名解析也是正确的。但是就是无法访问首页。
针对这一问题，不断的配置cdn参数，来回配置需要无数个十几分钟。最终无法正常使用。
然而，使用新的域名test2.ufs.pub。配置静态网站：正常。配置cdn正常！同样的参数，cdn自定义域名正常访问。test2.ufs.pub 正常访问！而test.ufs.pub却不行。
进行第三部，给自定义域名设置cdn上的https，然后不出意外，https://test2.ufs.pub 无法正常使用！跟test.ufs.pub效果一样。首页不加index.html无法正常浏览！
同样，来回配置，再等无数个十几分钟的配置时间。</description>
    </item>
    
    <item>
      <title>日志</title>
      <link>https://pub.oribos.cn/web/2019112205.html</link>
      <pubDate>Fri, 22 Nov 2019 09:41:09 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2019112205.html</guid>
      <description>日志 对计算和存储分离 pc的作用是处理，计算，运行各类应用。考虑到安全，稳定等各种情况。pc的作用类似容器的“运行”。存储各类应用，配置文件等内容。而各类资源，源文件，配置文件应该分开存储在文件服务器上。做到计算和存储分离。在网站设计上同样存在“动静分离”。
文件服务 长期储存的文件在NAS服务器上。同时采用华为云obs和阿里云oss对象储存对文件进行长期备份。近期处理的资料使用coding代码托管临时处理。
oss问题 尽管oss的流量费用在低使用率情况下，费用微乎其微。但不分类型，完全依赖oss也不可取，根据需求可以选择coding或github上的文件使用。或者web服务器存储文件提供对外访问。
注意：对于oss必须注意异常突发流量带来的费用问题。
基于以上计算和存储分离原则，按量带宽的云服务器提供尽可能少的存储和对外访问。大容量存储可设置专用存储服务器，此类服务器采用固定带宽流量。
而采用按量计费就可以尽可能的降低费用。在高负载情况下还能对带宽进行适当调整。云服务器的带宽按量价格要远高于oss流量价格。所以将云服务器流量转移到oss里成本将相应降低。
另一个原因是对文件的备份，迁移。专用的存储更合适备份，防灾。</description>
    </item>
    
    <item>
      <title>使用bootstrap</title>
      <link>https://pub.oribos.cn/web/raw/2019112101.html</link>
      <pubDate>Thu, 21 Nov 2019 15:34:49 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019112101.html</guid>
      <description>采用bootstrap框架 对于基本内容，结构，样式直接采用bootstrap框架进行设计。Bootstrap 提供了一个带有网格系统、链接样式、背景的基本结构。
支持组件 Bootstrap中包含了丰富的Web组件，根据这些组件，可以快速的搭建一个漂亮、功能完备的网站。其中包括以下组件： 下拉菜单、按钮组、按钮下拉菜单、导航、导航条、路径导航、分页、排版、缩略图、警告对话框、进度条、媒体对象等。
支持插件 Bootstrap自带了13个jQuery插件，这些插件为Bootstrap中的组件赋予了“生命”。其中包括： 模式对话框、标签页、滚动条、弹出框等。
默认标签 主要标签 成功标签 信息标签 警告标签 危险标签
bootstrap 4 标签
基本按钮 主要按钮 次要按钮 成功 信息 警告 危险 黑色 浅色 链接</description>
    </item>
    
    <item>
      <title>日志</title>
      <link>https://pub.oribos.cn/web/2019112001.html</link>
      <pubDate>Wed, 20 Nov 2019 13:42:23 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2019112001.html</guid>
      <description>github desktop 图形化的git操作，通过简单操作代替了代码输入，更有效的使用git仓库内容。
git项目里的用户名、邮箱、账户的区别。在windows的凭证管理器里保存有github desktop的用户名和密码。
使用visual studio code，添加git插件，也可以使用git操作。</description>
    </item>
    
    <item>
      <title>App域名的尴尬</title>
      <link>https://pub.oribos.cn/web/raw/2019111502.html</link>
      <pubDate>Fri, 15 Nov 2019 18:14:39 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019111502.html</guid>
      <description>.app域名需要https才能使用 由于.app域名需要https才能使用。这样的话如果我用.app域名解析宝塔控制面板，frp后台页面等很多页面就会导致必须设置https。
而且，如果我用腾讯云，华为云，亚马逊aws等多家的对象存储服务时，就必须在这些存储桶上传ssl证书，而这些厂商的对象存储有的需要设置cdn才能使用https链接 。
.app域名无法在国内服务器上使用 由于.app域名未接入可备案的域名，暂时无法正常解析到国内的存储桶，云服务器上。
无法备案并不是最大问题，问题事这个域名我即便想用到所有项目上，但其强制性ssl要求导致不得不放弃无法使用ssl的项目。实用性不强，所以，新的海外域名hbsys.io用来代替之前的专用海外域名efs.app。或许一年到期后，这两个域名将放弃一个。
hbsys.io将用来解析海外的各类服务。包括临时主机，至于长期的对象存储桶，由于一年后必须放弃一个。还没想好以哪个使用为主。</description>
    </item>
    
    <item>
      <title>多个git同步</title>
      <link>https://pub.oribos.cn/web/raw/2019111402.html</link>
      <pubDate>Thu, 14 Nov 2019 19:18:57 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019111402.html</guid>
      <description>多个git同步 日志网站的源代码放在目录A中，hugo运行以后，在目录A里生成一个public目录。这个public是直接发布到coding上。这个目录需要做成git仓库同步。但是源代码的目录A也想通过git仓库同步，在不同电脑上可以操作。这就需要将目录A做成仓库。
1 不想上传public文件夹两次。
2 coding pages能否直接发布仓库里public文件夹的内容？
3 如何将目录A的仓库，分离一个分支，存放public？</description>
    </item>
    
    <item>
      <title>Hugo 与 Hexo 的异同</title>
      <link>https://pub.oribos.cn/web/reprint/010.html</link>
      <pubDate>Thu, 14 Nov 2019 11:25:35 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/010.html</guid>
      <description>引用自reuixiy
前言 Hugo 是一个基于 Go 语言开发的静态网站生成器（SSG），目前由 @bep 领衔开发，Hugo 的突出特点是简洁、灵活、高效，目前有很多知名网站都在使用 Hugo：Netlify、Let’s Encrypt、IPFS、Cloudflare Developers、DigitalOcean Docs、1Password 等等。与目前国内流行的 Hexo 相比，Hugo 的速度可称为飞速🚀——在安装和使用上都是如此。
下面，我们就来看一下 Hugo 与 Hexo 的一些异同，不过需要注意的是：此文主要探讨的是用户层面上的一些异同，而非技术层面的差异。简体中文来说🐼：即一个技术小白（我）从 Hexo 迁移到 Hugo 时遇到的一些常见问题。
目录结构 1 2 3 4 5 6 7 8 9 10 11 12 ~/blog $ tree -L 1 . # 说明 Hexo ├── archetypes/ # 文章模板 scaffolds/ ├── assets/ # Hugo 管道 ├── config.toml # 配置文件 _config.yml ├── content/ # 文章目录 source/_posts/ ├── data/ # Hugo 数据文件 source/_data/ ├── layouts/ # 布局模板 ├── public/ # 生成的静态文件 public/ ├── resources/ # Hugo 缓存 ├── static/ # 网站的静态文件 source/ └── themes/ # 主题目录 themes/ 在 Hugo 中，与 Hexo 的一个很大不同——也可以说是优点——是主题目录与站点目录有一样的结构，以 MemE 主题举个例子（已剔除无关文件）：</description>
    </item>
    
    <item>
      <title>存储桶的命名</title>
      <link>https://pub.oribos.cn/web/raw/2019111403.html</link>
      <pubDate>Thu, 14 Nov 2019 10:41:47 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019111403.html</guid>
      <description>存储桶的分类和命名 1 首先需要一个专门备份文件和收集重要资料的存储桶。私有权限，长期保存，不经常删减文件。至少需要一个。
2 业务需要，一个公开访问的存储桶。公共读取权限，根据应用设置时间和内容级别。必要时对文件进行删减。至少需要一个。
3 临时中转，一个私有权限存储桶。放置app，压缩包或其他类型文件。这种临时中转的文件，可能需要长期保存，也可能只是周转一下就删除。也可能涉及重要安全权限，需要单独放置。需要一个或多个。
4 业务信息，一个由各类系统生成或存储各类日志，记录的存储桶。作为系统文件的存放点。私有权限，这些文件甚至从来没有被使用过。但是需要保留以备某些时候查阅。需要一个或多个。
公开桶的命名 1 公开桶的名字需要跟私有桶完全区分。必要时，需要给公开桶设置自定义访问域名。个人使用.ufs.pub作为所有公开访问的存储桶的域名。
2 私有桶在需要时也需要自定义域名，个人使用.hbnote.com作为私有桶的域名。私有桶的域名在一般情况下无法直接通过浏览器访问或者访问时权限受限。
3 临时桶，原则上来讲，临时的存储桶不需要专门设置自定义域名。但不排除必要情况下，长期使用临时桶使用。个人使用.ofs.pub作为所有临时业务的域名。</description>
    </item>
    
    <item>
      <title>Discuz归来</title>
      <link>https://pub.oribos.cn/web/raw/2019111401.html</link>
      <pubDate>Thu, 14 Nov 2019 10:12:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019111401.html</guid>
      <description>dicuz！论坛发文归来 2019年11月13日在discuz！论坛一篇文章引起热议 Discuz! 回来了
Discuz!将发布另一款产品Discuz！Q。是更轻的，更易变现的，更移动端的，更开放的和更易于二次开发的社区产品。Discuz! Q第一个alpha版本，将于农历新年前后发布。
而此时另一款著名的cms产品wordpress已经持续数周无法正常访问。</description>
    </item>
    
    <item>
      <title>对象存储服务的选择</title>
      <link>https://pub.oribos.cn/web/raw/2019111301.html</link>
      <pubDate>Wed, 13 Nov 2019 11:01:56 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019111301.html</guid>
      <description>阿里云oss的问题 阿里云oss存储桶内的文件，无法重定向子目录的index.html。如果想把hugo的静态网站部署到oss里就很麻烦，需要指定url。然而必要的分类，标签，目录无法指定rul。
使用腾讯云cos部署hugo 腾讯云的cos可以重定向子目录的index.html文件。尽管在云服务器的选择和网站备案上不想选择腾讯云服务。然而在对象存储的选择上暂时找不到更合适的，只能使用腾讯云cos。
使用cos部署静态网站，暂时无法像阿里云那样使用ssl证书。由于.app域名必须使用https访问，使用ssl就需要在cdn里进行配置。
为什么不使用华为云的obs 在使用腾讯云cos之前就在考虑华为云的对象存储服务obs，而且我的很多资料都是备份在obs里的，由于主要服务器就是华为云产品，obs也是需要长期保持的服务。但是在部署静态文件的时候，发现其cdn的配置异常的慢，甚至长达十几分钟，严重怀疑其产品专业能力。鉴于部署和修改需要耗费大量的时候等待配置。暂不考虑使用华为云obs服务部署静态网站。
更新 尽管有意重新使用腾讯云的cos部署一些访问量不大的页面，但是发现，https的设置出现无法直接使用自定义域名的https链接。导致访问直接转向cos地址。效果欠佳。无奈放弃完全使用腾讯云cos</description>
    </item>
    
    <item>
      <title>静态资源的引用</title>
      <link>https://pub.oribos.cn/web/raw/2019111201.html</link>
      <pubDate>Tue, 12 Nov 2019 09:55:43 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019111201.html</guid>
      <description>样式文件和js使用oss内容 网站，单独页面需要的css，js，图片等静态资源均引用自oss内容。并使用https安全协议。静态资源使用一个公开访问的oss存储桶。
应用程序备份到oss里 经常使用的（主要时海外资源）应用程序app，应保留在oss里。当其他应用需要安装时，引用oss里，加快传输速度。国内资源可直接引用原资源。
长期备份文件保存在oss里 定期将网站内容备份到oss存储桶里，包括一些必要的个人文件。此oss存储桶为私有访问权限。
oss的作用 私有桶 资源冗余 资源长期备份 公共桶 静态文件 文件中转加速</description>
    </item>
    
    <item>
      <title>Coding和阿里云code的选择</title>
      <link>https://pub.oribos.cn/web/raw/2019111101.html</link>
      <pubDate>Mon, 11 Nov 2019 16:29:33 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019111101.html</guid>
      <description>git托管的两个国内站点 国内的git托管站点有gitee，阿里云code，腾讯云coding等站点。目前在阿里云code和腾讯云coding上做选择。个人的很多数据都优先阿里云上，但是阿里云code没有pages功能。静态网站无法部署在其上代替网站服务器。而coding功能强大，有pages功能。但是个人不想选择腾讯云的服务，包括之前购买的云服务器都在腾讯云上退订了。
个人网站转移至coding 由于个人使用的服务器做精简，纯粹的网站服务器被裁减，个人网站由wordpress改为hugo，生成静态网站部署在coding上，具有pages的coding成为优先使用的git托管中心。
数据集中 由于个人网站转移至coding，基于数据集中的原则，相应的图片，音乐等外接资源也将优先考虑腾讯云服务。必要的git同步也将倾向于coding。阿里云code保留使用某些应用。
github的必要性 github项目较多，在github上的项目可以考虑复制到阿里云code或coding上使用。</description>
    </item>
    
    <item>
      <title>部署点改变</title>
      <link>https://pub.oribos.cn/web/raw/2019111102.html</link>
      <pubDate>Mon, 11 Nov 2019 16:14:34 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019111102.html</guid>
      <description>从云服务器转变为coding 日志的更新从云服务器转变为coding上发布
固定链接 为了适应网站部署方式的改变，每篇文章都要规定固定链接地址。必须定义url。（主要应对阿里云oss无法自动重定向到index.html）。保障文章能正确采用url地址访问。 注意：在hexo和hugo里post文章里使用url 应做为基本操作。
对于部署方式变更后的备份问题 之前的备份是根据服务器的主要目录，统一备份到oss里。现在文件从云服务器转为coding。然而，coding上放置的是经过hugo渲染后的html文件。源文件并没有同步到coding上面。源文件是保存在本地电脑上的！就需要一种方式，确保这些源文件能妥善备份。当业务转移时，在其他地方也能渲染生成整站文件。
问题时这些文件是在不同电脑上的。而且不同电脑上操作的也不尽相同，步骤，内容并不同步。就需要同步到git托管中心上。
1将源文件同步到git托管中心
2在电脑A上拉取源代码
3在电脑A上修改源代码
4使用hugo命令生成public文件，推送public文件到 coding
5 推送源文件到git托管中心
6电脑B需要操作时，从git托管中心拉取源代码
7重复3-5的步骤。</description>
    </item>
    
    <item>
      <title>Hugo 主题 MemE 文档</title>
      <link>https://pub.oribos.cn/web/reprint/011.html</link>
      <pubDate>Sat, 02 Nov 2019 10:42:03 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/011.html</guid>
      <description>引用自reuixiy
前言 MemE 是一个强大且可高度定制的 GoHugo 博客主题，专为个人博客设计。MemE 主题专注于优雅、简约、现代，以及代码的正确性。MemE 主题对习惯了 Hexo 的用户非常友好，是从 Hexo 迁移到 Hugo 的不错选择。
为什么要起名为 MemE 呢？这四个字母的含义是基于这个单词本身的，即希望你的博客以及文章能够像模因一样传播、影响。当然，希望这个主题也是如此，并给你带来欢乐。至于这四个字母的形式（MemE），则是受 Taylor Swift 的 ME! 中的「you can’t spell “awesome” without “me”」启发。同时，这两个字母的大写就将这个单词分成了两部分——ME 和 em，中间两个字母组成 em，这也给人一种可爱的感觉。此外，em 也是 me 的反写，这又是我非常喜欢的形式！
MemE 主题践行极简主义，没有使用现有的流行前端库，主题的 HTML 和 CSS 皆由我纯手工从零雕琢而成。同时，MemE 的 CSS 也是按需生成的，比如：如果你不需要代码高亮的功能，那么代码高亮的样式就不会被加入 MemE 的 CSS 文件中。更甚，MemE 无需加载任何图标库——主题的图标是通过 Hugo 的数据模板直接将 SVG 嵌入到 HTML 中实现的——这使得 MemE 不会去加载图标库中大量你所不需要的图标，节约了很多资源。当然，这也意味着你可以方便地自定义属于自己的图标。
极简并不等于简陋，MemE 主题具有许多强大的、现代的特性：
功能 完全的深色模式支持 完全的多语言支持 可自定义的 SVG 图标 支持 HTML/CSS/JS 的压缩和 JS 的捆包 代码高亮、脚注、Todo 列表、定义列表、Emoji 字体排版 自定义字体、字号、行间距 自定义文章内容宽度 段首缩排、两端对齐 首字下沉、小型大写 图片说明、图片脚注 着重号 中文标点符号字形纠正 归档页面、分类页面、标签云页面 Atom╱RSS 订阅 分节标题锚点 图片外链、视频外链 自定义页脚 404 页面 模块 顶栏 菜单栏 文章副标题 文章描述 文章元信息 文章目录 文章版权 文章更新徽章 文章的 Git 版本信息 文章分享 相关文章 文章的标签 文章上下篇 极简页脚、关于页面的极简页脚 返回顶部按钮 其它 Service Worker 及 PWA Google Analytics、Google Site Verification、Google AdSense 不蒜子页面浏览量和站点访客数、站点访问量 Disqus 评论、Valine 评论、Utterances 评论 KaTeX 和 MathJax 3.</description>
    </item>
    
    <item>
      <title>ZeroTier虚拟内网</title>
      <link>https://pub.oribos.cn/web/raw/2019103107.html</link>
      <pubDate>Thu, 31 Oct 2019 13:10:32 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019103107.html</guid>
      <description>内网ID 3efa5cb78a1e1784
1 centos安装
2 windows 安装</description>
    </item>
    
    <item>
      <title>图床所在的服务器退订，图床网站撤销</title>
      <link>https://pub.oribos.cn/web/raw/2019103102.html</link>
      <pubDate>Thu, 31 Oct 2019 02:59:54 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019103102.html</guid>
      <description>服务器撤销 photo.ufs.pub作为支持网站图片内容的支援站点，由于托管的服务器退订，图床服务暂时取消。原有内容转移到oss暂时保存。
使用picgo制作图片链接 使用picgo上传图片到阿里云oss里，oss做cdn处理。oss访问地址保持同之前图床服务器地址一样，原有图床内的资源仍保持不变。后续可能备份到其他地方，暂时以阿里云oss为主。
资源服务均从服务器上撤离 由于服务器性能和资源有限，大量资源不宜放在服务器上，静态资源均放置在对象存储中，避免占用服务器资源。同时也是在服务器做迁移时避免转移大量文件。</description>
    </item>
    
    <item>
      <title>一个虚拟主机放多个网站</title>
      <link>https://pub.oribos.cn/web/raw/2019102401.html</link>
      <pubDate>Thu, 24 Oct 2019 15:47:00 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019102401.html</guid>
      <description>一个虚拟主机放多个网站 阿里云虚拟主机只能放一个网站，为了能够搭建多个网站就要使用到伪静态文件.htaccess 文件。
阿里云虚拟机提供一个网站文件夹，也就是根目录里面可以放一个 A 网站，那么要想多放一个 B 网站，假设域名是 www.ensu.cc，还要建立一个文件夹，名字随便起，我这里叫 bweb 也就是 B 网站的根目录。
1、在阿里云虚拟主机根目录建立一个.htaccess 文件，内容如下：
RewriteEngine On RewriteBase / RewriteCond %{HTTP_HOST} ^www.ensu.cc$ [NC] RewriteCond %{REQUEST_URI} !^/bweb RewriteRule ^(.*)$ /bweb/$1 [L] #要绑定多个网站，需重复上面三行代码并更改对应域名”www.ensu.cc”、目录名”/bweb” 2、在 bweb 文件夹内建立一个.htaccess 文件，内容如下：
RewriteEngine On RewriteCond %{HTTP_HOST} !^www.ensu.cc$ [NC] RewriteRule (.*) https://www.ensu.cc/$1 [L,R=301] 3、如果还想建立第三个网站，就把 1 中的那三行再次复制粘贴到下面，同时修改对应的域名和文件夹名字即可。
4、只要是 apache 环境下能使用.htaccess 的虚拟主机都可以用这个方法实现多网站共存。</description>
    </item>
    
    <item>
      <title>centos 7.x-64x 安装 hugo</title>
      <link>https://pub.oribos.cn/web/raw/2019102406.html</link>
      <pubDate>Thu, 24 Oct 2019 15:44:45 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019102406.html</guid>
      <description>centos 7.x-64x 安装 hugo 先安装golang
yum -y install golang 查看版本,安装成功
go version 添加epel repo
/etc/yum.repos.d/hugo.repo vim /etc/yum.repos.d/hugo.repo [daftaupe-hugo] name=Copr repo for hugo owned by daftaupe baseurl=https://copr-be.cloud.fedoraproject.org/results/daftaupe/hugo/epel-7-$basearch/ type=rpm-md skip_if_unavailable=True gpgcheck=1 gpgkey=https://copr-be.cloud.fedoraproject.org/results/daftaupe/hugo/pubkey.gpg repo_gpgcheck=0 enabled=1 执行安装 hugo
yum -y install hugo 查看版本
hugo version </description>
    </item>
    
    <item>
      <title>新增frp服务器</title>
      <link>https://pub.oribos.cn/web/raw/2019102203.html</link>
      <pubDate>Tue, 22 Oct 2019 03:45:06 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019102203.html</guid>
      <description>为群晖NAS和本地服务器增加frp服务，以直接开通web访问。域名使用已经备案都网站域名。只负责二级域名对博客的内容补充和后端计算。
新增的nas域名初步设置为
web.ufs.pub 群晖nas上的web服务
nabase.oribos.city 群晖nas管理界面
m.ufs.pub 群晖图片应用服务
开始安装 设置frps服务自启动 </description>
    </item>
    
    <item>
      <title>ubunut 安装go</title>
      <link>https://pub.oribos.cn/web/raw/2019102207.html</link>
      <pubDate>Tue, 22 Oct 2019 02:03:32 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019102207.html</guid>
      <description>获取最新的软件包源，并添加至当前的apt库
add-apt-repository ppa:longsleep/golang-backports
更新 apt库
apt-get update
安装go
sudo apt-get install golang-go
鉴定是否安装成功
go version</description>
    </item>
    
    <item>
      <title>centos 7防火墙指令</title>
      <link>https://pub.oribos.cn/web/raw/2019102105.html</link>
      <pubDate>Mon, 21 Oct 2019 14:20:34 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019102105.html</guid>
      <description>centos 7防火墙指令 #进程与状态相关 systemctl start firewalld.service #启动防火墙 systemctl stop firewalld.service #停止防火墙 firewall-cmd --state #查看防火墙状态 firewall-cmd --reload #更新防火墙规则 firewall-cmd --state #查看防火墙状态 firewall-cmd --reload #重载防火墙规则 firewall-cmd --list-ports #查看所有打开的端口 firewall-cmd --list-services #查看所有允许的服务 firewall-cmd --get-services #获取所有支持的服务 #区域相关 firewall-cmd --list-all-zones #查看所有区域信息 firewall-cmd --get-active-zones #查看活动区域信息 firewall-cmd --set-default-zone=public #设置public为默认区域 firewall-cmd --get-default-zone #查看默认区域信息 firewall-cmd --zone=public --add-interface=eth0 #将接口eth0加入区域public #接口相关 firewall-cmd --zone=public --remove-interface=eth0 #从区域public中删除接口eth0 firewall-cmd --zone=default --change-interface=eth0 #修改接口eth0所属区域为default firewall-cmd --get-zone-of-interface=eth0 #查看接口eth0所属区域 #端口控制 firewall-cmd --add-port=80/tcp --permanent #永久添加80端口例外(全局) firewall-cmd --remove-port=80/tcp --permanent #永久删除80端口例外(全局) firewall-cmd --add-port=65001-65010/tcp --permanent #永久增加65001-65010例外(全局) firewall-cmd --zone=public --add-port=80/tcp --permanent #永久添加80端口例外(区域public) firewall-cmd --zone=public --remove-port=80/tcp --permanent #永久删除80端口例外(区域public) firewall-cmd --zone=public --add-port=65001-65010/tcp --permanent #永久增加65001-65010例外(区域public) 注：如果某个接口不属于任何Zone，那么这个接口的所有数据包使用默认的Zone的规则。 命令含义： --zone #作用域 --add-port=80/tcp #添加端口，格式为：端口/通讯协议 --permanent #永久生效，没有此参数重启后失效 Systemctl命令： systemctl start firewalld.</description>
    </item>
    
    <item>
      <title>新增frp服务器</title>
      <link>https://pub.oribos.cn/web/raw/2019101901.html</link>
      <pubDate>Sat, 19 Oct 2019 10:30:50 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019101901.html</guid>
      <description>新增frp服务器 为群晖NAS和本地服务器增加frp服务，以直接开通web访问。域名使用已经备案都网站域名。只负责二级域名对博客的内容补充和后端计算。
更换为nps frp配置复杂,改用nps内网穿透</description>
    </item>
    
    <item>
      <title>对网站适当的规划</title>
      <link>https://pub.oribos.cn/web/unc/1369.html</link>
      <pubDate>Thu, 17 Oct 2019 08:48:56 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/unc/1369.html</guid>
      <description>之所以网站内容迟迟无法更新，是因为自己分不清那个网站是正式访问，那个网站是临时测试内容的。往往将很多资料放到一个网站。又因为一些过激的试验导致文件和数据库破坏。没有按照部署-发布的步骤合理规划。而且本地电脑的文件由于不同的环境致使文件繁杂，混乱。
文件的管理 UFS 文件系统的统一规划 app 图片 音乐 视频 代码 云存储 git托管更新都需要进行必要的区分，规划。
硬件的管理 服务器规划 个人使用的云服务器，公司使用的服务器，数据库，物理服务器都要进一步规整，管理。
云数据的管理 OSS和文件服务器 重新规划个人和公司在用的oss存储桶，快照，备份。
建立个人仓库 建立个人仓库，存放各类网络资源，素材，模板。并同步到阿里云或华为云对象存储服务里。做长期分享。当然是合法，健康可以公开分享的信息。比如字体，css，各类设计素材。
目前是建立长期的，稳定的共享资源。
个人的站点并非仅使用一个域名。目前持有hbn.pub ufs.pub paas.pub hbnote.com uns.pub iufs.app域名。其中，主要的站点均以hbn.pub域名为主，ufs.pub作为文件服务的专用域名，提供文件服务，oss桶域名。iufs.app由于无法在国内取得备案号，仅用于海外服务器。paas.pub和uns.pub暂时保留。其中www.hbnote.com www.hbn.pub www.ufs.pub 仅作为个人网站展示使用。
主要更新的博客文件先在b.hbn.pub发表，并根据类型转载到以上三个网站。三个博客网站发布不同类型的文章。某些待完善的文章仅发表在iufs.app网页上，再根据情况转载到其他网站。 无论是海外站点还是国内站点，由于对防垃圾评论的功能支持不足，所有的博客站点均暂时关闭评论和留言功能。由于技术和风险限制，可能需要的支付类型也仅以支付宝（alipay）为主。
原则 1 遵守相关法律法规 2 数据和资源掌握在自己手里 3 在可靠的地方上做长期备份 4 服务持续 5 构建简单</description>
    </item>
    
    <item>
      <title>宝塔上设置https，然后用阿里云的cdn，提示重定向过多</title>
      <link>https://pub.oribos.cn/web/raw/2019101601.html</link>
      <pubDate>Wed, 16 Oct 2019 03:30:06 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019101601.html</guid>
      <description>宝塔上设置https，只能开启强制ssl。然后用阿里云的cdn，提示重定向过多。
解决方法：第一步关闭宝塔上的强制ssl，第二步 重新设置阿里云CDN的时候，端口选择443，CDN强制跳转选 默认</description>
    </item>
    
    <item>
      <title>专门用来测试代码的站点</title>
      <link>https://pub.oribos.cn/web/raw/2019101502.html</link>
      <pubDate>Tue, 15 Oct 2019 14:46:26 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019101502.html</guid>
      <description>ofs.pub将作为专门用来测试代码的网站，临时站点均放置在放在.ofs.pub上。意味着hbn.pub将不再解析临时站点。
当然，为了测试代码不影响正常网站和公司业务，测试将在独立的服务器上运行，alpha站点。</description>
    </item>
    
    <item>
      <title>使用 SSH 连接到 GitHub（多帐号）</title>
      <link>https://pub.oribos.cn/web/reprint/2019100704.html</link>
      <pubDate>Mon, 07 Oct 2019 20:19:20 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2019100704.html</guid>
      <description>引用自reuixiy
我们克隆 GitHub 上的仓库时，一般是通过默认的 HTTPS 的方式，而非上面这种 SSH 的方式。对于克隆仓库的话，我们使用起来是感受不到这两种方式的差别的。但是，当我们要将本地的改动提交到 GitHub 的时候，使用 SSH 就会比使用 HTTPS 方便很多——我们无需每次输入用户名和密码🐶&amp;hellip;
单帐号 1 $ ssh-keygen -t rsa -b 4096 -C &amp;#34;reuixiy@gmail.com&amp;#34; 怎样使用 SSH 呢？首先，你需要通过以上命令生成 SSH 密钥对。当然，将上面的邮箱地址改为你自己在 GitHub 上的邮箱地址。然后，如果你是第一次生成的话，一路回车即可（口令 passphrase 非必须）。
之后，cat ~/.ssh/id_rsa.pub 查看生成的公钥并复制，再去 GitHub 上设置一个 New SSH key，标题随便起一个（比如：我的电脑😺），然后粘贴公钥即可。
最后，如果你 git clone 或 git remote add 的是 HTTPS 的地址1，那么要修改仓库的远程仓库链接地址为 SSH 地址，比如：
1 ~/hugo-theme-meme $ git remote set-url origin git@github.com:reuixiy/hugo-theme-meme.git 此外，当你本地第一次连接 GitHub 的服务器时，可能会有警告信息，输入 yes 回车即可。
多帐号 1 2 3 4 5 6 7 8 9 # 帐号一 $ ssh-keygen -t rsa -b 4096 -C &amp;#34;reuixiy@gmail.</description>
    </item>
    
    <item>
      <title>利用 Workbox 实现博客的 PWA</title>
      <link>https://pub.oribos.cn/web/reprint/2019100108.html</link>
      <pubDate>Tue, 01 Oct 2019 21:32:34 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2019100108.html</guid>
      <description>引用自reuixiy
1
如果你使用 Google Chrome 浏览器访问我的博客💻，你可能会发现地址栏右侧有一个小小的 + 号，并会提醒你安装。当然，如果你是用手机访问的话📱，Chrome 就会在页面的底部提醒你。但你可千万千万不要把它当作什么恶意骚扰哦😅，它只是善意地提醒你：这个网站是一个 PWA 站点，强烈推荐您添加到桌面以获取原生应用般的优质体验！😝
注意：请查看一个简单的 Service Worker。
前言 渐进式网络应用程序（英语：Progressive Web Apps，简称：PWA）是一种运用现代的 Web API 以及传统的渐进式增强策略创建的跨平台 Web 应用程序。这种应用程序将目前最为现代化的浏览器提供的功能与移动设备的体验优势相结合，使其具有与原生应用相同的用户体验优势。2
以上是开发者角度，就用户角度来说🐼，当你的博客实现 PWA 后，你的读者可以：
添加你的博客到电脑╱手机的桌面，以原生应用般的方式浏览你的博客 更快速地浏览你的博客 离线浏览你的博客 第一点：对于读者，博客可一触即达，且无浏览器的地址栏、菜单栏等「无关」干扰👴；对于博客，非常有利于博客的用户留存率，也利于博客的品牌形象😺。第二点：可以利用 Service Worker 的缓存特点，极大地加速你的博客，如果再加上 InstantClick 的预加载特点，简直飞速🚀。第三点：对博客来说，个人感觉意义不大🤔。
正文 PWA 有很多要求，比如：HTTPS、响应式布局等等，可参考这个 Checklist，可用 Lighthouse3 检查。
4
关于图标和 manifest.json，可以通过这个网站在线生成。如果你不确定，可以参考我的博客以及 MemE 主题的相关代码。
在 PWA 的众多要求中，其中很重要的一点就是可离线访问，而要实现这一点，最简单的方法就是使用 Service Worker。在这篇文章中，我们使用 Workbox 这个工具生成 sw.js 以快速实现 Service Worker 🤖，并实现页面的预缓存和页面更新后的提醒功能，而非深究 Service Worker 的接口然后手动写 JS 代码来实现👨‍💻🐶&amp;hellip;
由于我们需要使用 Node 的模块，因此我们的电脑必须安装 Node.js。如果你使用的是 Hexo，那么是已经安装过的；如果你使用的是 Hugo，那么请自行安装一下。然后，我们安装模块📦：</description>
    </item>
    
    <item>
      <title>git托管中心由转入国内</title>
      <link>https://pub.oribos.cn/web/raw/2019100103.html</link>
      <pubDate>Tue, 01 Oct 2019 03:30:28 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019100103.html</guid>
      <description>1 git托管中心由github转入国内
尽管github功能更多，但由于网络不稳定，将自己使用的git托管中心转入国内。初步使用阿里云的code或者腾讯的cloud studio。以追求更稳定的网络和更快的速度。代码库将陆续克隆。
使用efs.app域名或其他无法在国内正常使用的项目和域名将继续留在github上。事实上，长期的项目仍然以github为主。
2 整理git版本
移除多余的，不需要在git托管中心上保存的项目。存档并备份到内部服务器上。git托管中心只出现必要的内容，避免项目太乱。
取消不经常使用的托管，gitee上项目移除，gitlab上项目移除。目前主要在阿里云，腾讯云上保留。
3 关闭 自建和内部git托管
关闭群晖nas上的git托管，关闭云服务器上git.hbnote.com的git服务 ，
更新：
移除 gitlab github gitee coding上的git托管内容。</description>
    </item>
    
    <item>
      <title>阿里云CDN加速和全站加速的区别</title>
      <link>https://pub.oribos.cn/web/raw/2019093003.html</link>
      <pubDate>Mon, 30 Sep 2019 06:42:57 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019093003.html</guid>
      <description>以下是阿里云CDN和全站CDN加速的区别
CDN仅支持静态内容加速（比如：图片/CSS/文件等）；全站CDN加速支持同时静态和动态内容同时加速。
加速方式：将您服务器上的静态内容缓存在阿里云CDN节点上供用户就近访问。全站CND加速：静态内容使用CDN加速。动态内容通过智能路由、协议优化等动态加速技术快速访问您的服务器源站获取。
源站适配：建议您对服务器源站的动静态内容进行分离，静态内容使用CDN加速，动态内容不使用CDN。全站CDN您无需对服务器源站上的资源进行改造，全站加速会智能区分动静态内容并分别加速。</description>
    </item>
    
    <item>
      <title>将两个站点内容互换</title>
      <link>https://pub.oribos.cn/web/unc/1336.html</link>
      <pubDate>Mon, 30 Sep 2019 06:42:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/unc/1336.html</guid>
      <description>将www.hbn.pub和www.ufs.pub站点内容互换，主要域名仍为www.hbn.pub，www.ufs.pub仅提供基础的文件服务。
原有的www.ufs.pub犹豫数据库里的css文件错误，导致页面显示不正常，不得不重新安装。而www.hbn.pub采用wordpress在设置里修改一下域名就完成了。内容并没有丢失。</description>
    </item>
    
    <item>
      <title>git托管中心的变更</title>
      <link>https://pub.oribos.cn/web/2019092907.html</link>
      <pubDate>Sun, 29 Sep 2019 13:30:49 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2019092907.html</guid>
      <description>git托管中心的变更 优先选择可靠的git托管中心，某些访问量大的，对带宽要求高的项目可以转移到国内的git托管中心。避免使用海外托管中心而出现的访问速度慢，不稳定的现象。</description>
    </item>
    
    <item>
      <title>centos 7.x-64x 安装 hugo</title>
      <link>https://pub.oribos.cn/web/raw/2019092501.html</link>
      <pubDate>Wed, 25 Sep 2019 09:14:01 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019092501.html</guid>
      <description> </description>
    </item>
    
    <item>
      <title>为网站开启CDN</title>
      <link>https://pub.oribos.cn/web/info/1306.html</link>
      <pubDate>Mon, 23 Sep 2019 09:00:58 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/info/1306.html</guid>
      <description>日志 正式为博客开启CDN，暂时只能使用http协议访问，https访问正在设置。对暂时使用带宽按量计费的服务器都开启CDN，避免异常流量造成高费用。
各类网站部署形式 使用物理服务器
固定ip
内网穿透
使用虚拟机
使用docker
使用对象存储
使用git托管中心pages
使用虚拟主机
使用云服务器</description>
    </item>
    
    <item>
      <title>将博客部署到星际文件系统（IPFS）</title>
      <link>https://pub.oribos.cn/web/reprint/2019091804.html</link>
      <pubDate>Wed, 18 Sep 2019 15:13:56 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2019091804.html</guid>
      <description>引用自reuixiy
1
在这篇文章中，我将主要介绍如何将你的..静态..博客以持续集成的方式部署到星际文件系统 IPFS 上，也会简单介绍一下 IPFS 的使用。本文中，我使用的 SSG2 是 Hugo，使用的持续集成服务由 Netlify 提供，博客的源码可以在 GitHub 上找到。另，提醒一下，与零网一样，IPFS 默认不匿名👓，且对 Tor 的支持还在开发中。
说明：最近发现 Cloudflare 的 IPFS 服务好像挂了，需要等待非常长的时间才能获取到最新内容，因此本博客已暂时放弃部署在 IPFS 上。
前言 一年前的昨天🧐，知名的互联网基础设施服务提供商 Cloudflare 宣布开始支持 IPFS Gateway，作为其分布式互联网网关项目的一部分。关于分布式互联网（Distributed Web，以下简称 D 网），它的到来很有可能会将我们带向 Web 3.0 时代，一个全新的互联网时代！而 D 网所具有的去中心化将会带我们走向新的自由之路——无审查，无高墙。👉🌎🌍🌏💫
起因 浏览 Twitter 时发现了 @GoHugoIO 的一条推文，IPFS 四个字母激起了我的兴趣🐭（之前..轻微..了解过，印象只限于这四个字母），快速浏览一遍链接的文章之后，去看了他之前写的一篇详细教程，打开 IPFS 的官网，决定这次一定要尝试一下 IPFS！🕳️🦆
正文 文章的正文分为两个部分：持续集成和原生部署，第一部分是文章的主体，第二部分供感兴趣的读者研究。
当你按照此文章将博客成功部署到 IPFS 上后，你的博客将：
⚡拥有全球范围的高速 CDN，国内也有不错的访问速度（Cloudflare） 🌤️无需支出且永远在线（如果你不需要域名的话） 🛸走向未来 持续集成 如果你只是想直接通过持续集成的方式部署博客，那么你是无需在自己的电脑（本地）上安装 IPFS 的，你甚至可以完全不用接触 IPFS。但是，你的电脑必须安装 Git 和 Node.js。如果你是一个程序员或之前有尝试过搭建静态博客，那么你对它们应该并不陌生。
准备环境 首先是 Git，我们要将博客所在的文件夹初始化成一个 Git 仓库。注意，如果你之前已经初始化过了，请跳过这一步。怎么确定是否已经是一个 Git 仓库呢🤔？打开终端╱命令行，然后进入你的博客文件夹，输入 git status 然后回车，如下：</description>
    </item>
    
    <item>
      <title>建立个人仓库</title>
      <link>https://pub.oribos.cn/web/info/1118.html</link>
      <pubDate>Thu, 12 Sep 2019 14:54:13 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/info/1118.html</guid>
      <description>建立个人仓库，存放各类网络资源，素材，模板。并同步到阿里云或华为云对象存储服务里。做长期分享。当然是合法，健康可以公开分享的信息。比如字体，css，各类设计素材。
目前是建立长期的，稳定的共享资源。
个人的站点并非仅使用一个域名。目前持有hbn.pub ufs.pub paas.pub hbnote.com uns.pub iufs.app域名。其中，主要的站点均以hbn.pub域名为主，ufs.pub作为文件服务的专用域名，提供文件服务，oss桶域名。iufs.app由于无法在国内取得备案号，仅用于海外服务器。paas.pub和uns.pub暂时保留。其中www.hbnote.com www.hbn.pub www.ufs.pub 仅作为个人网站展示使用。
主要更新的博客文件先在b.hbn.pub发表，并根据类型转载到以上三个网站。三个博客网站发布不同类型的文章。某些待完善的文章仅发表在iufs.app网页上，再根据情况转载到其他网站。 无论是海外站点还是国内站点，由于对防垃圾评论的功能支持不足，所有的博客站点均暂时关闭评论和留言功能。由于技术和风险限制，可能需要的支付类型也仅以支付宝（alipay）为主。</description>
    </item>
    
    <item>
      <title>dns和网络异常</title>
      <link>https://pub.oribos.cn/web/raw/20190903.html</link>
      <pubDate>Sat, 07 Sep 2019 14:32:28 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/20190903.html</guid>
      <description>我使用域名paas.pub做泛解析*.paas.pub到海外主机上，然后在主机上开启新的子域名vip.paas.pub。
出现了异常情况。使用联通光纤。输入vip.paas.pub被解析到一个联通ip 218.28.144.38 ，然后通过网络上其他网站的dns检测。解析ip为真正IP。唯独在联通光纤上出现莫名其妙的联通IP。
换用阿里云的dns 223.5.5.5 223.6.6.6 通过命令行 nslookup查询，解析的IP地址正确。
然后使用域名vip.paas.pub浏览器出现错误，无法访问。
然后使用手机，切换掉wifi，使用手机流量上网访问。
页面正常。
然后切换成wifi访问，出现无法连接。</description>
    </item>
    
    <item>
      <title>关于ICP备案的误区</title>
      <link>https://pub.oribos.cn/web/876.html</link>
      <pubDate>Mon, 02 Sep 2019 01:03:40 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/876.html</guid>
      <description>需要备案的是服务器，不是域名。比如你个人信息备案，登记的是你人的信息。至于你叫张三李四是可以随便起的。
域名不需要备案就能直接使用，但是网站访问需要备案。(以http协议访问web服务器)
访问国内web服务器需要备案，备案时需要一个域名对应，好比个人需要名字。但本质上关键的是域名对应的网站，不是域名。
备案后网站同域名本质是绑定的，但实际情况并没有严格要求。只要网站内容同备案域名对应（你个人，至于你是天然的还是克隆的甚至外边是人实际是机器人无关紧要）</description>
    </item>
    
    <item>
      <title>由于进行的项目太多，域名解析已经不够用</title>
      <link>https://pub.oribos.cn/web/786.html</link>
      <pubDate>Wed, 21 Aug 2019 03:08:39 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/786.html</guid>
      <description>hbn.pub用于的项目太多，解析条目太多，很多常用的名字已经使用。急需新域名的补充，而新域名由于备案问题迟迟无法获得网站备案号。导致一直未能正常使用。
关于域名的安排，需要将正式应用的域名同资源服务的域名分开，做多方面准备。用来代替hbn.pub的是ofs.pub 专门测试临时页面。</description>
    </item>
    
    <item>
      <title>服务器关闭数据库对外访问</title>
      <link>https://pub.oribos.cn/web/raw/2019081301.html</link>
      <pubDate>Tue, 13 Aug 2019 08:35:50 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019081301.html</guid>
      <description>web服务器自带的数据库仅供自身使用，不再向外部提供数据库服务
2019-8-13的服务器解析的变更
所有文件服务均有ufs.pub提供，之前的其他服务器暂时保持不变，后续新建的文件服务器和对象存储服务均有ufs.pub提供。
收回hbn.pub的其他对外服务端口。非必要端口全部从安全组排除。
收回hbnote.com的除www和git服务以外的所有web访问。</description>
    </item>
    
    <item>
      <title>针对需要长期保存的文件，转移至云存储服务上。</title>
      <link>https://pub.oribos.cn/web/raw/2019080703.html</link>
      <pubDate>Wed, 07 Aug 2019 09:51:45 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019080703.html</guid>
      <description>将一些需要重点保存的文件，存放在各大云服务的对象存储服务上。个别文件要求5年以上保存。购买合适的存储包，对重要文件进行长期保存。避免过往的照片，文稿丢失。需要的时候再同步下来。纸质或实体材料，扫描以后上传电子档。
现在的问题是，有三个网站正在使用。还有四个域名正在进行备案阶段。这些网站里有只需要静态网页的。有需要配置运行环境的。
现在有两个云主机，一个web服务虚拟主机。虚拟主机将逐步取消，在虚拟主机上的网站将迁移到云主机上。
CRM应用占据一个云主机，并同时提供web服务。Web服务使用一个云主机，提供绝大多数web服务。
完全静态的网站，将迁移到OSS里做静态页面。事实上，仅提供基本网络访问的网站都进行静态化处理。全部迁移到OSS里。</description>
    </item>
    
    <item>
      <title>自建网站的意义</title>
      <link>https://pub.oribos.cn/web/note/2019080201.html</link>
      <pubDate>Fri, 02 Aug 2019 09:00:03 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2019080201.html</guid>
      <description>尽管随着微信，微博，贴吧等SNS的兴起， qq空间用户都在减少。 个人博客的热度大不如前。但是某些不可控的因素导致，网盘，SNS相继关闭，限制甚至封禁销号。个人的数据在厂商面前是微不足道的。 个人的文章和资料应该尽可能的掌握在自己手里。 所以私有云的NAS，个人网站的博客让大有市场。
需要注意的是，个人网站并不是为了逃避审核，而是为了让自己的数据可靠放心，用户自己掌握文章，资料是必需和必要的。某些需要长期保存的可以考虑放在对象存储或者刻录成耐用性光盘。</description>
    </item>
    
    <item>
      <title>当初想着建个网站搞点有意义的事</title>
      <link>https://pub.oribos.cn/web/note/2019080101.html</link>
      <pubDate>Thu, 01 Aug 2019 02:29:57 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2019080101.html</guid>
      <description>当初想着搞个网站，放点文章，分享点有用的技术，创意，有价值的东西。做点有意义的事。结果不晓得是懒得更新还是想到其他东西，网站一直没动过。
当然，更新博客也行，只是博客吗，毕竟筛查，审核太严。一点点不对劲就是删文章，封号的。现在说个话，点个赞就要担心人身安全。
目前网站只是用来测试不同的建站环境，远程sql server服务器和mysql服务器的连接。云服务器的容量有限。图片，视频那样的大容量文件不放在云服务器上，放在阿里云或华为云的对象存储服务上。目前网站不考虑做CDN
需要理解的一点是：个人网站应该全力放在网站本身的数据上。提供给访问者有价值的信息，而不是将精力投入花哨的装饰，配件上。现在社会的信息爆炸时代，过于繁杂的设计，装饰会让人焦虑不安。</description>
    </item>
    
    <item>
      <title>内部资源同外部资源分开放置</title>
      <link>https://pub.oribos.cn/web/raw/2019072901.html</link>
      <pubDate>Mon, 29 Jul 2019 10:28:16 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2019072901.html</guid>
      <description>网站的内容一般放置在hbn.pub的web服务器上，而网站需要调用的图片，音乐等外部文件一般使用hbnote.com域名，放置在oss或其他数据存储服务器上。
为什么要这么做？
1 hbnote.com里的文件可以及时备份，转移。避免web服务器出现故障后导致大量文件损失。
2 服务器的硬盘有限（或者说极小）无法保存太多的文件，特别是较大的文件。
3 较大文件也意味着流量消耗。而服务器的流量是收费的。带宽越大费用越高。
4 本服务器一般不保存.exe文件。所有的需要引用的.exe文件均引用自其他权威网站。
基于以上的对资源的隔离放置，导致公共域名hbn.pub和内部服务域名出现混乱情况。既有ufs.hbn.pub又有ufs.hbnote.com。因此，对于域名的作用做更详细的要求。使用较多的域名为了避免繁杂两个域名均指向一个服务器。功能一样，设置一样。
内部的服务均以功能命名，比如data，mysql。外部访问的服务均以提供的服务类型命名，比如web，blog，cloud。
网站</description>
    </item>
    
    <item>
      <title>学习容器技术</title>
      <link>https://pub.oribos.cn/web/note/2019071601.html</link>
      <pubDate>Tue, 16 Jul 2019 10:15:04 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2019071601.html</guid>
      <description>2019-7-17创建： 通过设置该网站域名b.hbn.pub 可以使用kms激活服务器，该服务器是安装在docker上的一个容器。
2019-7-19更新：已经可以使用docker部署基本的服务器，但是测试数据库功能的时候，发现wordpress的安装程序始终无法连接在docker里的mysql或者mariaDB数据库。此wordpress安装也是在docker里，可以正常连接专门的数据库服务器，但是无法连接docker里面的数据库服务器。或许是什么地方设置问题，但是此问题一直未能解决。</description>
    </item>
    
    <item>
      <title>使用gitlab社区版自建git服务器</title>
      <link>https://pub.oribos.cn/web/note/2019071001.html</link>
      <pubDate>Wed, 10 Jul 2019 01:37:50 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2019071001.html</guid>
      <description>使用gitlab社区版自建git服务器，不用把文件更新到github或者码云上，文件放在自己的服务器上。
刚入门的时候，想自建git托管中心，负责个人代码保管。但是后来使用coding的各项功能后，发现没必要耗费一个服务器资源搭建。使用github和coding更方便。
尽管github作为非常流行的git托管中心，但是大部分人选择github并不是一个好现象。特别是一个国外的服务器，导致国内服务不稳定和传输慢，导致乐意去顺应这个潮流。</description>
    </item>
    
    <item>
      <title>在开发一个 Hugo 主题</title>
      <link>https://pub.oribos.cn/web/reprint/004.html</link>
      <pubDate>Fri, 05 Jul 2019 21:31:32 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/004.html</guid>
      <description>引用自reuixiy
这些天在开发一个 Hugo 主题1，目标是从 Hexo 平滑地迁移到 Hugo，并保留博客现有的结构、样式、功能……为什么要迁移到 Hugo 呢？因为相比 Hugo 的生成速度，Hexo 实在是太慢了，最重要的是 Hugo 更为极简主义，而 Hexo 的依赖包……
由于是代码小白，所以开发起来也没有捷径，先去找现有的 Hugo 主题，然后观察，最后结合文档自己从零慢慢构建。这些天来，摸清了 Hugo 使用的 Go Template 的基本语法2，弄清了 Hugo 内的基本数据结构，学会了使用 Hugo 的一些基本函数，理清了 Hugo 的一些基本概念以及其与 Hexo 的异同……
开发进度呢？仅仅是一个未完成的 Atom 的模板……因为我是个完美主义者，而要完美，就必须弄懂每一行代码，弄明白每一项功能。而作为代码小白，要了解、要学习的东西就可多了，你可以看看下方我的浏览器截图中满满的标签页，以及我的可怜的内存……不过未来的开发进度应该会更快，因为该要的知识也摸得差不多了，应该。还有就是我一边开发，一边把遇到的坑╱总结╱文档写了，毕竟这可能是我的第一个开源项目，所以好好写，一来对将来的用户友好，二来希望对想开发 Hugo 主题的人提供一点我的开发经验，以利于他们自己的开发，从而让更多的人加入 Hugo。
3
Anyway，敬请期待吧～
已开发完成，主题的最终名字叫 MemE。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
可参考官方文档的 Introduction to Hugo Templating 入门，可参考 Régis Philibert 写的相关教程。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
推荐安装相应的语法高亮插件，以更高效开发，博主后来开发时使用的是 VS Code 的 Hugo Language and Syntax Support。&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>第一篇文章</title>
      <link>https://pub.oribos.cn/web/note/2019062601.html</link>
      <pubDate>Wed, 26 Jun 2019 10:18:01 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/note/2019062601.html</guid>
      <description>这是一篇文章
这篇文章记录这个站点的发布时间。</description>
    </item>
    
    <item>
      <title>解决 Win10 下 DNS 问题导致的无法上网</title>
      <link>https://pub.oribos.cn/web/reprint/2019061205.html</link>
      <pubDate>Wed, 12 Jun 2019 13:35:32 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2019061205.html</guid>
      <description>引用自reuixiy
最近有好几个朋友叫我去帮忙看下他们的电脑，说「上不了网、提示错误、打不开软件」等等，结果我发现都是一样的问题——DNS，我打开手机 Google 一下一会儿就给解决了。虽然我早就不用 Windows 10 了，但预防将来可能还会有朋友遇到这样的问题，于是便写篇文章放博客记录下来，以便不时之需。
1
关于适配器设置 IP 地址和 DNS 服务器地址的操作这里就不重复了，直接百度 win10 dns 找一条看看即可，如果你的设置已经是..自动获得..但问题仍没有解决，那么请看下文。
1）以管理员身份运行 CMD
左下角的开始菜单然后鼠标右键 开始菜单搜索 cmd 找到「命令提示符」然后鼠标右键 若上面两种方法均不可用，则打开文件浏览器去 C 盘 Windows &amp;gt; System32 搜索 cmd.exe，然后鼠标右键 2）分别输入以下命令并回车2
&amp;gt; ipconfig /flushdns &amp;gt; ipconfig /registerdns &amp;gt; ipconfig /release &amp;gt; ipconfig /renew &amp;gt; netsh winsock reset 如果无法输入，记得 shift 切换到英文输入状态 输入第一条回车后，可按键盘方向键「上」然后修改 3）重启
好了！这样应该就解决了！不管是网页打不开 QQ 能打开，还是连 QQ 竟然也打不开，都能解决。再也不用抱着电脑去电脑店，结果被建议重装系统……再也不用担心这样所导致的一切损失和麻烦了！👶
原图 Google 自网络，经过这个工具处理。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
参考①：https://sofree.cc/win10-dns-internet/
参考②：https://blog.csdn.net/weixin_44090160/article/details/85034839&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>将 Hexo 静态博客部署到 Netlify</title>
      <link>https://pub.oribos.cn/web/reprint/2019060903.html</link>
      <pubDate>Sun, 09 Jun 2019 16:27:01 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2019060903.html</guid>
      <description>引用自reuixiy
1
前言 我的这个博客一直都是部署在 GitHub Pages 上的，且用的是最原始的方式，即先在自己的电脑上安装 Hexo，然后本地调试，最后 hexo d 将 hexo g 生成的 public 文件夹部署到 GitHub Pages 上。为什么说这种方式原始呢？因为这种方式直接将生成的可以运行的实际代码（生产版）发布到 GitHub 上，而不是源码（开发版），没有利用 GitHub 来对源码进行版本控制，这就不利于博客未来的维护、更新、开发，以及可能的开源开发。可以说，这种原始的方式所带来的弊端开始逐渐困扰我，它让我现在无法回溯自己对博客所做过的修改，也就让我现在很难将自己的博客开源出去，分享给大家🤕&amp;hellip;
为什么我当时采用的是这种如此原始的方式呢？因为我是代码小白……后来，在阅读他人的博客时，多次看到有人利用 Travis CI 去部署博客，于是慢慢地了解到软件开发中持续集成（Continuous Integration，简称 CI）的概念。但是，作为一个野生的伪程序员，我直到..现在..，才意识到它的意义。因此，在这篇文章中，我使用的还是最原始的方式——直接部署 public 到 Netlify，而非源码，需读者注意。如果你想使用更为现代的持续集成的方式来部署博客到 Netlify，请自行 Google 相关文章，自行尝试。此外，如果你是萌新，可以阅读我之前写的另一篇文章。
简介 什么是 Netlify 呢？官网。相比 GitHub Pages 的静态页面托管服务，Netlify 提供的服务可谓专业，自带 CI、支持自定义页面重定向、自定义插入代码、打包和压缩 JS 和 CSS、压缩图片、处理图片、CMS 等等，最值得一提的是 Netlify 也支持自定义域名免费 HTTPS（你也可以上传自己的证书），且是通配符证书 + TLS 1.3，甚至提供了完整的 DNS 服务，有自动的 www 跳转，以及超简单的子域名配置界面。此外，Netlify 每月也有 100GB 的流量，也自带了全球的 CDN 服务，还支持了 GitHub Pages 官方不支持的 HTTP/2、IPv6（需手动开启）。
其实，以上这些特点都是我在尝试 Netlify 之后发现的，而我之所以会去尝试 Netlify，是因为我发现 GitHub Pages 近期变得不稳定，很多时候最大下载速度只有 20~30KB/s（未科学上网），因此我今天就找到了 Netlify，部署后自己实际体验下，效果也并不是太好🙃&amp;hellip;</description>
    </item>
    
    <item>
      <title>博客重构：极简主义！</title>
      <link>https://pub.oribos.cn/web/reprint/2019060301.html</link>
      <pubDate>Mon, 03 Jun 2019 13:49:29 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2019060301.html</guid>
      <description>引用自reuixiy
转眼间，我的这个博客已经两岁多了👴，访客总量 52k+，浏览总量 167k+。两年多的时间里，博客经历了多次改版，也经历了三次大灾难（rm、sed、硬盘暴废），可谓「阅历丰富」。但是，过去半年里，我的这个博客却少有更新，我最近不禁问我自己：我这是怎么了？刚开始写博客时的那种热情去哪了？经过一段时间的思考后，我决定重构博客，拥抱极简主义！
Simplicity is the ultimate sophistication.（至繁归于至简）1
— Leonardo da Vinci
除旧 极简第一步，简化分类，简化标签。你可能注意到，我之前的博客的分类颇为复杂，标签也颇为繁冗。为什么我要设计得如此复杂呢？其实，这是因为我搭建这个博客的..初衷..并不是为了记录自己，而是为了归档我所习得的各种知识，以利于我的创造。
你可能会问我要创造的是什么，答：一个哲学上的宏大体系，这在上面的两张图中应该有所体现。而我于去年搭建了一个新的博客，将哲学独立分离了出去，因此这个博客的分类和标签也是时候简化了，分类只有两个：生活、技术，标签则每篇文章不超过 5 个。
极简第二步，页面元素，页面交互。博客的主体是文章，故除了文章内容，其它的一切都可以不要，只追求极致速度。菜单栏？分类才两个，不要！图片背景？应专注文字、排除干扰，不要！侧栏、返回顶部、动画效果？过多交互以致分散注意力，不要！文章信息、上篇下篇？相关文章？页脚？三个不要！
极简第三步，浏览统计，评分评论。有时评论区会带来很大的心理压力，各种统计数字则是一种隐形心理压力。另，博客是静态，而这些属于动态内容，技术上讲即是写操作，违背了纯静态的只读原则2。综上，统统不要。
当然，作为一个独立博客，博客的标识不可不要，因此保留了本博客独一无二的、显著的顶栏。此外，最终也在页面底部加上了标签、分类的内链，让读者来去自如。
迎新 极简并不等于简陋，本博客也有了一些值得关注的创新设计。
最值得关注的是字体排版，应该是目前中文博客中最美的🌚&amp;hellip; 字体使用了 Noto Serif SC + EB Garamond，通过 Google Fonts 实现；新增..着重号..以替代中文中不存在的斜体，更为美观、优雅；解决了网页中英字体混排导致的痛点——英文符号变全角或中文符号字形不对；……
其它的方面，PWA、无需等待的超快速度、长文章的目录设计（可双向跳转）等等。
其它 改变了本博客的 URL 结构，导致以前的博文链接大量 404（已利用 Netlify 解决，见我的这篇文章）。大量文章重写了，有些文章迁移了，少量文章删除了。为什么会重写呢？因为看看自己最初的文章，发现自己居然看不懂，表达得太差了，不忍直视。
是否会开源？技术不足，代码写得丑，还无法将这些成果写成一个配置简单的主题，故暂时不会考虑开源。此外，还有轻微的模仿担忧。但是，欢迎你以本博客的设计理念去改善自己的博客，欢迎你以本博客的设计理念去开发一个主题。
最后，希望自己在重构的本博客上多反省，多写感悟，多记录自己。「苟日新，日日新，又日新。」
沃尔特·艾萨克森：《史蒂夫·乔布斯传》（管延圻等译），中信出版社，2011 年版，第六章。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
https://maintao.com/2019/subtraction-done-in-my-blog/&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>Google Fonts 已支持思源宋体！</title>
      <link>https://pub.oribos.cn/web/reprint/008.html</link>
      <pubDate>Tue, 11 Dec 2018 15:12:04 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/008.html</guid>
      <description>引用自reuixiy
就在昨天，一次偶然，我打开了 Google Fonts 的网站，眼前一亮！惊奇地发现了被英文字母包围的汉字！什么？Google Fonts 居然支持汉字了！？是的，查阅相关资料后，根据国外的这个网站上的两篇文章：
New fonts added on Google Fonts — 18 November 2018 New fonts added on Google Fonts — 07 December 2018 可知：Google Fonts 分别在 11 月 18 日和 12 月 07 日提供了思源黑体和思源宋体的简繁支持，而且高达 6 种字重支持，其中思源宋体更是高达 7 种字重。这可了不得啊！更重要的是：它支持了目前电子显示屏上稀缺的宋体，这将会是一个伟大的进步！要知道，对于中文书籍，宋体一直是正文印刷的标准字体，而不是目前电子显示屏上普遍的黑体，因为..宋体的衬线更适合长时间阅读..。
优势 为什么宋体的衬线更适合长时间的阅读？可以有个「主观解释」，即自己可直接体会的解释。实践起来也简单，阅读一会儿宋体后回到黑体，阅读一会儿黑体后再回到宋体。
我自己的主观感受：看完宋体后再回到黑体，四字就浮上心头——..索然无味..。因此，作为长文章为主、文字内容为主的博客，强烈建议马上使用 Google Fonts 提供的思源宋体！你可能注意到，我的博客已经开始使用了，所以应该如何使用呢？
使用 官网搜索 Noto Serif SC，点 + 号选择，选择好后底部会弹出一个提示框，里面有使用说明。还可以点击提示框中的 CUSTOMIZE 定制要加载的字重与语言。
1
之后，点击 EMBED，复制生成的代码，添加到博客的 &amp;lt;head&amp;gt; 标签内，并修改博客的相关 CSS 样式，指定 font-family 和 font-weight。
最后，考虑到宋体的笔画要比黑体细，因此建议将字体的颜色加深，比如修改为 #333，以达到较好的阅读效果。</description>
    </item>
    
    <item>
      <title>开源：创造世界！</title>
      <link>https://pub.oribos.cn/web/reprint/2018113007.html</link>
      <pubDate>Fri, 30 Nov 2018 23:52:38 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2018113007.html</guid>
      <description>引用自reuixiy
几周前，经历一次硬盘暴废后，在我的全新硬盘，我只安装了 Arch Linux。我终于彻底摆脱了 Windows！然而，如果说几周前的硬盘损坏是物理上的意外压迫，那么刚刚这次经历就是一种精神上的诱惑。
就在刚刚，我使用 Arch Linux 时，突然有了一个疯狂的需求：更改一张 SVG 图片的大小（注意，这很疯狂，因为我从未处理过）。这该怎么办呢？倘若在 Windows 下，我肯定要先打开浏览器，搜索编辑 SVG 的软件，然后去这个软件的官网下载，最后——不，等等，也许还要先注册个帐号——安装。这实在是逊爆了！比起我刚刚在 Arch Linux 上的经历。我刚刚只是 Google 时加上——arch linux——马上就看到我需要的软件包的名字：Incscape，终端输入 sudo pacman -S inkscape，回车，好了！没错，秒速就安装好了，仅仅几秒而已！真的是秒速！
回到那张我想编辑的 SVG 图片，鼠标右键选择 Incscape 启动，马上就能编辑。哦，对了，就是马上！倘若在 Windows 下，安装好软件后打开的第一个界面可能并不是编辑，而是付费提醒。不友好，在漫长过程后的疲惫之时，甚至觉得是恶意，即使付费是合理的。Linux 下如何呢？快速地且舒服地进入了界面，再次 Google 一下如何编辑，选择一个 YouTube 视频观看。十几分钟之后，这个我之前认为疯狂的需求就完成了。
这是为什么呢？为什么在 Linux 下一切都变得如此简单、迅速、友好？是开源！如果你不理解「开源」这个词语，可以通过一个故事来理解。有两个房间，房间甲和房间乙。一个房间被整齐地分为 1、2、3&amp;hellip; 个小隔间，隔间的每个人低着头，面无表情，按照死板的教条敲打着键盘，那是房间乙；一个房间空旷辽阔，几个人聚在一起，始于好奇，溺于创造，快乐无止！这是房间甲！这就是开源！一种符合人性的、自由的、奇异的合作模式！
正是因为这种模式，珍品不断地在开源世界被创造。作为用户的我们不断感叹：珍品！而作为开发者，对自己的作品不是漠不关心，而是热情地不断完善自己的创造，最终在用户一次次的感叹中将珍品变为一个艺术品！这种模式，用户与开发者都在微笑中，一起创造出更好的未来！是的，那些生产者们，别再继续拖住我们前进的步伐了！你们永远无法生产出未来，因为未来是被创造出来的！你们永远无法生产出世界，因为世界是被创造出来的！
还记得上面的硬盘暴废吗？这是个令人崩溃的可怕事件，万幸的是，我最终恢复了硬盘中的数据。说出来你可能难以相信，但我的确仅仅依靠自己就解决了。当然，除了我的机智之外，最直接的因素是：我使用的是 Linux，这个开源的现代的操作系统！我所做的，只是 Google 到 TestDisk 这个开源软件，然后在 Linux 中直接运行（系统自带），最终顺利地恢复了我的数据。需注意的是，这是个小概率事件，而生产者从来不重视它们。但是，由于好奇，创造者到达世界的每个角落，而且是以优雅的方式，并创造出珍品！数据无价，拯救我的数据的 TestDisk——这个珍品！——的背后，也有着一条快乐的创造之路！尽管很偏僻，但是很秀丽！
这些如此神奇的开源软件，一个这样现代的操作系统！务必感谢这些因好奇、兴趣而热情地创造的伟大开发者们！致敬！你们这些伟大的创造者！拥抱开源，忠于好奇！我们创造的将是一个..显微后依然不断感叹..的奇异未来世界！</description>
    </item>
    
    <item>
      <title>人的控制欲</title>
      <link>https://pub.oribos.cn/web/2018112204.html</link>
      <pubDate>Thu, 22 Nov 2018 18:29:59 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/2018112204.html</guid>
      <description>控制欲 控制欲，是一个心理学术语，是指对某一件事情，或者某一个人在一定程度上的绝对支配，不允许意外或者是有其他差错，对于人来说指对她/他绝对的占有，思想上行为上都不允许有违背你的意思。
每一个人或多或少都会想要控制住一些事物或其他人。通常内心有较强不安全感的人控制欲望也强烈一些，那些谨小慎微、追求完美、心里总不踏实的人更希望控制别人。 控制欲强是内心恐惧的表现，也是极度没有安全感的表现，通过控制一些人或事物来给自己带来安全感。
而我今天就发现一种现象，作为一个业余程序员对数据的控制欲。期望把自己注册的各类软件，硬件，网络都牢牢掌握在自己手里。我会清空自己不在使用的git项目，删除不用的dns解析。清空电脑里不用的软件应用。视频网站上取消不再感兴趣的订阅等等很多看似正常的行为。为什么我会有这种类似强迫症的行为，因为回想起来，不用，放哪里不就好了，至于消灭的一干二净吗？
因为，我对数据拥有某种程度的控制欲，既然不再使用了，留着就会脱离自己掌控，心里不舒服。自己用的东西必须完全能左右，不能左右的就只能消灭掉。
人的很多烦恼就源自控制欲太强，尽管很多时候感觉不到有什么不对。
只是偶尔的日记，可能后续我会详细研究，这类平常表现的某些行为对人的影响。</description>
    </item>
    
    <item>
      <title>自建mysql数据库</title>
      <link>https://pub.oribos.cn/web/raw/2018101507.html</link>
      <pubDate>Mon, 15 Oct 2018 15:26:31 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2018101507.html</guid>
      <description>自建mysql数据库 云服务器的安全组端口放行，centos的防火墙放行，mysql安装程序，用户名和密码，远程数据库权限开放。 grant all privileges on . to &amp;lsquo;denalon&amp;rsquo;@&amp;lsquo;172.26.231.178&amp;rsquo;;
主要数据库 数据库分为外部数据库服务器和本机数据库。数据库以“alpha”上的为主，其他服务器上的数据库文件都应该向“alpha”上的备份。</description>
    </item>
    
    <item>
      <title>资源整理和区分</title>
      <link>https://pub.oribos.cn/web/raw/2018092906.html</link>
      <pubDate>Sat, 29 Sep 2018 13:26:22 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2018092906.html</guid>
      <description>资源整理和区分 重要资料 文件某些重要的资料需要存放到对象存储服务内，且访问权限设置为私有。某些静态文件需要一个单独的存储桶， 权限根据需要调节。某些存储桶是用来在不同服务器内周转和分享资料。 域名管理 目前文件服务域名，网页服务域名，内部服务域名，测试域名做分开处理。 个人使用服务器和存储桶的规划 成本简化 考虑到对象存储需要的流量费用，需要公共访问的对象存储服务只在一家产品上选用。目前使用阿里云oss存储桶。只在华为云obs上保留长期备份的私有存储桶。撤销在亚马逊AWS，微软azure，腾讯云或其他公司的对象存储服务。
CDN服务同样如此，撤销在腾讯云，华为云，AWS上部署的CDN服务。
git托管中心暂时无账单。保留在coding，阿里云code上的git托管服务。
服务质量考虑 由于国外服务导致网络不畅，下载和访问缓慢。有时甚至DNS解析异常。仅保留在测试时使用国外服务，目前oss和git服务以国内服务为主，撤销在github gitlab上的pages服务。撤销在vultr，亚马逊AWS以及其他站点上部署的海外站点。
应用简化 由于设计外观不是自己的强项，自己的日志，个人网页以简洁为主。以展示内容没主要目的。避免使用繁琐复杂的技术，避免使用不必要的限制或管理方法。避免使用过多的修饰，渲染。</description>
    </item>
    
    <item>
      <title>科学是人类认识世界改造世界的工具和方法</title>
      <link>https://pub.oribos.cn/web/raw/2018091308.html</link>
      <pubDate>Thu, 13 Sep 2018 11:56:56 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2018091308.html</guid>
      <description>人类是有局限性的，科学是人类认识世界改造世界的工具和方法，人类的局限性就导致对科学的理解和使用存在不完善的地方。人类不是全知全能，所接触和理解的世界也是无边无际的，人类本身是理解不了世界的无穷大和无穷小的，比如科学本身也不存在完善和完美。
目前所能采用的就是不断探索，不断总结，不断纠正，不断拓展探索。科学理论也是提出，验证，推倒，再提出，再验证，再推到。无法被验证的理论就不能称为科学。
不存在一个完美的理论和方法，因为人类本身就不是完美的。完美的东西人类是无法理解的，所能接触的比如带有人类的局限性。超出了这个局限性就不是人类应该拥有的东西。神，鬼，魔这类魔幻的东西并不属于人类直接接触的东西，因为人类的世界是局限的世界。这种超出当前世界的设定比如同现今世界的理论所相悖，理解魔幻的东西就打碎了越来越多的真实存在。
无论是原始生物，还是具有一定认知能力的人类都无法探究超出自己认知极限的东西，人类无法理解超出三维空间的异次元宇宙，所进行任何设想也仅仅是没有理论依据的假设。人类无法超越时间，时间穿越一直以来都是幻想而无法达成。
伪科学是什么？伪科学就是没有以人的局限性为根本，妄图设想出一个超级的存在去解释整个世界，整个人的认知。不以实际的人对世界的认识为基础，而且以第三者的姿态超越人，用各种看似完美的答案，完整的理论去勾画不真实的世界。伪科学的东西经不起人的实际认识，伪科学的东西无法通过科学理论的提出，验证和推倒过程。伪科学的教条是完美的，无懈可击的，不容置疑的。却不真实的。
我们是否应该相信伪科学的东西？首先伪科学的理论是很难用科学理论去反驳的，存在是可以用科学方法证明的，不存在和是否存在是很难证明的。我们使用科学的工具和方法是探究接触的世界的，研究人类实际生活的所需。对于超理论的探究不去过度浪费精力。神，鬼，魔存在也好，不存在也罢。只要这些超理论的东西没有对人类实际生活所接触所干涉，就放任不管才是合适的。因为人类是有局限性的，不可能在有限的时间里研究出一套完美的囊括宇宙奥秘的理论出来，无论什么时候，依然存在伪科学的土壤，依然存在探究不了的区域。 殚精竭虑 研究那些是毫无意义的。</description>
    </item>
    
    <item>
      <title>网页字体排版的哲学：段首缩排或段间距</title>
      <link>https://pub.oribos.cn/web/reprint/2018090503.html</link>
      <pubDate>Wed, 05 Sep 2018 21:40:48 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2018090503.html</guid>
      <description>引用自reuixiy
写在前面 首先声明：本人非印刷行业的专业人士，也非网页设计的专业人士，故这系列博文全当本人的个人消遣。同时，也希望读者对此系列文章的正误有自己的思考。
写这系列文章的直接原因是发现很多中文网页的字体排版实在是不忍直视，甚至博客也是如此，故打算写一写这方面的博文。主要原因是目前网上缺乏这方面的文章，或者这方面的知识尚未普及，而它却关系到我们每人每天都在阅读和输入的文字，其重要性不言而喻。故本人希望借此系列文章来普及一下这方面的知识，即使可能只是微薄之力，毕竟本人只是一个外行人。
然而，如果说主要原因之上还有个根本原因，那本人写这系列文章的根本原因：作为一个爱哲学的人，本人想探索一下网页字体排版的..本质规定性..。另外，尽管文中有部分技术细节，但读懂此系列文章无需 HTML 与 CSS 基础，甚至无需任何计算机知识基础。
系列前言 自写博客一年多来，虽然优秀的文章没有写几篇，但却了解了一些 Web 前端的知识。这些知识是本人在博客建设中的有力工具，而作为一个追求完美的人，博客建设中最令人犯愁的莫过于排版。
首先，排版是一个很大的学问，所以在写之前先界定个范围。此系列博文主要是关于网页中文字体排版，什么意思呢？
「网页」意味着 CSS； 「中文」意味着不谈英文； 「字体」意味着不谈页面。 然而，「排版」必然会受到各方面的影响，所以还是会涉及部分上面的「不谈」部分。另外，CSS 的应用已经不止网页，几乎你现在所见的各种中文字体排版都离不开 CSS，它的影响也远不止于网页。因此，可以说此系列适用于与中文字体排版有关的各种，比如：电子书、微信文章排版、Word 文章排版等等。
题外话：目前中文电子书的排版简直是一片混乱之地。即使你用 Kindle，且电子书来自 Amazon，大部分直接打开后还是不忍直视。此外，虽然 Kindle 能够对电子书进行一些基本调整，但由于电子书排版的不统一，导致同时阅读多本电子书时，需要频繁重复设置以达到一致的阅读效果。若无意外，本人之后应该会特别写一篇《在 Kindle 上优雅地阅读》，在此先打住。
此系列博文包括但不限于：
分段样式； 标点符号； 字体选择； 各种数字； 特殊样式。 另外，本人的一些实践都会在本博客和我的另一个博客上体现。
系列核心 先提一个看起来很傻的问题：为什么标题与段落的样式要有所区别？「因为名称不同，」你可能会答，「试想标题与段落的样式一样，正如一对双胞胎，那怎么分辨呢？」这个回答是无误的，但不够犀利，或者说只停留在了表象。深究一下问题本身，即：为什么要在「段落」之上另起「标题」？因为表达需求。
无论是哪种字体排版样式，它都是表达需求的表现形式。如果说现在是果，那么历史就是因，我们可以通过回顾历史来寻找原因。从网页开始，沿着时间轴逆行，越过纸质书，来到原始的手写，一个「双重历史」。第一重，从印刷回溯到手写；第二重，从打字回溯到手写。我们虽是第一重的客体，但也是第二重的主体，回溯到在纸上书写时，这是我们都有过的体验。当自己在纸上书写时，标题与段落之间的样式肯定会有所区别，比如标题是居中。这就是表达需求的主观解释，每个人都能自行体验。
逆行一下，上文是从排版样式回溯到表达需求，我们也可以尝试从表达需求回归到排版样式。正如需强调一个词时，就用粗体来表现，行文上有一个表达需求，排版上就要将这个表达需求表现，即排版样式。这意味着在讨论字体排版样式前，必须先回溯表达需求，然后再结合..表现要求..谈排版样式的美观问题，而不是凭主观美感空谈。
分段样式 本节主要探讨分段的两种排版样式：段首缩排与段间距。
现状概述 为什么先说这个呢？因为这似乎是网页上字体排版的空白区，很多网站的分段的排版样式都是段间距 + 段首缩排，不忍直视。其实，这是没明白分段的表达需求，在网页默认的段间距排版的基础上硬加段首缩排，极其荒谬。
表达需求 字体排版样式都是表达需求的表现形式，所以在讨论分段的排版样式之前，必须先回溯分段的表达需求。为什么有分段这个表达需求呢，或者说为什么要分段，什么情况就要分段呢？印象中这应该是小学老师教授过的内容，大家应该都有所理解，个人理解：
内容不直接相关； 上下是并列关系； 逻辑有一定转折。 也许还有其它方面，但其根本是前后不连续，不管是内容、逻辑。因此对于这个表达需求，在排版样式上则表现为将段落分离开来，即一种分段标识。另有一种..特殊情况..，如果不连续的程度很大，段落的分离程度也要更大，即一种分段停顿。
排版样式 要将段落分离开来，有两种合理的排版样式：段首缩排与段间距。两种样式的区别：
段首缩排，段首缩进两字符，段间距等于行间距。 段间距式，段首不进行缩进，段间距大于行间距。 在网页中，段落用 &amp;lt;p&amp;gt; 表示，行间距即 line-height，段间距可以用 margin 控制，段首缩排用 text-indent 实现。
怎么评价这两种样式呢？段首缩排在「一统王国」也许会被禁止，因为它使页面的左边变成了一条曲折的线，不符合最智慧的线——直线。也就是说，其实从美观角度，段首缩排是一种..畸形排版..，因为它违背了基本的对齐原则，而遵守这一原则的段间距则使页面显得整齐。但是，段首缩排似乎一直是书籍印刷的标准段落排版样式，难道印刷行业一直错了？
这时，我们就要考虑..表现要求..。书籍印刷的表现要求是专注文字内容，因此阅读体验应当置于美观之上。由于段间距比段首缩排的分离程度更大，一字连一字阅读时易产生隔阂感、停顿感，故段首缩排与之相比更为优雅，有着更好的阅读体验。
对于网页，与纸质书的翻页不同，它是竖直方向的连续滚动。当网页快速滚动时，就使段落上下相连的段首缩排显得繁密易懵，而段落上下间隔的段间距则显得结构简明。在这个快速滚动的互联网时代，段间距也就比段首缩排更适合于网页，因为它更利于快速传达信息。
对于诗歌，左边对齐的段间距排版更适合它。首先，如果称诗歌的「节」为「段」的话，与长文章不同，诗歌的每句很短，每段也很短。当采用段首缩排时，左边不对齐的美观问题将会变得格外突出。其次，诗歌注重意境，对于意境的想象，留白较大的段间距排版更为优雅。
最后，对于分段需求的特殊情况——分段停顿，由于其不连续的程度很大，因此应当采用分离程度更大的段间距排版，而非段首缩排。另外，从美观角度，段首缩进四个字符是不忍直视的。</description>
    </item>
    
    <item>
      <title>杂谈-文件管理</title>
      <link>https://pub.oribos.cn/web/raw/2018081304.html</link>
      <pubDate>Mon, 13 Aug 2018 09:58:06 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2018081304.html</guid>
      <description>用过linux和mac的文件管理以后，我感觉Windows的文件管理习惯实在处于幼儿园阶段。这不怪用户，是Windows平台上普通用户的设计和使用习惯远落后于现代IT技术。
当今阶段，仍有不少人还在坚持新装电脑，给电脑几个区。1T硬盘分5个区。固态硬盘128G分两个区。仍有不少人把桌面放大量文件甚至大型文件都放桌面。
桌面 是一个快捷操作界面。你电脑可能安装了几百个软件、资料等等。但每天你经常用的应该不会是这全部几百个，2T的文件。你需要把经常使用的，使用频率最高的文件放到桌面。或者说，将他们的快捷方式放桌面。大型文件和软件应该按照文件类型，重要程度存放到他们最稳妥的地方。而不是几百个文件不分轻重缓急一股脑的放桌面。
磁盘不应该分区。分区使得文件管理被割裂。一个普通电脑里，应该区分 系统、应用程序、文档、存档、隐私或保密文件做区分。而不是按照大小把磁盘锯成一个个小方格放置。
一般C盘放系统。然后其他的文件完全可以放到一个分区内，当然必要的磁盘外备份是不可或缺的，我们不应该去管文件存放到哪个分区。同样的，不应该对文件做过多的文件夹。
Windows没有类似于mac osx的标签。使用标签可以给文件做标记和区分，而不需要关心文件具体在什么目录，什么时间，什么类型的文件。
系统的缓存、休眠文件、更新文件、临时文件不应该作为用户关心的事情。Windows 目录里除非是专业高级人员会修改，变更系统设置和文件。一般用户不要去关闭更新，删除临时文件等不必要的操作。用户的使用电脑的心态不应自我感觉比微软工程师还是专业。</description>
    </item>
    
    <item>
      <title>可证伪</title>
      <link>https://pub.oribos.cn/web/raw/2018080201.html</link>
      <pubDate>Thu, 02 Aug 2018 09:53:15 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/web/raw/2018080201.html</guid>
      <description>“所有科学命题都要有可证伪性，不可证伪的理论不能成为科学理论。”
这是著名科学哲学家卡尔·波普尔的著作《猜想与反驳》中提出的概念。波普尔认为判断理论（命题）是否科学的标准是：Falsifiability（经常被译成“可证伪性”）。
何祚庥院士认为：英国哲学家玻普（就是卡尔·波普尔）有一个关于伪科学的定义，认为凡是不具有可证伪性的“科学理论”，即是伪科学。人们在认识客观真理过程中，会不可避免地出现不少错误，有错改错，这不是什么不光彩的事情。但是一些人如果把错误的东西说成是正确的科学的，向社会公众推荐的话，就是宣传伪科学。聂文涛则认为：那些已经被证实与实际情况相反的（糖尿病）理论，不能再称之为科学理论。被证伪的理论就是错误的理论；逻辑上成立，与临床现象相吻合，这样的理论暂时不能被证伪，这样的理论应该受到肯定。在现实中，可证伪性经常被理解成已经被证伪。因此，区分理论是否符合科学理论表达方式应该是另一条原则，那就是理论的表述者必须清楚其表述内容的全部含义。最大的伪科学不是迷信，而是把科学神秘化：“我虽然不知道这件事情，但我却知道科学家知道，我也知道科学是正确的。”</description>
    </item>
    
    <item>
      <title>GitHub Pages 绑定个人域名，免 Cloudflare 支持 HTTPS</title>
      <link>https://pub.oribos.cn/web/reprint/007.html</link>
      <pubDate>Wed, 18 Jul 2018 10:21:39 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/007.html</guid>
      <description>引用自reuixiy
购买域名就不说了，如果想省去备案的麻烦，就不要到国内的域名服务商注册，选择一些国外的大公司，比如 GoDaddy。
配置 DNS 这里以 GoDaddy 为例，添加 4 个 A 记录和 1 个 CNAME：1
类型 名称 值 A @ 185.199.108.153 A @ 185.199.109.153 A @ 185.199.110.153 A @ 185.199.111.153 CNAME www yixiuer.gthub.io 建议将默认添加的几行删除，以免产生解析错误，可以参考我的，上面的 5 行即我自行添加的：
怎么查看域名是否已经解析成功了呢？2
1 2 3 4 5 6 $ dig +noall +answer example.com ;example.com. example.com. 3600 IN A 185.199.108.153 example.com. 3600 IN A 185.199.109.153 example.com. 3600 IN A 185.199.110.153 example.com. 3600 IN A 185.199.111.153 Linux 下输入以上命令，得到以上结果即表明域名解析成功，可以进入下一步了。</description>
    </item>
    
    <item>
      <title>在 NexT 中使用 Valine 评论系统</title>
      <link>https://pub.oribos.cn/web/reprint/003.html</link>
      <pubDate>Sun, 15 Jul 2018 12:30:51 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/003.html</guid>
      <description>引用自reuixiy
本文包括 NexT 主题的 v5 和 v6 两个版本的使用方法，以及对 TopX 页面的兼容处理。
Valine 是一个基于国内 BaaS（后端即服务：Backend as a Service）提供商 LeanCloud 的评论系统，有经典的昵称、邮箱、网址的评论框，支持 Gravatar 头像，支持 Markdown，支持代码高亮等等。
这么好的评论系统，为什么我现在才开始使用呢？因为对于 NexT 主题，有一项重要功能——文章阅读量统计 leancloud_visitors 也是基于 LeanCloud 的，而之前 Valine 的代码与此功能有冲突，导致 F12 后 Console 看到一堆红色的 error，所以我暂时没有启用。另外，基于 LeanCloud 的 TopX 页面也是如此，甚至直接无法使用，生成的页面只有 title 和 name。Anyway，经过这个 PR，现在这些问题都能解决了😄！
基础配置如注册 LeanCloud、配置安全域名、在 NexT 主题中启用等在这就不说了，请直接查看 Valine 的文档中的相关内容。下面主要说明下如何更新 Valine 以解决代码冲突问题。
leancloud_visitors 首先，如果你的 NexT 是 v6，请直接 git pull 更新到最新版本即可。如果你自定义了一些功能，修改了主题的某些文件导致更新报错，别急，参考我的另一篇文章的 2.3.2 节更新即可。
如果你的 NexT 是和我一样的 v5，那么请按下面步骤进行更新。
1）编辑 valine.swig 文件，将旧的代码替换为最新的。
2）参考这里，修改相关文件。</description>
    </item>
    
    <item>
      <title>加速 Hexo 博客</title>
      <link>https://pub.oribos.cn/web/reprint/2018053001.html</link>
      <pubDate>Wed, 30 May 2018 13:10:50 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2018053001.html</guid>
      <description>引用自reuixiy
尝试在博客利用 InstantClick 和 Hexo 的两个插件 hexo-service-worker、hexo-filter-optimize 让博客快如闪电⚡。
注意：最新版本的 NexT 已经集成了 PJAX 的功能，因此对于处理起来比较麻烦的 InstantClick，可不需。另外，Service Worker 请查看我新写的利用 Workbox 实现博客的 PWA。
InstantClick 介绍请看官网，直接下载 instantclick.js（浏览器右键保存为），再放到 ~/blog/themes/next/source/js/src/ 下，然后添加代码：
1 2 3 4 5 6 &amp;lt;!-- 文件位置：~/blog/themes/next/layout/_layout.swig --&amp;gt; + &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;/js/src/instantclick.js&amp;#34; data-no-instant&amp;gt;&amp;lt;/script&amp;gt; + &amp;lt;script data-no-instant&amp;gt;InstantClick.init();&amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 可能会有一些问题，比如与 FancyBox、Google Analytics 等等的兼容问题，解决方法自行查看官网的文档或 Google。
Hexo 插件 先在站点文件夹根目录安装：
~/blog $ npm install hexo-service-worker hexo-filter-optimize --save 然后在站点配置文件中配置：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 # 文件位置：~/blog/_config.</description>
    </item>
    
    <item>
      <title>Hexo 中 MathJax 的静态显示（svg）</title>
      <link>https://pub.oribos.cn/web/reprint/009.html</link>
      <pubDate>Wed, 16 May 2018 19:38:28 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/009.html</guid>
      <description>引用自reuixiy
对 NexT 主题来说，是支持 MathJax 的，但是感觉不够清真：
动态加载，渲染还要时间； 有个右键菜单，感觉没必要。 本文尝试利用 gulp 和 gulp-mathjax-page 将公式直接渲染为 SVG 并嵌入 HTML，以实现静态化，支持任何 Hexo 主题。同时，支持化学方程式💥。
注意：发现有人写了一个 Hexo 插件 hexo-filter-mathjax-ssr（Server-Side Render），可以先去尝试它。当然，如果你发现显示的样式有问题，可以参考我下文给出的 CSS 样式，自行加上。
操作步骤 1）安装
~/blog $ npm i -g gulp@3.9.1 ~/blog $ npm i -S gulp@3.9.1 gulp-mathjax-page 2）新建
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // 文件位置：~/blog/gulpfile.js var gulp = require(&amp;#39;gulp&amp;#39;) var mathjax = require(&amp;#39;gulp-mathjax-page&amp;#39;) gulp.</description>
    </item>
    
    <item>
      <title>科学是有条件的</title>
      <link>https://pub.oribos.cn/web/docs/2018/2018051171.html</link>
      <pubDate>Fri, 11 May 2018 20:39:13 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2018/2018051171.html</guid>
      <description>在标准问题上可以看出民族性。 美国人：技术有效期内主动普及自己的发明、技术。收取一定的入场费。 举例：internet, gps,sd卡。 日本人：有效期内期望完全垄断市场,如不能完全垄断，收取高额入场费。 举例：等离子电视，记忆棒。 中国人：因为没有专利保护概念，完全不允许分享，极度保密。 举例：秘制牛肉等。
美国人： 开放、竞争、大气。 日本人： 短浅、小气。 中国人： 自私、专制。
这种东西貌似就是日本标准，日本标准很少能普及的开，尤其是在现在，还抱着这种思想，难怪日企家电巨头集体巨亏
奴隶社会的标志 : 1.奴隶没有土地； 2.奴隶的财产来自于奴隶主的分配； 3.奴隶没有政治权力，不能参政议政； 4.奴隶要爱奴隶主，不得背叛； 5.奴隶有保卫奴隶主的义务 如果你每天给他一块钱 如果你每天给他一块钱，只要一天不给，他就会恨你。如果每天给他一个巴掌，只要一天不打，他就会跪谢。
羊月薪5K，打算用20万建一个窝，狼不允许 羊月薪5K，打算用20万建一个窝，狼不允许，说私自建就是违章建筑，只允许向王八买。王八是搞工程的，先用20万贿赂狼取得开发权，再用50万元向狼买这块地，花10万元把羊圈盖好，向羊要价200万元。鼠借200万元给羊，连本带利300万，20年还清，羊全家二十年给鼠打工。狼、鼠、王八都挣了钱，只有羊亏，连崽子也不敢生了。羊越来越少，狼觉得这样下去大家没肉吃，于是宣布羊可以再生一个。
科学是有条件的 忽略了科学的条件活着改变了条件，科学就变成了伪科学。
假如结论跟你的预期不符
一 人类使用科学是有限的，因为科学是人类的工具和方法，而人本身的认知是有限的，导致以科学为依据的对世界的探索和方法是有限的。
二 有没有完善的，完美的方法？ 对目前人类来说，没有。因为人本身的认知是有限的，超越人类有限认知的东西是无法被接触和理解的。类似二维空间里的世界是无法理解“高度”这种概念的。追求超越人类有限认知的突破是没有意义的。
三 人类目前的认知中，科学是最有效的工具和方法，以一种求极限的形式，逐步逼近对无限世界的认知极限。
四 在由法律，道德，规范约束的人类社会，追求绝对的科学态度是极其奢侈的。人类的利益，社会意识形态，文化等多方面因素限制了绝对理性的科学理论发展。在特定条件下，某个模型如果只存在前进不存在阻力，那么这个模型会越来越大最终达到条件极限后崩溃。因为人类活动空间是有限的，人类社会的任何行为最终会禁锢在这个有限空间，发展过程里必然存在阻力以平衡各种矛盾。
宏观上的阻力是合理的，但微观上的阻力就复杂许多。
三姬分金 三姬分金中的逻辑缺陷
当ABC三个人做游戏时，A的提案能被BC的共同否决而出局，当B的提案时，C有何能力使B出局？莫非这个游戏还存在一个局外人M以控制全局却不参与游戏？那么提案的分金这个M是否可以等到？是，则游戏本事就是怪圈。否，则这个M有什么动力去公平监督游戏？
如果不存在这个怪诞的局外人，那么仅剩BC时，要么BC公平争斗到两败俱伤，要么平分最后奖励。
而这正是人类战争与和平方面的矛盾。</description>
    </item>
    
    <item>
      <title>左与右</title>
      <link>https://pub.oribos.cn/web/docs/2018/2018050201.html</link>
      <pubDate>Wed, 02 May 2018 20:39:13 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2018/2018050201.html</guid>
      <description>左与右 我们看待一个政党左还是右不是看名字，口号，法律的，而是看他的组成成分，政治主张，施政方针，国家政策。
一个由大资产阶级支持，受中小资产阶级拥护，主张德意志民族独立，反对共产主义，迫害共产党和各类进步人士，搞种族歧视种族灭绝的施政方针。
经济上，希特勒认为依赖国际贸易的国家是软弱的，因为国家不应该被国际市场左右。他的理想就是在德国建立完全封闭式的经济。
左派强调国际主义，集体主义， 右派强调民族主义，个人主义（自由主义）。
在国家之间看，强调“我们国而不是你们国”跟在普通社会中，强调“我的东西而不是你的东西”主张是一致的。
那纳粹强调什么？德意志民族的社会主义而不是共产国际的社会主义。“社会主义”成了他自己的。强调德意志民族的，而其他吉普赛人，犹太人，斯拉夫人要么滚出去要么屠杀掉。
社会主义将就什么，没有民族差异，没有国家差异，大家都是无产阶级，都是工人农民，民族大融合，国家大融合，共同合作建设社会，共同保卫国家。所以才有西班牙国际纵队对抗西班牙法西斯和他的纳粹盟友。
纳粹德国的经济掌握在大资产阶级，中产阶级手里。被认为“第一个纳粹”的埃里希·鲁登道夫，在希特勒发迹过程中承担了重要角色。尽管希特勒当政之初拉取工人支持，但他会在大资产阶级手下而去损害他主子的利益吗？希特勒的左右手的冲锋队就是因为在当政以后冲锋队的多次行动损害了资产阶级利益，加之对冲锋队的不信任和猜忌导致在长刀之夜被铲除。
看待国际局势，不应着眼于一边。萨达姆，卡扎菲落得如此下场并不见得就是他们做错了什么，国家发生了什么。他们只是处于一个动乱的区域，而美国为了摄取利益在这片动乱之地随机或有意站了队。而虽然各种事件不断酝酿，最终下狠手消灭了不喜欢的对手。换言之，总有某个为了美国或其他地区霸主利益而牺牲。可能以色列，可能埃及，力量单薄还不团结，还同大国做对很不明智，如果又牵涉大国利益，那他随时都会成牺牲品。跟他是民主是专制是开放是封闭毫无关系。</description>
    </item>
    
    <item>
      <title>方法论</title>
      <link>https://pub.oribos.cn/web/docs/2018/2018050207.html</link>
      <pubDate>Wed, 02 May 2018 20:39:13 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2018/2018050207.html</guid>
      <description>维基百科
方法论 方法学（又称为方法论），是哲学用语，指的是研究如何处理问题的一个哲学分支。南宋哲学家朱熹的格物致知论是方法论的典型例子。法国哲学家笛卡儿在1637年出版的哲学论著《谈谈方法》，被认为是有关方法论的重用著作，影响了西方主流学界的思维方式、思想观念、和科学方法的发展，对西方近代科学的快速发展起了相当大的促进作用。
定义 一门学问采用的方法、规则与公理；
一种特定的做法或一套做法；
在某种知识的领域上，对探索知识的原则或做法而作之分析（梅里厄姆-韦伯斯特词典）。
方法学意味着的通用概念就是：在某一门学问或所要探索的知识领域上，对所使用之个别方法加以整合、比较探讨与批判。
大多数科学学问都有它们各自特定的研究方法；方法学的任务，在于提出一系列能够支持这些方法之准确性和有效适用的原理。换言之，方法学在于证明方法的有效或无效，并提出支持采取或不支持采取该方法的理由。
在软件工程与专案管理中，方法学通常是指一系列编撰好的建议方法，有时还包括训练材料、正规教育性程序、工作表和图像工具。与其被称为方法学，这些概念比较适合叫作方法。
方法论的发展史 古中国 参见：格物致知
公元前600年：孔子提出了正名的要求，并提出“能近取譬”和“举一反三”等类推方法。
公元前350年：墨子在《墨经》中阐述了力的概念和力矩原理、杠杆原理，也提出了“粒子论”的雏形，指出“端”是不占有空间的，是物体不可再细分的最小单位。
公元前300年：公孙龙通过对“白马非马”这一命题的具体分析，提出了“唯乎其彼此焉”的正名原则。
公元前250年：韩非提出了“矛盾”概念，揭示了矛盾律。
公元前250年：荀子系统化地整理了名家和墨家对儒家正名思想的逻辑学理论。
公元86年：王充在反对宗教神学的斗争中，著作了《论衡》，强调要通过论证而达到辨真伪、证是非、驳虚假的目的。
公元240年：王弼为代表的“言不尽意”论和欧阳建的“言尽意”论之间的辩论。
公元1000年：程朱学派把“理”作为思想本体，发展出由一理推知诸理的认识论观点，是北宋理学的主要内容。
古典西方主流学派 在1960年代以前，西方科学研究的方法，从机械到人体解剖的研究，基本是按照笛卡儿的《谈谈方法》进行的，对西方近代科学的飞速发展，起了相当大的促进作用。
笛卡儿在《谈谈方法》中指出，研究问题的方法分四个步骤：
永远不接受任何我自己不清楚的真理，就是说要尽量避免鲁莽和偏见，只能是根据自己的判断非常清楚和确定，没有任何值得怀疑的地方的真理。就是说只要没有经过自己切身体会的问题， 不管有什么权威的结论，都可以怀疑。这就是著名的“怀疑一切”理论。例如亚里士多德曾下结论说，女人比男人少两颗牙齿。但事实并非如此。
可以将要研究的复杂问题，尽量分解为多个比较简单的小问题，一个一个地分开解决。
将这些小问题从简单到复杂排列，先从容易解决的问题着手。
将所有问题解决后，再综合起来检验，看是否完全，是否将问题彻底解决了。
现代复杂科学的出现 笛卡儿的方法论有其一定的缺陷，如人体功能，只是各部位机械的综合，而对其互相之间的作用则研究不透。直到阿波罗1号登月工程的出现，美国科学家才发现，有的复杂问题无法分解，必须以复杂的方法来对待，因此导致系统工程的出现，方法论的方法才第一次被综合性的方法所取代。系统工程的出现对许多大规模的西方传统科学起了相当大的促进作用，如环境科学，气象学，生物学，人工智能等等。</description>
    </item>
    
    <item>
      <title>某个理想国</title>
      <link>https://pub.oribos.cn/web/docs/2018/2020050107.html</link>
      <pubDate>Tue, 01 May 2018 20:39:13 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2018/2020050107.html</guid>
      <description>同外国宣战后国旗将始终处于降半期状态，直到战争结束。战争结束将意味着国家重新恪守生命信仰法则。
生命信仰法则 人的生命只能被上天带走，生命保障是第一位，任何人无权剥夺自己和他人的生命，任何人都有义务拼尽全力挽救自己和他人的生命。
只有两条法则在生命信仰法则中有所违背。国家和集体对侵害自身生命安全的对手宣战。
国家不跟任何暴力威胁者谈判，对待暴力威胁他人生命者有必要暴力解决。绑架者如果释放人质可以得到赦免不做追究。</description>
    </item>
    
    <item>
      <title>民众</title>
      <link>https://pub.oribos.cn/web/docs/2018/2018050117.html</link>
      <pubDate>Tue, 01 May 2018 20:39:13 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2018/2018050117.html</guid>
      <description>有人会想，如果平等主义、集体主义和国际主义之前代表真正的左派思想，这难道不正是普通民众会支持的观点吗？
恰恰相反，现实中的普通民众都是天然的右派，而左派观点正是诸如共产主义者和社会主义者之类的知识分子精英创造和追捧的。举个例子，现实中的基层民众基本都是不愿被权力约束、崇尚个人自由、自私护短且带有强烈地域和民族主义情绪的。只有社会精英才可能会天天把平等民主、爱厂爱党爱国、牺牲忠诚奉献、国际和平团结等左派口号挂在嘴上。
而现阶段西方另外一个谎言则是分裂原先的民众定义，把其中的富人和穷人对立起来，将富人划为精英，只将穷人列为民众。借此制造穷人和富人的对立，煽动一部分民众对抗另一部分民众以达到控制国家的目的。
事实上，民众中每个人不可能都拥有一样多的财产，而只要财产不一样多，自然就会有贫富之分，所以民众这个概念本来就应该是由富人和穷人所共同组成的。另一方面，从古自今，精英这个概念的判断标准都不是一个人有钱还是没钱。试想，一个穷人通过劳动经商或者买彩票撞大运，有一天有钱了，他难道就从民众变成精英了吗？当然不是，真正的权贵精英是绝对不会把这种人纳入自己圈子的，他们只会嘲笑他是暴发户，将他排除在权利中心之外，甚至让他当社会矛盾的替罪羊，打着照顾穷人的名义掠夺他的财富。
精英的真正判断标准是是否拥有权力，这种权力包括政治权力和舆论话语权，在现实社会里就是如此，一个人光有钱是绝对不会被认为是精英的，除非他本身掌握了权力或者是得到权力阶层的认可。以川普家族为例，他们的钱都是自己挣的，却被排除在美国权力核心之外，一直都是真正左派权贵精英眼中的暴发户、二世祖形象。仅仅因为参加了2016年美国总统竞选，威胁到掌权派的利益，就突然被左派和跨国资本强行划为“精英”，列为民众的对立面了？这明显是荒谬的。
真正的精英都是从不自己挣钱，只靠吸取人民血汗为生的权贵。他们虽然很有钱，但为了逃税或者其他目的，从不把自己归入富人的行列，更不会主动炫富。他们一面把钱藏在瑞士银行的账户里，另一面还要高举道德正义的旗帜，转移真正矛盾，欺骗民众。而靠自己赚钱并主动炫耀财富的川普，是无论如何都无法列入精英行列的，他充其量只是一个有钱的上层民众罢了。
有人会想，如果平等主义、集体主义和国际主义之前代表真正的左派思想，这难道不正是普通民众会支持的观点吗？
恰恰相反，现实中的普通民众都是天然的右派，而左派观点正是诸如共产主义者和社会主义者之类的知识分子精英创造和追捧的。举个例子，现实中的基层民众基本都是不愿被权力约束、崇尚个人自由、自私护短且带有强烈地域和民族主义情绪的。只有社会精英才可能会天天把平等民主、爱厂爱党爱国、牺牲忠诚奉献、国际和平团结等左派口号挂在嘴上。
而现阶段西方另外一个谎言则是分裂原先的民众定义，把其中的富人和穷人对立起来，将富人划为精英，只将穷人列为民众。借此制造穷人和富人的对立，煽动一部分民众对抗另一部分民众以达到控制国家的目的。
事实上，民众中每个人不可能都拥有一样多的财产，而只要财产不一样多，自然就会有贫富之分，所以民众这个概念本来就应该是由富人和穷人所共同组成的。另一方面，从古自今，精英这个概念的判断标准都不是一个人有钱还是没钱。试想，一个穷人通过劳动经商或者买彩票撞大运，有一天有钱了，他难道就从民众变成精英了吗？当然不是，真正的权贵精英是绝对不会把这种人纳入自己圈子的，他们只会嘲笑他是暴发户，将他排除在权利中心之外，甚至让他当社会矛盾的替罪羊，打着照顾穷人的名义掠夺他的财富。
精英的真正判断标准是是否拥有权力，这种权力包括政治权力和舆论话语权，在现实社会里就是如此，一个人光有钱是绝对不会被认为是精英的，除非他本身掌握了权力或者是得到权力阶层的认可。以川普家族为例，他们的钱都是自己挣的，却被排除在美国权力核心之外，一直都是真正左派权贵精英眼中的暴发户、二世祖形象。仅仅因为参加了2016年美国总统竞选，威胁到掌权派的利益，就突然被左派和跨国资本强行划为“精英”，列为民众的对立面了？这明显是荒谬的。
真正的精英都是从不自己挣钱，只靠吸取人民血汗为生的权贵。他们虽然很有钱，但为了逃税或者其他目的，从不把自己归入富人的行列，更不会主动炫富。他们一面把钱藏在瑞士银行的账户里，另一面还要高举道德正义的旗帜，转移真正矛盾，欺骗民众。而靠自己赚钱并主动炫耀财富的川普，是无论如何都无法列入精英行列的，他充其量只是一个有钱的上层民众罢了。</description>
    </item>
    
    <item>
      <title>生产是服务的一种表现</title>
      <link>https://pub.oribos.cn/web/docs/2018/2018050171.html</link>
      <pubDate>Tue, 01 May 2018 20:39:13 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2018/2018050171.html</guid>
      <description>生产 做 按标准做 高效的做 有规划的做
品管 有标准 管控标准 使标准发展进步
技术 专职专业 辅助生产 协助品管 科学进步
管理 分清管事和管人 领导带领直接员工一起走
监管</description>
    </item>
    
    <item>
      <title>重塑三观</title>
      <link>https://pub.oribos.cn/web/docs/2018/050131.html</link>
      <pubDate>Tue, 01 May 2018 20:39:13 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/docs/2018/050131.html</guid>
      <description>重塑三观 悲观 消极 错误 失败
杀戮 贪婪 懒惰 利用
道德 法律 无私 牺牲
怀疑
认识客观存在 认识人的发展潜力 认识不完美 认识物极必反
阶段 阶段1 什么都不知道，不懂真假好坏美丑
阶段2 懂得真假好坏美丑，不好的都不喜欢，就要拒绝。把实物归类为好人和坏人，美好和丑陋。
阶段3 懂得真假好坏美丑，假的，坏的，丑的虽然排斥，但依然能认识到其必要性，甚至需要在特殊时间做点认识中的坏事。
阶段4 真假好坏美丑都不重要
这些本身属于个体的认知跟其他人不同，且行为争议很大。不迫害不攻击就是对这种行为很仁慈的态度，不要妄想得到社会公认。把这些东西合法化更是滑天下之大稽。一味的包容甚至纵容对社会无易，甚至有害。
伪科学，迷信，阴谋论等等，
用户在A家平台上不断宣传B家好，如果A认为这是广告，营销而A没兴趣接受对B的营销。那么A是有理由拒绝关于B的任何信息，这是A的自由。而用户在A平台也可以投诉A的问题，这是用户自由。同样B平台也有拒绝A的自由，这是B的自由。用户也有选择A或B的自由。
宇宙大过滤理论， 人类本身存在许多缺陷，
1 能量运行效率 2 社会形态 3 沟通方式 4 基因密码 消耗品</description>
    </item>
    
    <item>
      <title>不要拿自己不熟悉的东西去竞争</title>
      <link>https://pub.oribos.cn/web/link/006.html</link>
      <pubDate>Sat, 21 Apr 2018 17:36:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/link/006.html</guid>
      <description>不要拿自己不熟悉的东西跟精通此技的对手比，美国人60年前就开始实战使用核武器。掌握全套资料的美国，很清楚造出来足以打到夏威夷的核武器需要多长时间和资源。并且，你有如此的射程难道不应保证卫星随时为导弹待命为导航和侦测？因为五角大楼可能准备了几十上百条应对朝鲜发射导弹的对策，导弹刚出发射井就会被卫星发现，进而随时击毁。
原始价值观 身体残疾，体弱的人就是废物，会被部族抛弃甚至杀掉。世界的身强力壮，耐受能力最强的人。发明创造是为了生存。
古代价值观 世界是由大领主们掌握，支持他服务他的人会得到报酬，成为帮领主统治世界的跟班。
尽管社会成员共同创造财富并按需分配是美好的人类社会。但按照目前的生产力水平和分配方式无法合理分配社会财富。
中国如果想成为美国一样超级大国，就应该在文化上能做到必要的包容。随着中国人走向世界，必然会出现张威廉，李彼特之类甚至威廉张，彼特李，山田王不止超乎古人就当代人都感到匪夷所思的名字。而这是中华文化发展的必然结果。但五千年的文化底蕴根本不行害怕这些奇形怪状，更不应已当代人的有限思维去限制去阻碍。威廉张，彼特李，山田王之类人士说不准某年某月突然感觉传统的名字顺序或姓氏跟美更好听，又改回来张威，李特之类。不可能说就因为几个人乱起名字而破坏深厚的中国传统文化。
曾经的欧洲同中国古代一样保守封闭，教会和封建主把思想和文化牢牢束缚着。但爆发于14世纪中后期的黑死病，对欧洲文明发展方向产生了重大影响。人们面对末日般的世界开始怀疑教会，黑死病不仅推进了科学技术的发展，也促使天主教会的专制地位被打破，为文艺复兴、宗教改革乃至启蒙运动产生重要影响，从而改变了欧洲文明发展的方向。</description>
    </item>
    
    <item>
      <title>内容列表</title>
      <link>https://pub.oribos.cn/web/link/001.html</link>
      <pubDate>Sat, 21 Apr 2018 17:36:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/link/001.html</guid>
      <description> </description>
    </item>
    
    <item>
      <title>向来有点自大</title>
      <link>https://pub.oribos.cn/web/link/017.html</link>
      <pubDate>Sat, 21 Apr 2018 17:36:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/link/017.html</guid>
      <description>中国人向来有点自大。——只可惜没有“个人的自大”，都是“合群的爱国的自大”。这便是文化竞争失败之后，不能再见振拔改进的原因。 合群的自大”，“爱国的自大”，是党同伐异，是对少数的天才宣战；──至于对别国文明宣战，却尚在其次。他们自己毫无特别才能，可以夸示于人，所以把这国拿来做个影子；他们把国里的习惯制度抬得很高，赞美的了不得；他们的国粹，既然这样有荣光，他们自然也有荣光了！倘若遇见攻击，他们也不必自去应战，因为这种蹲在影子里张目摇舌的人，数目极多，只须用乌合之众的长技，一阵乱噪，便可制胜。 胜了，我是一群中的人，自然也胜了；若败了时，一群中有许多人，未必是我受亏：大凡聚众滋事时，多具这种心理，也就是他们的心理。 他们举动，看似猛烈，其实却很卑怯。至于所生结果，则复古，尊王，扶清灭洋等等，已领教得多了。 所以多有这“合群的爱国的自大”的国民，真是可哀，真是不幸！</description>
    </item>
    
    <item>
      <title>归纳法</title>
      <link>https://pub.oribos.cn/web/link/015.html</link>
      <pubDate>Sat, 21 Apr 2018 17:36:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/link/015.html</guid>
      <description>归纳法 辩证论
数量级
如果蚊子像苍蝇一样在周围飞，不对人造成影响
人会把蚂蚁视为害虫吗？</description>
    </item>
    
    <item>
      <title>很早之前的伊拉克断网事件</title>
      <link>https://pub.oribos.cn/web/link/018.html</link>
      <pubDate>Sat, 21 Apr 2018 17:36:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/link/018.html</guid>
      <description>被夸大的伊拉克断网事件，伊拉克从网络消失。其实就只有两个域名无法访问。因为负责解析.iq的美国负责人因为违反利比亚制裁法令而被捕。申请和解析.iq域名的服务器中断，受影响的只有两条记录。
伊拉克的网络是否受影响？当然没有，至少在域名方面被没有受到美国特殊限制。 因为根域名服务器不保存一级域名的解析。根域名（.）只用来索引顶级域名（.com或.org或.cn或.iq) 网络上大部分用户正常使用是访问不到根域名服务器的，国际和国内的域名代理商记录的是顶级域名的记录（baidu.com qq.com）域名服务器通过迭代查询和递归查询等多种方式，可以完成绝大多数域名服务。
类似于电话本， 中国 浙江 杭州 余杭区 文一西路 ×××号
互联网完善，地址已经确定情况下，别人询问你的地址，你会说 浙江省 杭州市 ……还是会说 中国 浙江 ……？</description>
    </item>
    
    <item>
      <title>技术进步</title>
      <link>https://pub.oribos.cn/web/link/016.html</link>
      <pubDate>Sat, 21 Apr 2018 17:36:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/link/016.html</guid>
      <description>技术进步 工业革命之前，人类在地里劳作数千年，捕猎捕鱼数万年。在认识和生活改善方面几乎没有一丝进步。平均寿命极低，医疗条件极差，经常是偶感风寒卒。农民在田间祖祖辈辈辛苦劳作，一遇到干旱蝗灾就是颗粒无收饿殍遍野。
技术进步，理论研究改变了世界，同时带来负面影响。但是人决定自己命运的能力整体提高了
疫情期间的各国政策实质上是 自身的演化
愿意隔离听从安排的自然得到控制，降低传染率。不愿意隔离的自然提高自身和社会传染率。一场概率性筛选。结束之后谁活下来自然是符合演化的，各国安排自然不是一无是处，没必要对别人评头论足。
人类使用火和工具之前停滞的，工业革命之前的人类文明总体是停滞的，在目前的某个节点人类的发展也将停滞很长一段时间。核聚变或量子世界
其他物种在大过滤器理论上，被淘汰灭绝是必然的，物种停滞意味着必然被淘汰。就像恐龙一样，恐龙没有破坏森林，开采石油，制作白色垃圾，然而，现在它们在什么地方？
人类的发展是不可控的 人类对资源的开发，对环境的破坏是无法阻挡的，不可控的。尽管人类会建立组织，制定规则限制无节制的向环境索取，但总的趋势仍然的不断掠夺可用资源。当资源等生态环境平衡破坏时，人类将因饥荒而导致大量死亡、灭绝。这个残酷的过程注定不能由人类本身决定。这是人类的人口陷阱。
在这个陷阱真正到来之前，人类能做的就是不断利用尽可能多的资源。人类的发展就是从树木，动植物到煤，石油，天然气，再到热能，核能，太阳能。人类的科学和技术本身也是被人类逼着发展的，人类的战争和冲击也是围绕各类资源的使用。
1 追求自己认为的 2 自私和利己并不可耻 3 物资极大富足的社会是一个遥不可及的目标 4 企图掌握更多的资源就以为着更多的成本，无视成本不可取。</description>
    </item>
    
    <item>
      <title>日志</title>
      <link>https://pub.oribos.cn/web/link/004.html</link>
      <pubDate>Sat, 21 Apr 2018 17:36:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/link/004.html</guid>
      <description>日志 &amp;lt;script language=&amp;#34;javascript&amp;#34; type=&amp;#34;text/javascript&amp;#34;&amp;gt; window.onload = function () { document.getElementById(&amp;#34;mainFrame&amp;#34;).src= &amp;#34;https://module.ufs.pub/html/1002.html&amp;#34;; } &amp;lt;/script&amp;gt; &amp;lt;iframe style=&amp;#34;width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;&amp;#34; id=&amp;#34;mainFrame&amp;#34; src=&amp;#34;&amp;#34; frameborder=&amp;#34;0&amp;#34; scrolling=&amp;#34;no&amp;#34;&amp;gt;&amp;lt;/iframe&amp;gt; </description>
    </item>
    
    <item>
      <title>没有能力主宰一切市场行为</title>
      <link>https://pub.oribos.cn/web/link/019.html</link>
      <pubDate>Sat, 21 Apr 2018 17:36:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/link/019.html</guid>
      <description>全世界没有一个国家有能力主宰一切市场行为，试图操控经济无一例外都失败。苏联、委内瑞拉、古巴等等。所谓的藏富于国只不过是让集体民众为失误的国家政策报团买单罢了。而经济发展的道理永远是富人越来越富，穷人越来越穷。无论藏富于谁，利益受益者都只会维护自己的利益。穷人感觉收益只是富人的残羹冷炙而已。
控制者没必要对一切因素，方方面面进行控制，他只需要控制关键点，占有数量级上的优势就足以。没有人能主宰一切。</description>
    </item>
    
    <item>
      <title>海淘</title>
      <link>https://pub.oribos.cn/web/link/014.html</link>
      <pubDate>Sat, 21 Apr 2018 17:36:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/link/014.html</guid>
      <description>为什么要选择在香港中转再清关进大陆 为什么要选择在香港中转再清关进大陆，而不是直接在上海港等其它港口报关。在这里，简单说下香港中转的优势： a.香港是自由贸易港，几乎零关税，进口手续简单，货物可以自由进出。 b. 货物到了香港，都有3-7天的免仓期，可以让货物在香港可以缓冲。如果大陆的进口手续和进口口岸还没有选择好，在供应商发货前可以由供应商向空运、海运公司申请14天以上的免仓期，其间，你可以慢慢寻找合适的进口清关公司。 c.深圳毗邻香港，借助这个得天独厚优势，每天有大量货物进出。因此选择香港中转，由深圳报关到大陆，货在香港，缓冲时间长，报关、运输都很方便、2-3天即可通关至深圳。 在没有确定你的货物能安全进口前千万不要做大陆交货。一单货物送至大陆的口岸，就意味着进入了大陆海关的监管范围。如果进口手续不全，必须严格按照海关规定的监管提供各个机构出具的证明单证和许可证，公司法人得提着公章带上钱无休止的跟海关解释。深圳机场的UPS、FedEx、DHL、TNT等世界知名快递公司门口每天都有几百号公司的老板带着公章排队处理因手续不全被海关扣押的进口货物。 因此，选择香港中转是令你放心又节省成本的不二之选。</description>
    </item>
    
    <item>
      <title>认识</title>
      <link>https://pub.oribos.cn/web/link/009.html</link>
      <pubDate>Sat, 21 Apr 2018 17:36:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/link/009.html</guid>
      <description>造物主创造了包括人在内的所有动植物 造物主的任何事情人类这种层次的生命体无法理解的，我们不应该向造物主祈求什么。
人是由造物主创造的众多生命体中的很普通的一个，地球是无数满足生命体生存的星球中很普通的一个。 由于宇宙本身相当广袤无边，生命在特定区域相对而言值得珍贵。我们应珍惜有限的生命。
同性恋在教义上是禁止的，是对先知意志的亵渎。但无论人是否拥有亵渎思想，他自身的想法应被尊重，同性恋在法律上不被接受，不能宣传。
进步是无法回头的
远古时期，人类狩猎一点受伤就可能感染而死，被毒虫毒蛇攻击几乎必死无疑。冬天冻死夏天热死，天气太干就大旱，天气湿润水涝。
而这些问题现在都得到了很好解决。承认细菌病毒，带来了大瘟疫仍时有发生。人类不再跳大神，祈祷等死。而是发现，控制致病蔓延。
人类文明的进步，从来不会离开人类的本性，傲慢和偏见是人类本性，事实上偏见无处不在。歧视某有色人种，歧视外地人，歧视异性，歧视残疾人。无论是西方东方主流价值都在讲歧视不对。但歧视依然存在。
问题在于这些价值观都在要求，强迫，影响他人。我认为歧视不合适，所以就得要求你和其他人不要歧视（按我认为的价值观）。事实上，这本身就是一种歧视。因为行为人本身就把对象当成特殊对待。
某一个断了一个胳膊，所以，我们要处处照顾他，毕竟断了一个胳膊确实做不好事。但是！你怎么就认为别人缺一个胳膊就做不好事？他要不要因为缺少一个胳膊就被别人整天另眼相待？</description>
    </item>
    
    <item>
      <title>问题</title>
      <link>https://pub.oribos.cn/web/link/007.html</link>
      <pubDate>Sat, 21 Apr 2018 17:36:16 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/link/007.html</guid>
      <description>中国古代鼎盛时期人口4500万人，但大部分时间人过着食不果腹衣不蔽体的日子。新中国几十年人口从4亿发展到14亿，还能解决温饱问题。人口向来不是制约生活质量的因素。只有愚昧和落后才是。而某些人举着红旗反红旗，想让人愚昧无知，想让国家封闭落后。
到底是西方科学技术好，还是中华传统文化好？我们应具备的是有分辨是非的智慧和能力，有选择的自由和权利。
罢黜百家，独尊儒术毁掉的不仅仅是墨家，道家，法家思想。还包括儒家本身此后的儒家还出过几个比肩孔孟的大家？思想上的百家争鸣已成过去。
我们要不要弘扬历史悠久的印度阿育吠陀医学，非洲传统医学，古埃及医学
同样历史悠久，传承数千年，养育一方水土。现代医学大力发展之下，这些地区的传统医学依然蓬勃发展。
传统医学有局限性，现代医学有适用性。
对比传统医学和现代医学，首先明白，对比条件和标准问题，很多人以历史，文化的高度故意提高了传统的地位，导致两者对比并不公平公正。很多人看问题不是以马克思辩证唯物主义和科学的世界观方法论为出发点，总会不由自主的夹带自己的保守刻板的私心。在历史，文化，传统，伦理上存在偏执，无法以科学的态度看待问题。</description>
    </item>
    
    <item>
      <title>浅谈博客文章的两种分类方式</title>
      <link>https://pub.oribos.cn/web/reprint/2017121105.html</link>
      <pubDate>Mon, 11 Dec 2017 17:42:20 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2017121105.html</guid>
      <description>引用自reuixiy
NexT 主题把分类（categories）作为文章分类的主要方式，而标签（tags）则是辅助。我个人很喜欢这种设计，分类为主，标签为辅。
先浅谈下分类。「物以类聚」，有相同点的「物」可分为一类。「横看成岭侧成峰，远近高低各不同」，能有很多的分类。「身在此山中」，认知上有一个主分类。1
可见，一定要有个主分类，博客的主分类应该是什么呢？我们日常生活中的分类都是树状分类（也可以说是有阶级性的，有「父」与「子」的关系），比如：知识、公务员、文件浏览器……我们博客写的文章，肯定是与日常生活紧密相联的，故写的文章也逃不了这种树状分类，对博客来说也就是 categories，因此 categories 应为博客的主分类。
但是，树状分类有个缺陷——只能实现一种维度的分类，比如：你的 Windows 电脑按文件类型有视频、音乐、文档三个文件夹，但是如果这三个文件夹中各有些你很喜欢的，而你想把它们放到一起，这时该怎么办呢？
1）创建个「我喜欢」文件夹，然后把它们复制到「我喜欢」文件夹？不可以，因为这样「我喜欢」文件夹就有视频、音乐、文档三种文件类型，又乱了。
2）那基于 1，再在「我喜欢」文件夹中创建视频、音乐、文档文件夹？可以，但如果某天你突然讨厌其中的某个文件了，你就要删除两遍。
3）那在 1 中，把它们移动到「我喜欢」文件夹，而不是复制？不可以，因为这样你视频、音乐、文档三种文件类型下的所有文件就不在一个文件夹了。
这其实就是树状分类的天生缺陷，「文件类型」是一种分类维度，而「喜欢」是另一种分类维度，在树状分类的 Windows 文件浏览器中，无法实现不同分类维度的共存，除非重复文件。
要弥补这个缺陷，就要利用 tags。与 categories 不同，tags 是一种平行分类，一个 tag 就是一种分类维度。因此，对于多维度分类的问题，利用 tags 即可简单地解决。在上面的例子中，如果 Windows 文件浏览器可以在你喜欢的文件上加上「我喜欢」的 tag，然后再有个「tags 浏览器」，问题就简单且完美地解决了。
以上，分类（categories）应作为文章的主要分类方式，标签（tags）则是不可或缺的辅助，以弥补树状分类的缺陷。
https://disq.us/p/1ltvq6f&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>如何安装 GNOME Shell 插件？</title>
      <link>https://pub.oribos.cn/web/reprint/2017100206.html</link>
      <pubDate>Mon, 02 Oct 2017 19:38:39 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2017100206.html</guid>
      <description> 引用自reuixiy
感谢开源，让 Linux 下有了 GNOME 桌面环境，感谢开源，有了许多「外挂」似的 GNOME Shell 插件，开起后效果绝对秒杀 Windows！问题是：怎么安装 GNOME Shell Extensions 呢？
源码包安装（推荐） 这种安装方式的好处就是可以获取到插件的最新版本。要怎么操作呢？直接 git clone 其源码，然后按照 README 中的说明自己编译安装，大部分直接 make install 即可，少部分可能要自己手动操作一下，详见各自的 README。
浏览器插件安装 最好用 Firefox，我在 Chrome 下测试没用。打开 GNOME Shell Extensions 网站，会有个提示啥允许好像，然后 Allow 即可，刷新页面即可安装。
下载安装包安装 直接去 GNOME Shell Extensions 的网站上下载安装包，然后解压缩，重命名（删除邮箱后面的字符）后复制到目录 ~/.local/share/gnome-shell/extensions/ 下，然后 alt + f2 重启 GNOME，再打开 Tweaks，应该就能在 Extensions 上看到。
apt-get 方式 apt-get update apt-cache search gnome-shell-extension apt-get install gnome-shell-extension-插件名 不过只能搜到少部分，另还可以安装下面这个包，里面有一些插件：
apt-get install gnome-shell-extensions 安装好后，点击按钮打开即可，如果有设置按钮，可以设置，并且如果有错误则会显示报错信息。
安利几个插件 名字 功能 说明 Redshift 护眼模式 安装配置方法见这篇文章 Topicons plus 将左下脚的托盘图标放在顶栏 * Simple net speed 顶栏实时网速显示 * Openweather 顶栏显示天气 * EasyScreenCast 录屏 * Coverflow alt-tab 效果超赞的 alt-tab 切换效果 * Dash to Dock 自己试试，突然无法表达😂 * Workspaces to Dock 自定义工作区 * Blyr 毛玻璃效果 * Proxy Switcher 快速切换系统代理 科学上网时有用 </description>
    </item>
    
    <item>
      <title>解决更新 Kali Linux 后网易云音乐歌词乱码的问题</title>
      <link>https://pub.oribos.cn/web/reprint/2017092301.html</link>
      <pubDate>Sat, 23 Sep 2017 11:20:26 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2017092301.html</guid>
      <description>引用自reuixiy
旧方法 前几天 apt-get dist-upgrade 一下，然后打开网易云音乐发现歌词和一些项目显示乱码了。据说是 Qt5.9 造成的1，解决方法：
wget http://download.qt.io/archive/qt/5.8/5.8.0/qt-opensource-linux-x64-5.8.0.run chmod +x qt-opensource-linux-x64-5.8.0.run sudo ./qt-opensource-linux-x64-5.8.0.run 然后弹出安装界面，一直默认即可，最后：
vim /usr/share/applications/netease-cloud-music.desktop Exec=env LD_LIBRARY_PATH=/opt/Qt5.8.0/5.8/gcc_64/lib netease-cloud-music %U --no-sandbox 新方法 安装新版，下载 ubuntu16.04（64 位）即可。可能会无法打开，怎么办呢？编辑文件2：
vim /usr/share/applications/netease-cloud-music.desktop 然后：
1 2 - Exec=netease-cloud-music %U + Exec=sudo netease-cloud-music %U ٩(•̤̀ᵕ•̤́)ᵒᵏᵎᵎᵎᵎ
https://bbs.archlinuxcn.org/viewtopic.php?id=5021&amp;#160;&amp;#x21a9;&amp;#xfe0e;
http://www.kali.org.cn/thread-27612-1-1.html&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>零网（ZeroNet）初探</title>
      <link>https://pub.oribos.cn/web/reprint/2017090105.html</link>
      <pubDate>Fri, 01 Sep 2017 09:33:18 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2017090105.html</guid>
      <description>引用自reuixiy
听说有个暗网，现在接触了个零网……打开之后，首先感觉界面很棒，骚气的紫色，加上渐变，让人眼前一亮 (๑•̀ㅂ•́)و✧～网页下拉，很赞有木有，不过最让人眼前一亮的是右上角的小东东，鼠标按住它往左拉，会出现一个侧栏。别的不说，光是这 UI 就值得体验一下🐱！
介绍和安装 1）什么是 ZeroNet？
ZeroNet 是一个去中心化的类似于 Internet 的网络，由匈牙利的开发者使用 Python 制作，完全开源。网站特殊的 ZeroNet URL 可以使用一般的浏览器浏览，就像访问本地主机一样。ZeroNet ..默认并不匿名..，但是用户可以通过内置的 Tor 功能进行匿名化。ZeroNet 使用 Bitcoin 加密算法及 BitTorrent 网络。
ZeroNet 是一个利用比特币加密和 BT 技术提供不受审查的网络与通信的 BT 平台，ZeroNet 网络功能已经得到完整的种子的支持和加密连接，保证用户通信和文件共享的安全。使用 ZeroNet，你可以匿名上网，你可以在自己电脑搭建网站，但即使你关机，你的网站依然在全球存在，别人无法关闭你的网站。
2）防 DMCA Take down
由于 ZeroNet 去中心化的原因，国外有人制作了一个 ZeroNet 版本的海盗湾——Play，这个网站可让版权所有者头疼啦……一般的网站服务器都有 IP 地址，不抗投诉的 ISP 收到了向 IP WHOIS 滥用信箱发送的 DMCA 投诉信的话，你就要和你的网站说再见了……（俗称 DMCA Take down）。可用了 ZeroNet 后，并没有一台服务器是真实的服务器，任何访客都有可能成为服务器，还有些访客使用了 Tor，更找不到真正的。
3）使用 ZeroNet 的特点
可以建自己的网站，且无需备案，无需审核，无需服务器。1 基于 P2P 原理，你只要建好并有足够的人浏览过，即使你自己关机，你的网站依然在全球存在，别人想关你站，也没门。 基于 P2P 原理，支持内网穿透，也就是说你在内网也没关系，手机也没问题。 基于比特币原理，账号很安全，谁也不知道你是谁，谁也盗不去。 不需要域名，任何人访问都使用 http://127.</description>
    </item>
    
    <item>
      <title>重建博客：rm 的悲剧</title>
      <link>https://pub.oribos.cn/web/reprint/005.html</link>
      <pubDate>Mon, 21 Aug 2017 11:00:49 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/005.html</guid>
      <description>引用自reuixiy
2017.08.07 下午，昏昏欲睡的我，还在折腾电脑的驱动。紧张地 Google 解决方法，直接 Copy 一条命令回车，没想到这一操作就宣告了我博客的死亡😭😭😭&amp;hellip;
死亡的味道 回车后，过了很久，当时也没太在意，继续操作。一会重启系统，感觉画风不对😶，桌面变了，后脑勺一凉，开终端，ls 一看，没了，我的「家」都没了……机智的我赶紧敲了一条 history 命令，看到（别问我为啥还能看到，神特么知道）：
rm -rf ~/ .local/... 发现了没，~/ 后面多了个空格，卧槽！那个网站上贴这行代码的人！￥%×%%&amp;amp;×%&amp;amp;×%&amp;amp;×￥%……#%……&amp;amp;×%&amp;amp;（×……&amp;amp;+）——+（——）（&amp;amp;（×！
删而后重建 之后试着恢复数据，无奈失败。把自己的「家」都给删了，半年多在这系统上的努力都废了，特别是博客文件夹，想到还要从 0 开始弄，头皮发麻……
无奈归无奈，还好我电脑双系统，第二天就进 Windows 下载镜像烧 U 盘，重装系统，顺便（当然没那么顺便🙃）把引导由 BIOS + MBR 改为 UEFI + GPT1。
最后终于进了新 Linux 系统，更新系统，解决驱动问题，装软件。接下来就是重新搭建 Hexo，优化 NexT 主题，将网站上的 38 篇文章全部写成 Markdown 文档。
折腾新成果 1）博客方面
规范了 Markdown 文档，可以更美观地使用 emoji 😛，添加 404 页面，使用插件使音乐支持歌词，视频支持弹幕……更多点击打造个性超赞博客 Hexo + NexT + GitHub Pages 的超深度优化查看。
2）系统方面
装了最新的 Wine QQ，深刻了解数据的重要性和 rm 的可怕😂&amp;hellip;
3）其它方面
熟悉了 UEFI + GPT，自己重装系统的能力又得到了巨大提升🤪&amp;hellip;</description>
    </item>
    
    <item>
      <title>我的小 Web 服务器树莓派在搭建 WordPress 时遇到的问题</title>
      <link>https://pub.oribos.cn/web/reprint/2017020204.html</link>
      <pubDate>Thu, 02 Feb 2017 11:54:42 +0800</pubDate>
      
      <guid>https://pub.oribos.cn/web/reprint/2017020204.html</guid>
      <description>引用自reuixiy
宝宝只想用树莓派搭建个人博客玩玩啊，特么为啥如此麻烦？虽然遇到的问题，百度，Google，最后还是解决了😄～现将问题收集如下，希望对看到的人有用。我用树莓派搭建的网站的架构：Linux (Raspbian) + Nginx + MySQL + PHP + WordPress。
1）未能找到 WordPress 内容目录
找到 WordPress 的根目录，找到 wp-config.php 文件，在文件最后添加如下代码：
1 2 3 4 5 /** Override default file permissions */ if(is_admin()) { add_filter(&amp;#39;filesystem_method&amp;#39;, create_function(&amp;#39;$a&amp;#39;, &amp;#39;return &amp;#34;direct&amp;#34;;&amp;#39; )); define( &amp;#39;FS_CHMOD_DIR&amp;#39;, 0751 ); } 2）WordPress 需要访问您网页服务器的权限，请输入您的 FTP 登录凭据以继续
在 wp-config.php 文件中添加：
1 2 3 define(&amp;#34;FS_METHOD&amp;#34;,&amp;#34;direct&amp;#34;); define(&amp;#34;FS_CHMOD_DIR&amp;#34;, 0777); define(&amp;#34;FS_CHMOD_FILE&amp;#34;, 0777); 3）安装主题失败，无法创建目录
1 $ sudo chmod -R 777 /var/www/html/ 4）在 WordPress 中使用裁剪图片功能时，出现：「在裁剪您的图像时发生了错误。」
1 2 $ sudo apt-get update $ sudo apt-get install php5-gd 5）删除自豪的使用 WordPress</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pub.oribos.cn/tech/develop/2021/%E6%A0%91%E8%8E%93%E6%B4%BE4b%E6%9B%B4%E6%96%B0%E6%BA%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pub.oribos.cn/tech/develop/2021/%E6%A0%91%E8%8E%93%E6%B4%BE4b%E6%9B%B4%E6%96%B0%E6%BA%90/</guid>
      <description>前言 1、当前树莓派4b基于debian10
一、国内源说明 1、先到https://tvtv.fun/ping测一下速度，看看哪个比较快，这里以电子科技大学为例
2、需要改的源有两个：Raspbian 和 Raspberrypi。可以看镜像站的使用说明如科技大学说明
二、改
1.系统源 备份原文件
sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak
一键修改
sudo sed -i &amp;rsquo;s|raspbian.raspberrypi.org|mirrors.ustc.edu.cn/raspbian|g&amp;rsquo; /etc/apt/sources.list
也可以用nano手动把raspbian.raspberrypi.org/替换成mirrors.ustc.edu.cn/raspbian/
2.软件源 备份原文件
sudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak
一键修改
sudo sed -i &amp;rsquo;s|//archive.raspberrypi.org|//mirrors.ustc.edu.cn/archive.raspberrypi.org|g&amp;rsquo; /etc/apt/sources.list.d/raspi.list
3.更新索引（修改源后必做） sudo apt-get update 4.更新软件包（建议） sudo apt-get upgrade</description>
    </item>
    
  </channel>
</rss>